{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSetting.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ViewerSettingItem from './ViewerSettingItem';\nimport ViewerSettingColor from './ViewerSettingColor';\nimport * as settingActions from '../../reducers/viewerSetting';\nimport { subColor, defaultColor } from '../../styles';\nimport { SETTING_ITEM_TYPE, SETTING_ITEM_KEY, SETTING_ITEM_LABEL } from '../../constants/viewer';\nconst Container = styled.div.withConfig({\n  displayName: \"ViewerSetting__Container\",\n  componentId: \"sc-1omnhz6-0\"\n})([\"position:relative;\"]);\nconst ToggleButton = styled.div.withConfig({\n  displayName: \"ViewerSetting__ToggleButton\",\n  componentId: \"sc-1omnhz6-1\"\n})([\"cursor:pointer;\"]);\nconst SettingItems = styled.ul.withConfig({\n  displayName: \"ViewerSetting__SettingItems\",\n  componentId: \"sc-1omnhz6-2\"\n})([\"position:absolute;width:10em;left:50%;transform:translateX(-50%);overflow:scroll;list-style-type:none;margin:0;padding:0;border:1px solid \", \";background-color:\", \";\"], subColor, defaultColor);\n\nconst ViewerSetting = () => {\n  const {\n    fontSize,\n    padding,\n    lineHeight,\n    backgroundColor\n  } = useSelector(state => state.viewerSetting);\n  const {\n    0: isShowSetting,\n    1: setIsShowSetting\n  } = useState(true);\n  const {\n    0: settingItems\n  } = useState([{\n    type: SETTING_ITEM_TYPE.ITEM,\n    label: SETTING_ITEM_LABEL.FONT_SIZE,\n    key: SETTING_ITEM_KEY.FONT_SIZE,\n    value: fontSize,\n    action: settingActions.setViewerSettingFontSize\n  }, {\n    type: SETTING_ITEM_TYPE.ITEM,\n    label: SETTING_ITEM_LABEL.PADDING,\n    key: SETTING_ITEM_KEY.PADDING,\n    value: padding,\n    action: settingActions.setViewerSettingPadding\n  }, {\n    type: SETTING_ITEM_TYPE.ITEM,\n    label: SETTING_ITEM_LABEL.LINE_HEIGHT,\n    key: SETTING_ITEM_KEY.LINE_HEIGHT,\n    value: lineHeight,\n    action: settingActions.setViewerSettingLineHeight\n  }, {\n    type: SETTING_ITEM_TYPE.COLOR,\n    label: SETTING_ITEM_LABEL.BACKGROUND_COLOR,\n    key: SETTING_ITEM_KEY.BACKGROUND_COLOR,\n    value: backgroundColor,\n    action: settingActions.setViewerSettingBackgroundColor\n  }]);\n  const toggleShowNcs = useCallback(() => {\n    setIsShowSetting(!isShowSetting);\n  }, [isShowSetting]);\n  const renderSettingItem = useCallback(settingItem => {\n    const {\n      type,\n      key,\n      label,\n      value,\n      action\n    } = settingItem;\n\n    if (type === SETTING_ITEM_TYPE.COLOR) {\n      return __jsx(ViewerSettingColor, {\n        key: key,\n        label: label,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(ViewerSettingItem, {\n      key: key,\n      label: label,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }, []);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(ToggleButton, {\n    onClick: toggleShowNcs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"\\uC124\\uC815\"), isShowSetting && __jsx(SettingItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, settingItems.map(settingItem => renderSettingItem(settingItem))));\n};\n\nexport default ViewerSetting;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSetting.tsx"],"names":["React","useCallback","useState","useSelector","styled","ViewerSettingItem","ViewerSettingColor","settingActions","subColor","defaultColor","SETTING_ITEM_TYPE","SETTING_ITEM_KEY","SETTING_ITEM_LABEL","Container","div","ToggleButton","SettingItems","ul","ViewerSetting","fontSize","padding","lineHeight","backgroundColor","state","viewerSetting","isShowSetting","setIsShowSetting","settingItems","type","ITEM","label","FONT_SIZE","key","value","action","setViewerSettingFontSize","PADDING","setViewerSettingPadding","LINE_HEIGHT","setViewerSettingLineHeight","COLOR","BACKGROUND_COLOR","setViewerSettingBackgroundColor","toggleShowNcs","renderSettingItem","settingItem","map"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport ViewerSettingItem from './ViewerSettingItem';\nimport ViewerSettingColor from './ViewerSettingColor';\n\nimport * as settingActions from '../../reducers/viewerSetting';\n\nimport { subColor, defaultColor } from '../../styles';\n\nimport { SETTING_ITEM_TYPE, SETTING_ITEM_KEY, SETTING_ITEM_LABEL } from '../../constants/viewer';\n\nimport { ReducerState } from '../../interfaces';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst ToggleButton = styled.div`\n  cursor: pointer;\n`;\n\nconst SettingItems = styled.ul`\n  position: absolute;\n  width: 10em;\n  left: 50%;\n  transform: translateX(-50%);\n  overflow: scroll;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  border: 1px solid ${subColor};\n  background-color: ${defaultColor};\n`;\n\nconst ViewerSetting: React.FunctionComponent = () => {\n  const {\n    fontSize, padding, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const [isShowSetting, setIsShowSetting] = useState(true);\n  const [settingItems] = useState([\n    {\n      type: SETTING_ITEM_TYPE.ITEM,\n      label: SETTING_ITEM_LABEL.FONT_SIZE,\n      key: SETTING_ITEM_KEY.FONT_SIZE,\n      value: fontSize,\n      action: settingActions.setViewerSettingFontSize,\n    }, {\n      type: SETTING_ITEM_TYPE.ITEM,\n      label: SETTING_ITEM_LABEL.PADDING,\n      key: SETTING_ITEM_KEY.PADDING,\n      value: padding,\n      action: settingActions.setViewerSettingPadding,\n    }, {\n      type: SETTING_ITEM_TYPE.ITEM,\n      label: SETTING_ITEM_LABEL.LINE_HEIGHT,\n      key: SETTING_ITEM_KEY.LINE_HEIGHT,\n      value: lineHeight,\n      action: settingActions.setViewerSettingLineHeight,\n    }, {\n      type: SETTING_ITEM_TYPE.COLOR,\n      label: SETTING_ITEM_LABEL.BACKGROUND_COLOR,\n      key: SETTING_ITEM_KEY.BACKGROUND_COLOR,\n      value: backgroundColor,\n      action: settingActions.setViewerSettingBackgroundColor,\n    },\n  ]);\n\n  const toggleShowNcs = useCallback(() => {\n    setIsShowSetting(!isShowSetting);\n  }, [isShowSetting]);\n\n  const renderSettingItem = useCallback((settingItem) => {\n    const { type, key, label, value, action } = settingItem;\n\n    if (type === SETTING_ITEM_TYPE.COLOR) {\n      return (\n        <ViewerSettingColor\n          key={key}\n          label={label}\n          value={value}\n        />\n      );\n    }\n    return (\n      <ViewerSettingItem\n        key={key}\n        label={label}\n        value={value}\n      />\n    );\n  }, []);\n\n  return (\n    <Container>\n      <ToggleButton onClick={toggleShowNcs}>\n        설정\n      </ToggleButton>\n      {\n        isShowSetting\n        && (\n        <SettingItems>\n          {\n            settingItems.map((settingItem) => renderSettingItem(settingItem))\n          }\n        </SettingItems>\n        )\n      }\n    </Container>\n  );\n};\n\nexport default ViewerSetting;\n"]},"metadata":{},"sourceType":"module"}