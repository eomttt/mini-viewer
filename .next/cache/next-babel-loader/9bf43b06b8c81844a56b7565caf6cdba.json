{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCalculator from '../components/viewer/ViewerCalculator';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\nimport * as viewerActions from '../reducers/viewer';\nimport { getBookInfo, getStyleText } from '../lib/util';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\nimport Layout from '../components/Layout';\nvar Container = styled.div.withConfig({\n  displayName: \"viewer__Container\",\n  componentId: \"sc-1iklkx5-0\"\n})([\"padding:\", \"% \", \"%;height:\", \"px;background-color:\", \";text-align:center;overflow:hidden;\"], (100 - VIEWER_HEIGHT_RATIO) / 2, (100 - VIEWER_WIDTH_RATIO) / 2, function (props) {\n  return props.styleProps.height;\n}, function (props) {\n  return props.styleProps.backgroundColor;\n});\n\nvar Viewer = function Viewer(_ref) {\n  var book = _ref.book,\n      viewers = _ref.viewers,\n      styleText = _ref.styleText;\n  var spines = book.spines,\n      titles = book.titles,\n      ncx = book.ncx,\n      contributors = book.contributors;\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  var _useState4 = useState(0),\n      wholePageCount = _useState4[0],\n      setWholePageCount = _useState4[1];\n\n  var _useState5 = useState(false),\n      test = _useState5[0],\n      setTest = _useState5[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector.viewerCountList,\n      viewerPageCount = _useSelector.viewerPageCount;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.viewerSetting;\n  }),\n      fontSize = _useSelector2.fontSize,\n      widthRatio = _useSelector2.widthRatio,\n      lineHeight = _useSelector2.lineHeight,\n      backgroundColor = _useSelector2.backgroundColor;\n\n  var isAnalyzedSpine = useMemo(function () {\n    return viewerCountList.length >= viewers.length;\n  }, [viewerCountList, viewers]);\n  var isFirstPage = useMemo(function () {\n    return viewerPageCount === 0;\n  }, [viewerPageCount]);\n  var isLastPage = useMemo(function () {\n    return viewerPageCount === wholePageCount;\n  }, [viewerPageCount, wholePageCount]);\n  var selectedSpineIndex = useMemo(function () {\n    var spineIndex = 0;\n    var accurateCount = 0;\n    viewerCountList.some(function (viewerCount) {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  var pageColumnOffset = useMemo(function () {\n    var columnOffset = viewerPageCount;\n    viewerCountList.some(function (viewerCount, index) {\n      if (index < nowSpineIndex) {\n        columnOffset -= viewerCount.count;\n        return false;\n      }\n\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n  useEffect(function () {\n    console.log('TTTT');\n    setTest(true);\n  }, []);\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n    return function () {\n      dispatch(viewerActions.initViewerState());\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n  useEffect(function () {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      var pageCount = viewerCountList.reduce(function (acc, cur) {\n        return acc + cur.count;\n      }, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n  useEffect(function () {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n  var calculateViewerWidth = useCallback(function (nowWidth, newRatio) {\n    return Math.floor(Number(nowWidth) * (Number(newRatio) / 100));\n  }, []);\n  return __jsx(Layout, {\n    styleText: styleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(ViewerHeader, {\n    titles: titles,\n    authors: contributors,\n    ncxItem: ncx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(Container, {\n    styleProps: {\n      height: viewerHeight,\n      backgroundColor: backgroundColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, isAnalyzedSpine && __jsx(ViewerPage, {\n    viewerWidth: calculateViewerWidth(viewerWidth, widthRatio),\n    viewerHeight: viewerHeight,\n    pageColumnOffset: pageColumnOffset,\n    viewerSpine: viewers[nowSpineIndex],\n    isFirstPage: isFirstPage,\n    isLastPage: isLastPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), test && !isAnalyzedSpine && __jsx(ViewerCalculator, {\n    viewerWidth: calculateViewerWidth(viewerWidth, widthRatio),\n    viewerHeight: viewerHeight,\n    spines: spines,\n    viewers: viewers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), __jsx(ViewerBottom, {\n    sliderMaxValue: wholePageCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nViewer.getInitialProps = function _callee(context) {\n  var req, store, query, bookPath, queryPath, _require, EpubParser, _queryPath$split, _queryPath$split2, fileName, publicPath, _ref2, book, viewers, styleText, _store$getState, books, list, selectedBookInfo, _selectedBookInfo, _book, _viewers, _publicPath, _styleText;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req, store = context.store, query = context.query;\n          bookPath = query.bookPath;\n          queryPath = decodeURI(String(bookPath));\n\n          if (!req) {\n            _context.next = 24;\n            break;\n          }\n\n          // Server side render\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _queryPath$split = queryPath.split('/'), _queryPath$split2 = _slicedToArray(_queryPath$split, 2), fileName = _queryPath$split2[1];\n          publicPath = \"\".concat(req.protocol, \"://\").concat(req.headers.host, \"/\").concat(queryPath);\n          _context.prev = 7;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(getBookInfo(EpubParser, {\n            epubFile: fileName,\n            epubPath: queryPath\n          }));\n\n        case 10:\n          _ref2 = _context.sent;\n          book = _ref2.book;\n          viewers = _ref2.viewers;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(getStyleText(publicPath, book.styles));\n\n        case 15:\n          styleText = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            viewers: viewers,\n            styleText: styleText\n          });\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](7);\n          console.log('Error', _context.t0);\n\n        case 22:\n          _context.next = 33;\n          break;\n\n        case 24:\n          // Client side render\n          _store$getState = store.getState(), books = _store$getState.books;\n          list = books.list;\n          selectedBookInfo = list[0];\n          list.some(function (bookInfo) {\n            if (bookInfo.publicPath === queryPath) {\n              selectedBookInfo = bookInfo;\n              return true;\n            }\n\n            return false;\n          });\n          _selectedBookInfo = selectedBookInfo, _book = _selectedBookInfo.book, _viewers = _selectedBookInfo.viewers, _publicPath = _selectedBookInfo.publicPath;\n          _context.next = 31;\n          return _regeneratorRuntime.awrap(getStyleText(_publicPath, _book.styles));\n\n        case 31:\n          _styleText = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: _book,\n            viewers: _viewers,\n            styleText: _styleText\n          });\n\n        case 33:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[7, 19]], Promise);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx"],"names":["React","useState","useMemo","useEffect","useCallback","useSelector","useDispatch","styled","ViewerBottom","ViewerCalculator","ViewerHeader","ViewerPage","viewerActions","getBookInfo","getStyleText","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","Layout","Container","div","props","styleProps","height","backgroundColor","Viewer","book","viewers","styleText","spines","titles","ncx","contributors","dispatch","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","wholePageCount","setWholePageCount","test","setTest","state","viewer","viewerCountList","viewerPageCount","viewerSetting","fontSize","widthRatio","lineHeight","isAnalyzedSpine","length","isFirstPage","isLastPage","selectedSpineIndex","spineIndex","accurateCount","some","viewerCount","count","index","pageColumnOffset","columnOffset","console","log","Math","floor","window","innerWidth","innerHeight","initViewerState","pageCount","reduce","acc","cur","calculateViewerWidth","nowWidth","newRatio","Number","getInitialProps","context","req","store","query","bookPath","queryPath","decodeURI","String","require","EpubParser","split","fileName","publicPath","protocol","headers","host","epubFile","epubPath","styles","getState","books","list","selectedBookInfo","bookInfo"],"mappings":"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","sourcesContent":["import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\n\nimport styled from 'styled-components';\n\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCalculator from '../components/viewer/ViewerCalculator';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\n\nimport * as viewerActions from '../reducers/viewer';\n\nimport { getBookInfo, getStyleText } from '../lib/util';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\n\nimport { ReducerState } from '../interfaces';\nimport { EpubBook } from '../interfaces/books';\nimport Layout from '../components/Layout';\n\nconst Container = styled.div`\n  padding: ${(100 - VIEWER_HEIGHT_RATIO) / 2}% ${(100 - VIEWER_WIDTH_RATIO) / 2}%;\n  height: ${(props) => props.styleProps.height}px;\n  background-color: ${(props) => props.styleProps.backgroundColor};\n  text-align: center;\n  overflow: hidden;\n`;\n\ninterface Props {\n  book: EpubBook;\n  viewers: string[];\n  styleText: string;\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewers, styleText }) => {\n  const {\n    spines, titles, ncx, contributors,\n  } = book;\n  const dispatch = useDispatch();\n\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n  const [wholePageCount, setWholePageCount] = useState(0);\n  const [test, setTest] = useState(false);\n\n  const {\n    viewerCountList, viewerPageCount,\n  } = useSelector((state: ReducerState) => state.viewer);\n  const {\n    fontSize, widthRatio, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const isAnalyzedSpine = useMemo(() => viewerCountList.length >= viewers.length, [viewerCountList, viewers]);\n  const isFirstPage = useMemo(() => viewerPageCount === 0, [viewerPageCount]);\n  const isLastPage = useMemo(() => viewerPageCount === wholePageCount, [viewerPageCount, wholePageCount]);\n  const selectedSpineIndex = useMemo(() => {\n    let spineIndex = 0;\n    let accurateCount = 0;\n    viewerCountList.some((viewerCount) => {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  const pageColumnOffset = useMemo(() => {\n    let columnOffset = viewerPageCount;\n    viewerCountList.some((viewerCount, index) => {\n      if (index < nowSpineIndex) {\n        columnOffset -= (viewerCount.count);\n        return false;\n      }\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n\n  useEffect(() => {\n    console.log('TTTT');\n    setTest(true);\n  }, []);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n    return () => {\n      dispatch(viewerActions.initViewerState());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n\n  useEffect(() => {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      const pageCount = viewerCountList.reduce((acc, cur) => acc + cur.count, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n\n  useEffect(() => {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n\n  const calculateViewerWidth = useCallback(\n    (nowWidth, newRatio) => Math.floor(Number(nowWidth) * (Number(newRatio) / 100)),\n    [],\n  );\n\n  return (\n    <Layout\n      styleText={styleText}\n    >\n      <ViewerHeader\n        titles={titles}\n        authors={contributors}\n        ncxItem={ncx}\n      />\n      <Container\n        styleProps={{\n          height: viewerHeight,\n          backgroundColor,\n        }}\n      >\n        {isAnalyzedSpine\n        && (\n        <ViewerPage\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          pageColumnOffset={pageColumnOffset}\n          viewerSpine={viewers[nowSpineIndex]}\n          isFirstPage={isFirstPage}\n          isLastPage={isLastPage}\n        />\n        )}\n        {test && !isAnalyzedSpine\n        && (\n        <ViewerCalculator\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          spines={spines}\n          viewers={viewers}\n        />\n        )}\n      </Container>\n      <ViewerBottom\n        sliderMaxValue={wholePageCount}\n      />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store, query } = context;\n  const { bookPath } = query;\n  const queryPath = decodeURI(String(bookPath));\n\n  if (req) {\n    // Server side render\n    const { EpubParser } = require('@ridi/epub-parser');\n    const [, fileName] = queryPath.split('/');\n    const publicPath = `${req.protocol}://${req.headers.host}/${queryPath}`;\n    try {\n      const { book, viewers } = await getBookInfo(EpubParser, {\n        epubFile: fileName,\n        epubPath: queryPath,\n      });\n      const styleText = await getStyleText(publicPath, book.styles);\n      return {\n        book,\n        viewers,\n        styleText,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  } else {\n    // Client side render\n    const { books }: ReducerState = store.getState();\n    const { list } = books;\n\n    let selectedBookInfo = list[0];\n\n    list.some((bookInfo) => {\n      if (bookInfo.publicPath === queryPath) {\n        selectedBookInfo = bookInfo;\n        return true;\n      }\n      return false;\n    });\n\n    const { book, viewers, publicPath } = selectedBookInfo;\n    const styleText = await getStyleText(publicPath, book.styles);\n\n    return {\n      book,\n      viewers,\n      styleText,\n    };\n  }\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}