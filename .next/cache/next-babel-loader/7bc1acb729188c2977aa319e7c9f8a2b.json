{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSetting.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ViewerSettingCountItem from './ViewerSettingCountItem';\nimport ViewerSettingColorItem from './ViewerSettingColorItem';\nimport * as settingActions from '../../reducers/viewerSetting';\nimport { subColor, defaultColor } from '../../styles';\nimport { SETTING_ITEM_KEY, SETTING_ITEM_LABEL, SETTING_ITEM_UNIT, FONT_SIZE_RANGE, PADDING_RANGE, LINE_HEIGHT_RANGE, BACKGROUND_COLORS } from '../../constants/viewer';\nvar Container = styled.div.withConfig({\n  displayName: \"ViewerSetting__Container\",\n  componentId: \"sc-1omnhz6-0\"\n})([\"position:relative;\"]);\nvar ToggleButton = styled.div.withConfig({\n  displayName: \"ViewerSetting__ToggleButton\",\n  componentId: \"sc-1omnhz6-1\"\n})([\"cursor:pointer;\"]);\nvar SettingItems = styled.ul.withConfig({\n  displayName: \"ViewerSetting__SettingItems\",\n  componentId: \"sc-1omnhz6-2\"\n})([\"position:absolute;width:10em;left:50%;transform:translateX(-50%);overflow:scroll;list-style-type:none;margin:0;padding:0;border:1px solid \", \";background-color:\", \";\"], subColor, defaultColor);\n\nvar ViewerSetting = function ViewerSetting() {\n  var _useSelector = useSelector(function (state) {\n    return state.viewerSetting;\n  }),\n      fontSize = _useSelector.fontSize,\n      padding = _useSelector.padding,\n      lineHeight = _useSelector.lineHeight,\n      backgroundColor = _useSelector.backgroundColor;\n\n  var _useState = useState(false),\n      isShowSetting = _useState[0],\n      setIsShowSetting = _useState[1];\n\n  var _useState2 = useState([]),\n      settingItems = _useState2[0],\n      setSettingItems = _useState2[1];\n\n  useEffect(function () {\n    setSettingItems([{\n      label: SETTING_ITEM_LABEL.FONT_SIZE,\n      key: SETTING_ITEM_KEY.FONT_SIZE,\n      value: fontSize,\n      valueUnit: SETTING_ITEM_UNIT.FONT_SIZE,\n      minValue: FONT_SIZE_RANGE.MIN,\n      maxValue: FONT_SIZE_RANGE.MAX,\n      action: settingActions.setViewerSettingFontSize\n    }, {\n      label: SETTING_ITEM_LABEL.PADDING,\n      key: SETTING_ITEM_KEY.PADDING,\n      value: padding,\n      valueUnit: SETTING_ITEM_UNIT.PADDING,\n      minValue: PADDING_RANGE.MIN,\n      maxValue: PADDING_RANGE.MAX,\n      action: settingActions.setViewerSettingPadding\n    }, {\n      label: SETTING_ITEM_LABEL.LINE_HEIGHT,\n      key: SETTING_ITEM_KEY.LINE_HEIGHT,\n      value: lineHeight,\n      valueUnit: SETTING_ITEM_UNIT.LINE_HEIGHT,\n      minValue: LINE_HEIGHT_RANGE.MIN,\n      maxValue: LINE_HEIGHT_RANGE.MAX,\n      action: settingActions.setViewerSettingLineHeight\n    }, {\n      label: SETTING_ITEM_LABEL.BACKGROUND_COLOR,\n      key: SETTING_ITEM_KEY.BACKGROUND_COLOR,\n      value: backgroundColor,\n      colors: BACKGROUND_COLORS,\n      action: settingActions.setViewerSettingBackgroundColor\n    }]);\n  }, [fontSize, padding, lineHeight, backgroundColor]);\n  var toggleShowNcs = useCallback(function () {\n    setIsShowSetting(!isShowSetting);\n  }, [isShowSetting]);\n  var renderSettingItem = useCallback(function (settingItem) {\n    var key = settingItem.key,\n        label = settingItem.label,\n        value = settingItem.value,\n        valueUnit = settingItem.valueUnit,\n        action = settingItem.action,\n        minValue = settingItem.minValue,\n        maxValue = settingItem.maxValue,\n        colors = settingItem.colors;\n\n    if (colors) {\n      return __jsx(ViewerSettingColorItem, {\n        key: key,\n        label: label,\n        value: value,\n        colors: colors,\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(ViewerSettingCountItem, {\n      key: key,\n      label: label,\n      value: value,\n      valueUnit: valueUnit,\n      minValue: minValue,\n      maxValue: maxValue,\n      action: action,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    });\n  }, []);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(ToggleButton, {\n    onClick: toggleShowNcs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\uC124\\uC815\"), isShowSetting && __jsx(SettingItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, settingItems.map(function (settingItem) {\n    return renderSettingItem(settingItem);\n  })));\n};\n\nexport default ViewerSetting;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSetting.tsx"],"names":["React","useCallback","useState","useEffect","useSelector","styled","ViewerSettingCountItem","ViewerSettingColorItem","settingActions","subColor","defaultColor","SETTING_ITEM_KEY","SETTING_ITEM_LABEL","SETTING_ITEM_UNIT","FONT_SIZE_RANGE","PADDING_RANGE","LINE_HEIGHT_RANGE","BACKGROUND_COLORS","Container","div","ToggleButton","SettingItems","ul","ViewerSetting","state","viewerSetting","fontSize","padding","lineHeight","backgroundColor","isShowSetting","setIsShowSetting","settingItems","setSettingItems","label","FONT_SIZE","key","value","valueUnit","minValue","MIN","maxValue","MAX","action","setViewerSettingFontSize","PADDING","setViewerSettingPadding","LINE_HEIGHT","setViewerSettingLineHeight","BACKGROUND_COLOR","colors","setViewerSettingBackgroundColor","toggleShowNcs","renderSettingItem","settingItem","map"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport ViewerSettingCountItem from './ViewerSettingCountItem';\nimport ViewerSettingColorItem from './ViewerSettingColorItem';\n\nimport * as settingActions from '../../reducers/viewerSetting';\n\nimport { subColor, defaultColor } from '../../styles';\n\nimport {\n  SETTING_ITEM_KEY,\n  SETTING_ITEM_LABEL,\n  SETTING_ITEM_UNIT,\n  FONT_SIZE_RANGE, PADDING_RANGE, LINE_HEIGHT_RANGE, BACKGROUND_COLORS,\n} from '../../constants/viewer';\n\nimport { ReducerState } from '../../interfaces';\nimport { SettingItem } from '../../interfaces/viewer';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst ToggleButton = styled.div`\n  cursor: pointer;\n`;\n\nconst SettingItems = styled.ul`\n  position: absolute;\n  width: 10em;\n  left: 50%;\n  transform: translateX(-50%);\n  overflow: scroll;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  border: 1px solid ${subColor};\n  background-color: ${defaultColor};\n`;\n\nconst ViewerSetting: React.FunctionComponent = () => {\n  const {\n    fontSize, padding, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const [isShowSetting, setIsShowSetting] = useState(false);\n  const [settingItems, setSettingItems] = useState<SettingItem[]>([]);\n\n  useEffect(() => {\n    setSettingItems([\n      {\n        label: SETTING_ITEM_LABEL.FONT_SIZE,\n        key: SETTING_ITEM_KEY.FONT_SIZE,\n        value: fontSize,\n        valueUnit: SETTING_ITEM_UNIT.FONT_SIZE,\n        minValue: FONT_SIZE_RANGE.MIN,\n        maxValue: FONT_SIZE_RANGE.MAX,\n        action: settingActions.setViewerSettingFontSize,\n      }, {\n        label: SETTING_ITEM_LABEL.PADDING,\n        key: SETTING_ITEM_KEY.PADDING,\n        value: padding,\n        valueUnit: SETTING_ITEM_UNIT.PADDING,\n        minValue: PADDING_RANGE.MIN,\n        maxValue: PADDING_RANGE.MAX,\n        action: settingActions.setViewerSettingPadding,\n      }, {\n        label: SETTING_ITEM_LABEL.LINE_HEIGHT,\n        key: SETTING_ITEM_KEY.LINE_HEIGHT,\n        value: lineHeight,\n        valueUnit: SETTING_ITEM_UNIT.LINE_HEIGHT,\n        minValue: LINE_HEIGHT_RANGE.MIN,\n        maxValue: LINE_HEIGHT_RANGE.MAX,\n        action: settingActions.setViewerSettingLineHeight,\n      }, {\n        label: SETTING_ITEM_LABEL.BACKGROUND_COLOR,\n        key: SETTING_ITEM_KEY.BACKGROUND_COLOR,\n        value: backgroundColor,\n        colors: BACKGROUND_COLORS,\n        action: settingActions.setViewerSettingBackgroundColor,\n      },\n    ]);\n  }, [fontSize, padding, lineHeight, backgroundColor]);\n\n  const toggleShowNcs = useCallback(() => {\n    setIsShowSetting(!isShowSetting);\n  }, [isShowSetting]);\n\n  const renderSettingItem = useCallback((settingItem: SettingItem) => {\n    const {\n      key, label, value, valueUnit, action, minValue, maxValue, colors,\n    } = settingItem;\n\n    if (colors) {\n      return (\n        <ViewerSettingColorItem\n          key={key}\n          label={label}\n          value={value}\n          colors={colors}\n          action={action}\n        />\n      );\n    }\n    return (\n      <ViewerSettingCountItem\n        key={key}\n        label={label}\n        value={value}\n        valueUnit={valueUnit}\n        minValue={minValue}\n        maxValue={maxValue}\n        action={action}\n      />\n    );\n  }, []);\n\n  return (\n    <Container>\n      <ToggleButton onClick={toggleShowNcs}>\n        설정\n      </ToggleButton>\n      {\n        isShowSetting\n        && (\n        <SettingItems>\n          {\n            settingItems.map((settingItem) => renderSettingItem(settingItem))\n          }\n        </SettingItems>\n        )\n      }\n    </Container>\n  );\n};\n\nexport default ViewerSetting;\n"]},"metadata":{},"sourceType":"module"}