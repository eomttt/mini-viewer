{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCalculator.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport ViewerCount from './ViewerCount';\nimport { ViewerArticle, ViewerSection } from '../../styles/viewer';\nvar HiddenArticle = styled(ViewerArticle).withConfig({\n  displayName: \"ViewerCalculator__HiddenArticle\",\n  componentId: \"sc-1k3xwrw-0\"\n})([\"overflow:scroll;\"]);\nvar HiddenSection = styled(ViewerSection).withConfig({\n  displayName: \"ViewerCalculator__HiddenSection\",\n  componentId: \"sc-1k3xwrw-1\"\n})([\"visibility:hidden;\"]);\n\nvar ViewerCalculator = function ViewerCalculator(_ref) {\n  var viewerWidth = _ref.viewerWidth,\n      viewerHeight = _ref.viewerHeight,\n      viewers = _ref.viewers,\n      spines = _ref.spines,\n      viewerStyle = _ref.viewerStyle;\n\n  var _useState = useState([]),\n      item = _useState[0],\n      setItem = _useState[1];\n\n  var _setCountCallback = useCallback(function (count, index) {\n    console.log('Index', index);\n    console.log('Count', count);\n    var spine = spines[index];\n    console.log('spine', spine);\n    setItem([].concat(_toConsumableArray(item), [{\n      index: index,\n      count: count,\n      spineId: spine.id\n    }]));\n  }, [spines, item]);\n\n  useEffect(function () {\n    console.log(\"AAAA\", item);\n  }, [item]);\n  return __jsx(React.Fragment, null, viewers.map(function (viewer, index) {\n    return __jsx(ViewerCount, {\n      key: viewer,\n      viewerWidth: viewerWidth,\n      viewerHeight: viewerHeight,\n      viewer: viewer,\n      viewerStyle: viewerStyle,\n      setCountCallback: function setCountCallback(count) {\n        return _setCountCallback(count, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default ViewerCalculator;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCalculator.tsx"],"names":["React","useEffect","useCallback","useState","styled","ViewerCount","ViewerArticle","ViewerSection","HiddenArticle","HiddenSection","ViewerCalculator","viewerWidth","viewerHeight","viewers","spines","viewerStyle","item","setItem","setCountCallback","count","index","console","log","spine","spineId","id","map","viewer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,SAAxB,EAAmCC,WAAnC,EAAgDC,QAAhD,QAAgE,OAAhE;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,aADF,EAEEC,aAFF,QAIO,qBAJP;AAaA,IAAMC,aAAa,GAAGJ,MAAM,CAACE,aAAD,CAAT;AAAA;AAAA;AAAA,wBAAnB;AAIA,IAAMG,aAAa,GAAGL,MAAM,CAACG,aAAD,CAAT;AAAA;AAAA;AAAA,0BAAnB;;AAYA,IAAMG,gBAAgD,GAAG,SAAnDA,gBAAmD,OAInD;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAHSC,YAGT,QAHSA,YAGT;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MAFKC,MAEL,QAFKA,MAEL;AAAA,MADJC,WACI,QADJA,WACI;;AAAA,kBACoBZ,QAAQ,CAAC,EAAD,CAD5B;AAAA,MACGa,IADH;AAAA,MACSC,OADT;;AAGJ,MAAMC,iBAAgB,GAAGhB,WAAW,CAAC,UAACiB,KAAD,EAAgBC,KAAhB,EAAkC;AACrEC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACA,QAAMI,KAAK,GAAGT,MAAM,CAACM,KAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AAEAN,IAAAA,OAAO,8BAAKD,IAAL,IAAW;AAChBI,MAAAA,KAAK,EAALA,KADgB;AAEhBD,MAAAA,KAAK,EAALA,KAFgB;AAGhBK,MAAAA,OAAO,EAAED,KAAK,CAACE;AAHC,KAAX,GAAP;AAKD,GAXmC,EAWjC,CAACX,MAAD,EAASE,IAAT,CAXiC,CAApC;;AAaAf,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,IAApB;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,SACE,4BAEIH,OAAO,CAACa,GAAR,CAAY,UAACC,MAAD,EAASP,KAAT;AAAA,WACV,MAAC,WAAD;AACE,MAAA,GAAG,EAAEO,MADP;AAEE,MAAA,WAAW,EAAEhB,WAFf;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAIE,MAAA,MAAM,EAAEe,MAJV;AAKE,MAAA,WAAW,EAAEZ,WALf;AAME,MAAA,gBAAgB,EAAE,0BAACI,KAAD;AAAA,eAAWD,iBAAgB,CAACC,KAAD,EAAQC,KAAR,CAA3B;AAAA,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAZ,CAFJ,CADF;AAiBD,CAzCD;;AA2CA,eAAeV,gBAAf","sourcesContent":["import React, { useRef, useEffect, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport ViewerCount from './ViewerCount';\n\nimport {\n  ViewerArticle,\n  ViewerSection,\n  ViewerContents,\n} from '../../styles/viewer';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { EpubSpineItem } from '../../interfaces/books';\nimport { ViewerStyle } from '../../interfaces/viewer';\n\nconst HiddenArticle = styled(ViewerArticle)`\n  overflow: scroll;\n`;\n\nconst HiddenSection = styled(ViewerSection)`\n  visibility: hidden;\n`;\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewers: string[];\n  spines: EpubSpineItem[];\n  viewerStyle: ViewerStyle;\n}\n\nconst ViewerCalculator: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewers, spines,\n  viewerStyle,\n}) => {\n  const [item, setItem] = useState([]);\n\n  const setCountCallback = useCallback((count: number, index: number) => {\n    console.log('Index', index);\n    console.log('Count', count);\n    const spine = spines[index];\n    console.log('spine', spine);\n\n    setItem([...item, {\n      index,\n      count,\n      spineId: spine.id,\n    }]);\n  }, [spines, item]);\n\n  useEffect(() => {\n    console.log(\"AAAA\", item);\n  }, [item]);\n\n  return (\n    <>\n      {\n        viewers.map((viewer, index) => (\n          <ViewerCount\n            key={viewer}\n            viewerWidth={viewerWidth}\n            viewerHeight={viewerHeight}\n            viewer={viewer}\n            viewerStyle={viewerStyle}\n            setCountCallback={(count) => setCountCallback(count, index)}\n          />\n        ))\n      }\n    </>\n\n  );\n};\n\nexport default ViewerCalculator;\n"]},"metadata":{},"sourceType":"module"}