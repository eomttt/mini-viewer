{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  viewerSpineId: '',\n  viewerCountList: [],\n  viewerPageCount: 0\n}; // Action types\n\nexport var SET_VIEWER_SPINE_ID = 'viewer/SET_VIEWER_SPINE_ID';\nexport var SET_VIEWER_COLUMN_COUNT = 'viewer/SET_VIEWER_COLUMN_COUNT';\nexport var SET_VIEWER_PAGE_COUNT = 'viewr/SET_VIEWR_PAGE_COUNT'; // Action creators\n\nexport var setViewerSpineId = function setViewerSpineId(spineId) {\n  return {\n    type: SET_VIEWER_SPINE_ID,\n    payload: {\n      spineId: spineId\n    }\n  };\n};\nexport var setViewrColumnCount = function setViewrColumnCount(_ref) {\n  var index = _ref.index,\n      count = _ref.count;\n  return {\n    type: SET_VIEWER_COLUMN_COUNT,\n    payload: {\n      index: index,\n      count: count\n    }\n  };\n};\n;\nexport var setViewerPageCount = function setViewerPageCount(pageCount) {\n  return {\n    type: SET_VIEWER_PAGE_COUNT\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case SET_VIEWER_COLUMN_COUNT:\n      {\n        var index = payload.index,\n            count = payload.count;\n        return _objectSpread({}, state, {\n          viewerCountList: [].concat(_toConsumableArray(state.viewerCountList), [{\n            index: index,\n            count: count\n          }])\n        });\n      }\n\n    case SET_VIEWER_SPINE_ID:\n      {\n        var spineId = payload.spineId;\n        return _objectSpread({}, state, {\n          viewerSpineId: spineId\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n});","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/reducers/viewer.ts"],"names":["initialState","viewerSpineId","viewerCountList","viewerPageCount","SET_VIEWER_SPINE_ID","SET_VIEWER_COLUMN_COUNT","SET_VIEWER_PAGE_COUNT","setViewerSpineId","spineId","type","payload","setViewrColumnCount","index","count","setViewerPageCount","pageCount","state","action"],"mappings":";;;;;;;AAGA,OAAO,IAAMA,YAAyB,GAAG;AACvCC,EAAAA,aAAa,EAAE,EADwB;AAEvCC,EAAAA,eAAe,EAAE,EAFsB;AAGvCC,EAAAA,eAAe,EAAE;AAHsB,CAAlC,C,CAMP;;AACA,OAAO,IAAMC,mBAAmB,GAAG,4BAA5B;AACP,OAAO,IAAMC,uBAAuB,GAAG,gCAAhC;AACP,OAAO,IAAMC,qBAAqB,GAAG,4BAA9B,C,CAEP;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD;AAAA,SAAsB;AACpDC,IAAAA,IAAI,EAAEL,mBAD8C;AAEpDM,IAAAA,OAAO,EAAE;AACPF,MAAAA,OAAO,EAAPA;AADO;AAF2C,GAAtB;AAAA,CAAzB;AAOP,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,KAAV,QAAUA,KAAV;AAAA,SAAuD;AACxFJ,IAAAA,IAAI,EAAEJ,uBADkF;AAExFK,IAAAA,OAAO,EAAE;AACPE,MAAAA,KAAK,EAALA,KADO;AAEPC,MAAAA,KAAK,EAALA;AAFO;AAF+E,GAAvD;AAAA,CAA5B;AAQP;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD;AAAA,SAAwB;AACxDN,IAAAA,IAAI,EAAEH;AADkD,GAAxB;AAAA,CAA3B;AAIP,gBAAe,YAA8D;AAAA,MAA7DU,KAA6D,uEAArDhB,YAAqD;AAAA,MAAvCiB,MAAuC;AAAA,MACnER,IADmE,GACjDQ,MADiD,CACnER,IADmE;AAAA,MAC7DC,OAD6D,GACjDO,MADiD,CAC7DP,OAD6D;;AAE3E,UAAQD,IAAR;AACE,SAAKJ,uBAAL;AAA8B;AAAA,YACpBO,KADoB,GACHF,OADG,CACpBE,KADoB;AAAA,YACbC,KADa,GACHH,OADG,CACbG,KADa;AAE5B,iCACKG,KADL;AAEEd,UAAAA,eAAe,+BAAMc,KAAK,CAACd,eAAZ,IAA6B;AAAEU,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,KAAK,EAALA;AAAT,WAA7B;AAFjB;AAID;;AACD,SAAKT,mBAAL;AAA0B;AAAA,YAChBI,OADgB,GACJE,OADI,CAChBF,OADgB;AAExB,iCACKQ,KADL;AAEEf,UAAAA,aAAa,EAAEO;AAFjB;AAID;;AACD;AAAS;AACP,eAAOQ,KAAP;AACD;AAjBH;AAmBD,CArBD","sourcesContent":["import { ReducerAction } from '../interfaces';\nimport { ViewerState } from '../interfaces/viewer';\n\nexport const initialState: ViewerState = {\n  viewerSpineId: '',\n  viewerCountList: [],\n  viewerPageCount: 0,\n};\n\n// Action types\nexport const SET_VIEWER_SPINE_ID = 'viewer/SET_VIEWER_SPINE_ID';\nexport const SET_VIEWER_COLUMN_COUNT = 'viewer/SET_VIEWER_COLUMN_COUNT';\nexport const SET_VIEWER_PAGE_COUNT = 'viewr/SET_VIEWR_PAGE_COUNT';\n\n// Action creators\nexport const setViewerSpineId = (spineId: string) => ({\n  type: SET_VIEWER_SPINE_ID,\n  payload: {\n    spineId,\n  },\n})\n\nexport const setViewrColumnCount = ({ index, count }: {index: number; count: number}) => ({\n  type: SET_VIEWER_COLUMN_COUNT,\n  payload: {\n    index,\n    count,\n  },\n});\n\n;\n\nexport const setViewerPageCount = (pageCount: number) => ({\n  type: SET_VIEWER_PAGE_COUNT\n})\n\nexport default (state = initialState, action: ReducerAction): ViewerState => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_VIEWER_COLUMN_COUNT: {\n      const { index, count } = payload;\n      return {\n        ...state,\n        viewerCountList: [...state.viewerCountList, { index, count }],\n      };\n    }\n    case SET_VIEWER_SPINE_ID: {\n      const { spineId } = payload;\n      return {\n        ...state,\n        viewerSpineId: spineId,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}