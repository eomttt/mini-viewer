{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { EpubParser } from '@ridi/epub-parser';\n\n// import EPUB from '../../datum/epubs/pg61612.epub';\nvar Viewer = function Viewer() {\n  var getParseEpub = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            new EpubParser('../../datum/epubs/pg61612.epub'); // const test = new Parser(EPUB);\n            // const res = await test.parse();\n            // console.log(res);\n\n            return _context.abrupt(\"return\", null);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  useEffect(function () {\n    getParseEpub();\n  }, [getParseEpub]);\n  return __jsx(React.Fragment, null, \"Viewer Component\");\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx"],"names":["React","useEffect","useCallback","EpubParser","Viewer","getParseEpub"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AAEA,SAASC,UAAT,QAA2B,mBAA3B;;AAIA;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,YAAY,GAAGH,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAC/B,gBAAIC,UAAJ,CAAe,gCAAf,EAD+B,CAE/B;AACA;AAEA;;AAL+B,6CAMxB,IANwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAO7B,EAP6B,CAAhC;AASAF,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAKA,SACE,+CADF;AAKD,CApBD;;AAsBA,eAAeD,MAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\n\nimport { EpubParser } from '@ridi/epub-parser';\n\nimport Parser from '../../modules/Parser';\n\n// import EPUB from '../../datum/epubs/pg61612.epub';\n\nconst Viewer = () => {\n  const getParseEpub = useCallback(async (): Promise<null> => {\n    new EpubParser('../../datum/epubs/pg61612.epub')\n    // const test = new Parser(EPUB);\n    // const res = await test.parse();\n\n    // console.log(res);\n    return null;\n  }, []);\n\n  useEffect(() => {\n    getParseEpub();\n  }, [getParseEpub]);\n\n\n  return (\n    <>\n      Viewer Component\n    </>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}