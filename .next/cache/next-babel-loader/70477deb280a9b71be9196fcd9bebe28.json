{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { defaultColor } from '../styles';\nimport { FONT_SIZE_RANGE, WIDTH_RATIO_RANGE, LINE_HEIGHT_RANGE } from '../constants/viewer';\nexport var initialState = {\n  fontSize: FONT_SIZE_RANGE.MIN,\n  widthRatio: WIDTH_RATIO_RANGE.MAX,\n  lineHeight: LINE_HEIGHT_RANGE.MIN,\n  backgroundColor: defaultColor\n}; // Action types\n\nexport var SET_FONT_SIZE = 'viewerSetting/SET_FONT_SIZE';\nexport var SET_WIDTH_RATIO = 'viewerSetting/SET_WIDTH_RATIO';\nexport var SET_LINE_HEIGHT = 'viewerSetting/SET_LINE_HEIGHT';\nexport var SET_BACKGROUND_COLOR = 'viewerSetting/SET_VIEWER_SETTING_BACKGROUND_COLOR'; // Action creators\n\nexport var setViewerSettingFontSize = function setViewerSettingFontSize(fontSize) {\n  return {\n    type: SET_FONT_SIZE,\n    payload: {\n      fontSize: fontSize\n    }\n  };\n};\nexport var setViewerSettingWidthRatio = function setViewerSettingWidthRatio(widthRatio) {\n  return {\n    type: SET_WIDTH_RATIO,\n    payload: {\n      widthRatio: widthRatio\n    }\n  };\n};\nexport var setViewerSettingLineHeight = function setViewerSettingLineHeight(lineHeight) {\n  return {\n    type: SET_LINE_HEIGHT,\n    payload: {\n      lineHeight: lineHeight\n    }\n  };\n};\nexport var setViewerSettingBackgroundColor = function setViewerSettingBackgroundColor(color) {\n  return {\n    type: SET_BACKGROUND_COLOR,\n    payload: {\n      backgroundColor: color\n    }\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case SET_FONT_SIZE:\n      {\n        var fontSize = payload.fontSize;\n        return _objectSpread({}, state, {\n          fontSize: fontSize\n        });\n      }\n\n    case SET_WIDTH_RATIO:\n      {\n        var widthRatio = payload.widthRatio;\n        return _objectSpread({}, state, {\n          widthRatio: widthRatio\n        });\n      }\n\n    case SET_LINE_HEIGHT:\n      {\n        var lineHeight = payload.lineHeight;\n        return _objectSpread({}, state, {\n          lineHeight: lineHeight\n        });\n      }\n\n    case SET_BACKGROUND_COLOR:\n      {\n        var backgroundColor = payload.backgroundColor;\n        return _objectSpread({}, state, {\n          backgroundColor: backgroundColor\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":null,"metadata":{},"sourceType":"module"}