{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { EpubParser } from '@ridi/epub-parser';\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(epubUrl) {\n    _classCallCheck(this, Parser);\n\n    _defineProperty(this, \"_epub\", void 0);\n\n    this._epub = new EpubParser(epubUrl);\n  }\n\n  _createClass(Parser, [{\n    key: \"parse\",\n    value: function parse() {\n      var book, result;\n      return _regeneratorRuntime.async(function parse$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this._epub.parse());\n\n            case 3:\n              book = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(this._epub.readItems(book.spines));\n\n            case 6:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              throw new Error(\"Parse error. \".concat(_context.t0));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 10]], Promise);\n    }\n  }]);\n\n  return Parser;\n}();\n\nexport default Parser;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/modules/Parser.ts"],"names":["EpubParser","Parser","epubUrl","_epub","parse","book","readItems","spines","result","Error"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;;IAEMC,M;AAGJ,kBAAYC,OAAZ,EAA6B;AAAA;;AAAA;;AAC3B,SAAKC,KAAL,GAAa,IAAIH,UAAJ,CAAeE,OAAf,CAAb;AACD;;;;;;;;;;;;+CAIsB,KAAKC,KAAL,CAAWC,KAAX,E;;;AAAbC,cAAAA,I;;+CACe,KAAKF,KAAL,CAAWG,SAAX,CAAqBD,IAAI,CAACE,MAA1B,C;;;AAAfC,cAAAA,M;+CAECA,M;;;;;oBAED,IAAIC,KAAJ,qC;;;;;;;;;;;;;;AAKZ,eAAeR,MAAf","sourcesContent":["import { EpubParser } from '@ridi/epub-parser';\n\nclass Parser {\n  _epub: any;\n\n  constructor(epubUrl: string) {\n    this._epub = new EpubParser(epubUrl);\n  }\n\n  async parse(): Promise<any> {\n    try {\n      const book = await this._epub.parse();\n      const result = await this._epub.readItems(book.spines);\n\n      return result;\n    } catch (error) {\n      throw new Error(`Parse error. ${error}`);\n    }\n  }\n}\n\nexport default Parser;\n"]},"metadata":{},"sourceType":"module"}