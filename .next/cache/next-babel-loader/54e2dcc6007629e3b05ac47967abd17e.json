{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { ViewerSettingItem, ViewerSettingLabel } from '../../styles/viewer';\nconst Controller = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Controller\",\n  componentId: \"sc-4drjko-0\"\n})([\"display:flex;margin:auto 0 auto auto;\"]);\nconst Content = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Content\",\n  componentId: \"sc-4drjko-1\"\n})([\"width:1em;height:1em;border:1px solid \", \";border-radius:50%;background-color:\", \" !important;cursor:pointer;margin:0 .2em;\"], props => props.styleProps.isSelected ? 'black' : `${subColor}`, props => props.styleProps.color);\n\nconst ViewerSettingColorItem = ({\n  label,\n  value,\n  colors,\n  action\n}) => {\n  const selectColor = useCallback(selectedColor => {\n    action(selectedColor);\n  }, [action]);\n  return __jsx(ViewerSettingItem, null, __jsx(ViewerSettingLabel, null, label), __jsx(Controller, null, colors.map(color => __jsx(Content, {\n    key: color,\n    styleProps: {\n      color,\n      isSelected: color === value\n    },\n    onClick: () => selectColor(color)\n  }))));\n};\n\nexport default ViewerSettingColorItem;","map":null,"metadata":{},"sourceType":"module"}