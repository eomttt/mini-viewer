{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCalculator.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport ViewerCount from './ViewerCount';\nimport { ViewerArticle, ViewerSection } from '../../styles/viewer';\nconst HiddenArticle = styled(ViewerArticle).withConfig({\n  displayName: \"ViewerCalculator__HiddenArticle\",\n  componentId: \"sc-1k3xwrw-0\"\n})([\"overflow:scroll;\"]);\nconst HiddenSection = styled(ViewerSection).withConfig({\n  displayName: \"ViewerCalculator__HiddenSection\",\n  componentId: \"sc-1k3xwrw-1\"\n})([\"visibility:hidden;\"]);\n\nconst ViewerCalculator = ({\n  viewerWidth,\n  viewerHeight,\n  viewers,\n  spines,\n  viewerStyle\n}) => {\n  const test = [];\n  const {\n    0: item,\n    1: setItem\n  } = useState([]);\n  const setCountCallback = useCallback((count, index) => {\n    console.log('Index', index);\n    console.log('Count', count);\n    const spine = spines[index];\n    console.log('spine', spine);\n    test.push({\n      index,\n      count,\n      spineId: spine.id\n    });\n    setItem([...item, {\n      index,\n      count,\n      spineId: spine.id\n    }]);\n  }, [spines, item, test]);\n  useEffect(() => {\n    console.log(\"AAAA\", item);\n    console.log(\"BBB\", test);\n  }, [item]);\n  return __jsx(React.Fragment, null, viewers.map((viewer, index) => __jsx(ViewerCount, {\n    key: viewer,\n    viewerWidth: viewerWidth,\n    viewerHeight: viewerHeight,\n    viewer: viewer,\n    viewerStyle: viewerStyle,\n    setCountCallback: count => setCountCallback(count, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerCalculator;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCalculator.tsx"],"names":["React","useEffect","useCallback","useState","styled","ViewerCount","ViewerArticle","ViewerSection","HiddenArticle","HiddenSection","ViewerCalculator","viewerWidth","viewerHeight","viewers","spines","viewerStyle","test","item","setItem","setCountCallback","count","index","console","log","spine","push","spineId","id","map","viewer"],"mappings":";;AAAA,OAAOA,KAAP,IAAwBC,SAAxB,EAAmCC,WAAnC,EAAgDC,QAAhD,QAAgE,OAAhE;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,aADF,EAEEC,aAFF,QAIO,qBAJP;AAaA,MAAMC,aAAa,GAAGJ,MAAM,CAACE,aAAD,CAAT;AAAA;AAAA;AAAA,wBAAnB;AAIA,MAAMG,aAAa,GAAGL,MAAM,CAACG,aAAD,CAAT;AAAA;AAAA;AAAA,0BAAnB;;AAYA,MAAMG,gBAAgD,GAAG,CAAC;AACxDC,EAAAA,WADwD;AAC3CC,EAAAA,YAD2C;AAExDC,EAAAA,OAFwD;AAE/CC,EAAAA,MAF+C;AAGxDC,EAAAA;AAHwD,CAAD,KAInD;AACJ,QAAMC,IAAI,GAAG,EAAb;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMgB,gBAAgB,GAAGjB,WAAW,CAAC,CAACkB,KAAD,EAAgBC,KAAhB,KAAkC;AACrEC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACA,UAAMI,KAAK,GAAGV,MAAM,CAACO,KAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AAEAR,IAAAA,IAAI,CAACS,IAAL,CAAU;AACRJ,MAAAA,KADQ;AAERD,MAAAA,KAFQ;AAGRM,MAAAA,OAAO,EAAEF,KAAK,CAACG;AAHP,KAAV;AAKAT,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAChBI,MAAAA,KADgB;AAEhBD,MAAAA,KAFgB;AAGhBM,MAAAA,OAAO,EAAEF,KAAK,CAACG;AAHC,KAAV,CAAD,CAAP;AAKD,GAhBmC,EAgBjC,CAACb,MAAD,EAASG,IAAT,EAAeD,IAAf,CAhBiC,CAApC;AAkBAf,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,IAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,IAAnB;AACD,GAHQ,EAGN,CAACC,IAAD,CAHM,CAAT;AAKA,SACE,4BAEIJ,OAAO,CAACe,GAAR,CAAY,CAACC,MAAD,EAASR,KAAT,KACV,MAAC,WAAD;AACE,IAAA,GAAG,EAAEQ,MADP;AAEE,IAAA,WAAW,EAAElB,WAFf;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,MAAM,EAAEiB,MAJV;AAKE,IAAA,WAAW,EAAEd,WALf;AAME,IAAA,gBAAgB,EAAGK,KAAD,IAAWD,gBAAgB,CAACC,KAAD,EAAQC,KAAR,CAN/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AAiBD,CAhDD;;AAkDA,eAAeX,gBAAf","sourcesContent":["import React, { useRef, useEffect, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport ViewerCount from './ViewerCount';\n\nimport {\n  ViewerArticle,\n  ViewerSection,\n  ViewerContents,\n} from '../../styles/viewer';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { EpubSpineItem } from '../../interfaces/books';\nimport { ViewerStyle } from '../../interfaces/viewer';\n\nconst HiddenArticle = styled(ViewerArticle)`\n  overflow: scroll;\n`;\n\nconst HiddenSection = styled(ViewerSection)`\n  visibility: hidden;\n`;\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewers: string[];\n  spines: EpubSpineItem[];\n  viewerStyle: ViewerStyle;\n}\n\nconst ViewerCalculator: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewers, spines,\n  viewerStyle,\n}) => {\n  const test = [];\n  const [item, setItem] = useState([]);\n\n  const setCountCallback = useCallback((count: number, index: number) => {\n    console.log('Index', index);\n    console.log('Count', count);\n    const spine = spines[index];\n    console.log('spine', spine);\n\n    test.push({\n      index,\n      count,\n      spineId: spine.id,\n    })\n    setItem([...item, {\n      index,\n      count,\n      spineId: spine.id,\n    }]);\n  }, [spines, item, test]);\n\n  useEffect(() => {\n    console.log(\"AAAA\", item);\n    console.log(\"BBB\", test);\n  }, [item]);\n\n  return (\n    <>\n      {\n        viewers.map((viewer, index) => (\n          <ViewerCount\n            key={viewer}\n            viewerWidth={viewerWidth}\n            viewerHeight={viewerHeight}\n            viewer={viewer}\n            viewerStyle={viewerStyle}\n            setCountCallback={(count) => setCountCallback(count, index)}\n          />\n        ))\n      }\n    </>\n\n  );\n};\n\nexport default ViewerCalculator;\n"]},"metadata":{},"sourceType":"module"}