{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport BookList from '../components/books/BookList';\nimport * as booksActions from '../reducers/books';\nimport { getBookInfo, isEpubFile } from '../lib/util';\nimport Layout from '../components/Layout';\n\nvar Home = function Home(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.books;\n  }),\n      list = _useSelector.list;\n\n  useEffect(function () {\n    console.log(\"AAA\", props);\n\n    if (!props) {\n      window.location.reload();\n    }\n  }, [props]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(BookList, {\n    books: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = function _callee(context) {\n  var req, store, fs, _require, EpubParser, files, booksInfo, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file, _file$split, _file$split2, fileName, epubPath, _ref, book, viewers;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req, store = context.store;\n\n          if (!req) {\n            _context.next = 47;\n            break;\n          }\n\n          fs = require('fs');\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          files = fs.readdirSync('public/');\n          booksInfo = []; // eslint-disable-next-line no-restricted-syntax\n\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context.prev = 9;\n          _iterator = files[Symbol.iterator]();\n\n        case 11:\n          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n            _context.next = 31;\n            break;\n          }\n\n          file = _step.value;\n\n          if (!isEpubFile(file)) {\n            _context.next = 28;\n            break;\n          }\n\n          _file$split = file.split('.epub'), _file$split2 = _slicedToArray(_file$split, 1), fileName = _file$split2[0];\n          epubPath = \"epub/\".concat(fileName);\n          _context.prev = 16;\n          _context.next = 19;\n          return _regeneratorRuntime.awrap(getBookInfo(EpubParser, {\n            epubFile: fileName,\n            epubPath: epubPath\n          }));\n\n        case 19:\n          _ref = _context.sent;\n          book = _ref.book;\n          viewers = _ref.viewers;\n          booksInfo.push({\n            book: book,\n            viewers: viewers,\n            publicPath: epubPath\n          });\n          _context.next = 28;\n          break;\n\n        case 25:\n          _context.prev = 25;\n          _context.t0 = _context[\"catch\"](16);\n          console.log('Error index.', _context.t0);\n\n        case 28:\n          _iteratorNormalCompletion = true;\n          _context.next = 11;\n          break;\n\n        case 31:\n          _context.next = 37;\n          break;\n\n        case 33:\n          _context.prev = 33;\n          _context.t1 = _context[\"catch\"](9);\n          _didIteratorError = true;\n          _iteratorError = _context.t1;\n\n        case 37:\n          _context.prev = 37;\n          _context.prev = 38;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 40:\n          _context.prev = 40;\n\n          if (!_didIteratorError) {\n            _context.next = 43;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 43:\n          return _context.finish(40);\n\n        case 44:\n          return _context.finish(37);\n\n        case 45:\n          store.dispatch(booksActions.setBookList(booksInfo));\n          return _context.abrupt(\"return\", {\n            booksInfo: booksInfo\n          });\n\n        case 47:\n          return _context.abrupt(\"return\", null);\n\n        case 48:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[9, 33, 37, 45], [16, 25], [38,, 40, 44]], Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","useEffect","useSelector","BookList","booksActions","getBookInfo","isEpubFile","Layout","Home","props","state","books","list","console","log","window","location","reload","getInitialProps","context","req","store","fs","require","EpubParser","files","readdirSync","booksInfo","file","split","fileName","epubPath","epubFile","book","viewers","push","publicPath","dispatch","setBookList"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport BookList from '../components/books/BookList';\n\nimport * as booksActions from '../reducers/books';\n\nimport { getBookInfo, isEpubFile } from '../lib/util';\n\nimport { ReducerState } from '../interfaces';\nimport { BookInfo } from '../interfaces/books';\nimport Layout from '../components/Layout';\n\ninterface Props {\n  bookInfo: BookInfo[];\n}\n\nconst Home: NextPage<Props> = (props) => {\n  const { list } = useSelector((state: ReducerState) => state.books);\n\n  useEffect(() => {\n    console.log(\"AAA\", props);\n    if (!props) {\n      window.location.reload();\n    }\n  }, [props]);\n\n  return (\n    <Layout>\n      <BookList books={list} />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n\n    const files = fs.readdirSync('public/');\n    const booksInfo: BookInfo[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const file of files) {\n      if (isEpubFile(file)) {\n        const [fileName] = file.split('.epub');\n        const epubPath = `epub/${fileName}`;\n        try {\n          const { book, viewers } = await getBookInfo(EpubParser, {\n            epubFile: fileName,\n            epubPath,\n          });\n\n          booksInfo.push({\n            book,\n            viewers,\n            publicPath: epubPath,\n          });\n        } catch (error) {\n          console.log('Error index.', error);\n        }\n      }\n    }\n    store.dispatch(booksActions.setBookList(booksInfo));\n\n    return {\n      booksInfo,\n    };\n  }\n\n  return null;\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}