{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HiddenViewSection, Contents } from '../../styles/viewer';\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\nimport * as actions from '../../reducers/viewer';\n\nconst ViewerCount = ({\n  viewerSpineIndex,\n  viewerSpine\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewSectionRef = useRef(null);\n  useEffect(() => {\n    if (hiddenViewSectionRef) {\n      const viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n      const {\n        current: hiddenViewSectionCurrent\n      } = hiddenViewSectionRef;\n      const count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n      dispatch(actions.setViewerCount({\n        index: viewerSpineIndex,\n        count: Math.floor(count) + 1\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return __jsx(HiddenViewSection, {\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","useDispatch","HiddenViewSection","Contents","VIEWER_HEIGHT_RATIO","actions","ViewerCount","viewerSpineIndex","viewerSpine","dispatch","hiddenViewSectionRef","viewerHeight","Math","floor","window","innerHeight","current","hiddenViewSectionCurrent","count","clientHeight","setViewerCount","index","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,qBAA5C;AAEA,SAASC,mBAAT,QAAoC,wBAApC;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAOA,MAAMC,WAA2C,GAAG,CAAC;AACnDC,EAAAA,gBADmD;AACjCC,EAAAA;AADiC,CAAD,KAE9C;AACJ,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,oBAAoB,GAAGX,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,oBAAJ,EAA0B;AACxB,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,WAAP,IAAsBX,mBAAmB,GAAG,GAA5C,CAAX,CAArB;AACA,YAAM;AAAEY,QAAAA,OAAO,EAAEC;AAAX,UAAwCP,oBAA9C;AACA,YAAMQ,KAAK,GAAGD,wBAAwB,CAACE,YAAzB,GAAwCR,YAAtD;AAEAF,MAAAA,QAAQ,CAACJ,OAAO,CAACe,cAAR,CAAuB;AAC9BC,QAAAA,KAAK,EAAEd,gBADuB;AAE9BW,QAAAA,KAAK,EAAEN,IAAI,CAACC,KAAL,CAAWK,KAAX,IAAoB;AAFG,OAAvB,CAAD,CAAR;AAID,KAVa,CAWhB;;AACC,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE,MAAC,iBAAD;AACE,IAAA,GAAG,EAAER,oBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAEY,MAAAA,MAAM,EAAEd;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA3BD;;AA6BA,eAAeF,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { HiddenViewSection, Contents } from '../../styles/viewer';\n\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nimport * as actions from '../../reducers/viewer';\n\ninterface Props {\n  viewerSpineIndex: number;\n  viewerSpine: string;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerSpineIndex, viewerSpine,\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (hiddenViewSectionRef) {\n      const viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n      const { current: hiddenViewSectionCurrent } = hiddenViewSectionRef;\n      const count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n\n      dispatch(actions.setViewerCount({\n        index: viewerSpineIndex,\n        count: Math.floor(count) + 1,\n      }));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <HiddenViewSection\n      ref={hiddenViewSectionRef}\n    >\n      <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n    </HiddenViewSection>\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}