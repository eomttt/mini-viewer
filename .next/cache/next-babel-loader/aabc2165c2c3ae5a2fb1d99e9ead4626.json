{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCount from '../components/viewer/ViewerCount';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\nimport * as viewerActions from '../reducers/viewer';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\nvar Container = styled.div.withConfig({\n  displayName: \"viewer__Container\",\n  componentId: \"sc-1iklkx5-0\"\n})([\"padding:\", \"% \", \"%;height:\", \"px;background-color:\", \";text-align:center;overflow:hidden;\"], (100 - VIEWER_HEIGHT_RATIO) / 2, (100 - VIEWER_WIDTH_RATIO) / 2, function (props) {\n  return props.styleProps.height;\n}, function (props) {\n  return props.styleProps.backgroundColor;\n});\n\nvar Viewer = function Viewer(_ref) {\n  var book = _ref.book,\n      viewerSpines = _ref.viewerSpines,\n      styleLinks = _ref.styleLinks;\n  var spines = book.spines,\n      titles = book.titles,\n      ncx = book.ncx,\n      contributors = book.contributors;\n  console.log('Book', book);\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  var _useState4 = useState(0),\n      wholePageCount = _useState4[0],\n      setWholePageCount = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector.viewerCountList,\n      viewerPageCount = _useSelector.viewerPageCount;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.viewerSetting;\n  }),\n      fontSize = _useSelector2.fontSize,\n      widthRatio = _useSelector2.widthRatio,\n      lineHeight = _useSelector2.lineHeight,\n      backgroundColor = _useSelector2.backgroundColor;\n\n  var isAnalyzedSpine = useMemo(function () {\n    return viewerCountList.length >= viewerSpines.length;\n  }, [viewerCountList, viewerSpines]);\n  var isFirstPage = useMemo(function () {\n    return viewerPageCount === 0;\n  }, [viewerPageCount]);\n  var isLastPage = useMemo(function () {\n    return viewerPageCount === wholePageCount;\n  }, [viewerPageCount, wholePageCount]);\n  var selectedSpineIndex = useMemo(function () {\n    var spineIndex = 0;\n    var accurateCount = 0;\n    viewerCountList.some(function (viewerCount) {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  var pageColumnOffset = useMemo(function () {\n    var columnOffset = viewerPageCount;\n    viewerCountList.some(function (viewerCount, index) {\n      if (index < nowSpineIndex) {\n        columnOffset -= viewerCount.count;\n        return false;\n      }\n\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n  useEffect(function () {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n  useEffect(function () {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      var pageCount = viewerCountList.reduce(function (acc, cur) {\n        return acc + cur.count;\n      }, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n  useEffect(function () {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n  return __jsx(Layout, {\n    styleLinks: styleLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(ViewerHeader, {\n    titles: titles,\n    authors: contributors,\n    ncxItem: ncx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(Container, {\n    styleProps: {\n      height: viewerHeight,\n      backgroundColor: backgroundColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, isAnalyzedSpine && __jsx(ViewerPage, {\n    viewerWidth: Math.floor(Number(viewerWidth) * (Number(widthRatio) / 100)),\n    viewerHeight: viewerHeight,\n    pageColumnOffset: pageColumnOffset,\n    viewerSpine: viewerSpines[nowSpineIndex],\n    isFirstPage: isFirstPage,\n    isLastPage: isLastPage,\n    viewerStyle: {\n      widthRatio: widthRatio,\n      fontSize: fontSize,\n      lineHeight: lineHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), !isAnalyzedSpine && viewerSpines.map(function (viewerSpine, index) {\n    return __jsx(ViewerCount, {\n      key: viewerSpine,\n      viewerWidth: Math.floor(Number(viewerWidth) * (Number(widthRatio) / 100)),\n      viewerHeight: viewerHeight,\n      spine: spines[index],\n      viewerSpine: viewerSpine,\n      viewerSpineIndex: index,\n      viewerStyle: {\n        widthRatio: widthRatio,\n        fontSize: fontSize,\n        lineHeight: lineHeight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    });\n  })), __jsx(ViewerBottom, {\n    sliderMaxValue: wholePageCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nViewer.getInitialProps = function _callee(context) {\n  var req, _require, EpubParser, parser, book, viewerSpines;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req;\n\n          if (!req) {\n            _context.next = 17;\n            break;\n          }\n\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _context.prev = 3;\n          parser = new EpubParser('public/jikji.epub');\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: 'public/epub/jikji'\n          }));\n\n        case 7:\n          book = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(parser.readItems(book.spines, {\n            force: true,\n            extractBody: true,\n            serializedAnchor: true,\n            ignoreScript: true,\n            basePath: 'epub/jikji'\n          }));\n\n        case 10:\n          viewerSpines = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            viewerSpines: viewerSpines,\n            styleLinks: book.styles.map(function (style) {\n              return \"epub/jikji/\".concat(style.href);\n            })\n          });\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](3);\n          console.log('Error', _context.t0);\n\n        case 17:\n          return _context.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 14]], Promise);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx"],"names":["React","useState","useMemo","useEffect","useSelector","useDispatch","styled","Layout","ViewerBottom","ViewerCount","ViewerHeader","ViewerPage","viewerActions","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","Container","div","props","styleProps","height","backgroundColor","Viewer","book","viewerSpines","styleLinks","spines","titles","ncx","contributors","console","log","dispatch","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","wholePageCount","setWholePageCount","state","viewer","viewerCountList","viewerPageCount","viewerSetting","fontSize","widthRatio","lineHeight","isAnalyzedSpine","length","isFirstPage","isLastPage","selectedSpineIndex","spineIndex","accurateCount","some","viewerCount","count","index","pageColumnOffset","columnOffset","Math","floor","window","innerWidth","innerHeight","pageCount","reduce","acc","cur","initViewerState","Number","map","viewerSpine","getInitialProps","context","req","require","EpubParser","parser","parse","validatePackage","parseStyle","unzipPath","readItems","force","extractBody","serializedAnchor","ignoreScript","basePath","styles","style","href"],"mappings":"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","sourcesContent":["import React, {\n  useState, useMemo, useEffect,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCount from '../components/viewer/ViewerCount';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\n\nimport * as viewerActions from '../reducers/viewer';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\n\nimport { ReducerState } from '../interfaces';\nimport { EpubBook } from '../interfaces/books';\n\nconst Container = styled.div`\n  padding: ${(100 - VIEWER_HEIGHT_RATIO) / 2}% ${(100 - VIEWER_WIDTH_RATIO) / 2}%;\n  height: ${(props) => props.styleProps.height}px;\n  background-color: ${(props) => props.styleProps.backgroundColor};\n  text-align: center;\n  overflow: hidden;\n`;\n\ninterface Props {\n  book: EpubBook;\n  viewerSpines: string[];\n  styleLinks: string[];\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewerSpines, styleLinks }) => {\n  const {\n    spines, titles, ncx, contributors,\n  } = book;\n\n  console.log('Book', book);\n\n  const dispatch = useDispatch();\n\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n  const [wholePageCount, setWholePageCount] = useState(0);\n\n  const { viewerCountList, viewerPageCount } = useSelector((state: ReducerState) => state.viewer);\n  const {\n    fontSize, widthRatio, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const isAnalyzedSpine = useMemo(() => viewerCountList.length >= viewerSpines.length, [viewerCountList, viewerSpines]);\n  const isFirstPage = useMemo(() => viewerPageCount === 0, [viewerPageCount]);\n  const isLastPage = useMemo(() => viewerPageCount === wholePageCount, [viewerPageCount, wholePageCount]);\n  const selectedSpineIndex = useMemo(() => {\n    let spineIndex = 0;\n    let accurateCount = 0;\n    viewerCountList.some((viewerCount) => {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  const pageColumnOffset = useMemo(() => {\n    let columnOffset = viewerPageCount;\n    viewerCountList.some((viewerCount, index) => {\n      if (index < nowSpineIndex) {\n        columnOffset -= (viewerCount.count);\n        return false;\n      }\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n\n  useEffect(() => {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n\n  useEffect(() => {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      const pageCount = viewerCountList.reduce((acc, cur) => acc + cur.count, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n\n  useEffect(() => {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n\n  return (\n    <Layout\n      styleLinks={styleLinks}\n    >\n      <ViewerHeader\n        titles={titles}\n        authors={contributors}\n        ncxItem={ncx}\n      />\n      <Container\n        styleProps={{\n          height: viewerHeight,\n          backgroundColor,\n        }}\n      >\n        {isAnalyzedSpine\n        && (\n        <ViewerPage\n          viewerWidth={Math.floor(Number(viewerWidth) * (Number(widthRatio) / 100))}\n          viewerHeight={viewerHeight}\n          pageColumnOffset={pageColumnOffset}\n          viewerSpine={viewerSpines[nowSpineIndex]}\n          isFirstPage={isFirstPage}\n          isLastPage={isLastPage}\n          viewerStyle={{\n            widthRatio,\n            fontSize,\n            lineHeight,\n          }}\n        />\n        )}\n        {!isAnalyzedSpine\n        && viewerSpines.map((viewerSpine, index) => (\n          <ViewerCount\n            key={viewerSpine}\n            viewerWidth={Math.floor(Number(viewerWidth) * (Number(widthRatio) / 100))}\n            viewerHeight={viewerHeight}\n            spine={spines[index]}\n            viewerSpine={viewerSpine}\n            viewerSpineIndex={index}\n            viewerStyle={{\n              widthRatio,\n              fontSize,\n              lineHeight,\n            }}\n          />\n        ))}\n      </Container>\n      <ViewerBottom\n        sliderMaxValue={wholePageCount}\n      />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/jikji.epub');\n      const book: EpubBook = await parser.parse({\n        validatePackage: true,\n        parseStyle: false,\n        unzipPath: 'public/epub/jikji',\n      });\n      const viewerSpines = await parser.readItems(book.spines, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n        ignoreScript: true,\n        basePath: 'epub/jikji',\n      });\n\n      return {\n        book,\n        viewerSpines,\n        styleLinks: book.styles.map((style) => `epub/jikji/${style.href}`),\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}