{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { DEFAULT_IMAGE } from '../../constants/books';\nimport { VIEWER_PATH_NAME } from '../../constants/viewer';\nvar Container = styled.ul.withConfig({\n  displayName: \"BookList__Container\",\n  componentId: \"sc-14s4gg1-0\"\n})([\"\"]);\nvar CoverImage = styled.li.withConfig({\n  displayName: \"BookList__CoverImage\",\n  componentId: \"sc-14s4gg1-1\"\n})([\"width:10em;border:1px solid \", \";display:inline-block;margin:1em;vertical-align:bottom;cursor:grab;padding:0;& img{width:100%;user-select:none;}\"], subColor);\n\nvar BookList = function BookList(_ref) {\n  var books = _ref.books;\n\n  var _useState = useState(books),\n      bookList = _useState[0],\n      setBookList = _useState[1];\n\n  var _useState2 = useState(null),\n      draggedItem = _useState2[0],\n      setDraggedItem = _useState2[1];\n\n  var openBook = useCallback(function (bookIndex) {\n    var selectedBook = bookList[bookIndex];\n    Router.push({\n      pathname: VIEWER_PATH_NAME,\n      query: {\n        bookPath: encodeURI(selectedBook.publicPath)\n      }\n    });\n  }, [bookList]);\n  var dragStart = useCallback(function (e, index) {\n    setDraggedItem(bookList[index]);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  }, [bookList]);\n  var dragOver = useCallback(function (e, index) {\n    e.preventDefault();\n    var draggedOverItem = bookList[index];\n\n    if (draggedItem.publicPath === draggedOverItem.publicPath) {\n      return;\n    }\n\n    var newSortedBooks = bookList.filter(function (item) {\n      return item.publicPath !== draggedItem.publicPath;\n    });\n    newSortedBooks.splice(index, 0, draggedItem);\n    setBookList(newSortedBooks);\n  }, [bookList, draggedItem]);\n  var dragEnd = useCallback(function (e) {\n    e.preventDefault();\n  }, []);\n  return __jsx(Container, null, bookList.map(function (_ref2, index) {\n    var book = _ref2.book,\n        publicPath = _ref2.publicPath;\n    return __jsx(CoverImage, {\n      onClick: function onClick() {\n        return openBook(index);\n      },\n      onDragOver: function onDragOver(e) {\n        return dragOver(e, index);\n      },\n      key: publicPath\n    }, __jsx(\"img\", {\n      src: book.cover ? \"\".concat(publicPath, \"/\").concat(book.cover.href) : DEFAULT_IMAGE,\n      draggable: true,\n      onDragStart: function onDragStart(e) {\n        return dragStart(e, index);\n      },\n      onDragEnd: dragEnd,\n      alt: \"Cover\"\n    }));\n  }));\n};\n\nexport default BookList;","map":null,"metadata":{},"sourceType":"module"}