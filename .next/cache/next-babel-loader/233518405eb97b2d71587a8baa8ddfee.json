{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\nimport * as booksActions from '../reducers/books';\nimport { getBook } from '../lib/util';\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.books;\n  }),\n      list = _useSelector.list;\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(BookList, {\n    books: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = function _callee(context) {\n  var req, store, fs, _require, EpubParser, books, files, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file, publicPath, parser, book;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req, store = context.store;\n\n          if (!req) {\n            _context.next = 45;\n            break;\n          }\n\n          fs = require('fs');\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          books = [];\n          files = fs.readdirSync('public/');\n          _context.prev = 6;\n          // eslint-disable-next-line no-restricted-syntax\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context.prev = 10;\n          _iterator = files[Symbol.iterator]();\n\n        case 12:\n          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n            _context.next = 24;\n            break;\n          }\n\n          file = _step.value;\n\n          if (!file.includes('.epub')) {\n            _context.next = 21;\n            break;\n          }\n\n          publicPath = \"epub/\".concat(file.split('.epub')[0]);\n          parser = new EpubParser(\"public/\".concat(file));\n          _context.next = 19;\n          return _regeneratorRuntime.awrap(getBook(parser, {\n            unzipPath: \"public/\".concat(publicPath)\n          }));\n\n        case 19:\n          book = _context.sent;\n\n          if (book) {\n            books.push({\n              book: book,\n              publicPath: publicPath\n            });\n          }\n\n        case 21:\n          _iteratorNormalCompletion = true;\n          _context.next = 12;\n          break;\n\n        case 24:\n          _context.next = 30;\n          break;\n\n        case 26:\n          _context.prev = 26;\n          _context.t0 = _context[\"catch\"](10);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n\n        case 30:\n          _context.prev = 30;\n          _context.prev = 31;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 33:\n          _context.prev = 33;\n\n          if (!_didIteratorError) {\n            _context.next = 36;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 36:\n          return _context.finish(33);\n\n        case 37:\n          return _context.finish(30);\n\n        case 38:\n          store.dispatch(booksActions.setBookList(books));\n          return _context.abrupt(\"return\", {\n            books: books\n          });\n\n        case 42:\n          _context.prev = 42;\n          _context.t1 = _context[\"catch\"](6);\n          console.log('Error', _context.t1);\n\n        case 45:\n          return _context.abrupt(\"return\", {});\n\n        case 46:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 42], [10, 26, 30, 38], [31,, 33, 37]], Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","useSelector","Layout","BookList","booksActions","getBook","Home","state","books","list","getInitialProps","context","req","store","fs","require","EpubParser","files","readdirSync","file","includes","publicPath","split","parser","unzipPath","book","push","dispatch","setBookList","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,OAAO,KAAKC,YAAZ,MAA8B,mBAA9B;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAKA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAAA,qBACVL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAyBA,KAAK,CAACC,KAA/B;AAAA,GAAD,CADD;AAAA,MACnBC,IADmB,gBACnBA,IADmB;;AAG3B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD,C,CASA;;;AACAH,IAAI,CAACI,eAAL,GAAuB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,GADa,GACED,OADF,CACbC,GADa,EACRC,KADQ,GACEF,OADF,CACRE,KADQ;;AAAA,eAEjBD,GAFiB;AAAA;AAAA;AAAA;;AAGbE,UAAAA,EAHa,GAGRC,OAAO,CAAC,IAAD,CAHC;AAAA,qBAIIA,OAAO,CAAC,mBAAD,CAJX,EAIXC,UAJW,YAIXA,UAJW;AAKbR,UAAAA,KALa,GAKO,EALP;AAObS,UAAAA,KAPa,GAOLH,EAAE,CAACI,WAAH,CAAe,SAAf,CAPK;AAAA;AASjB;AATiB;AAAA;AAAA;AAAA;AAAA,sBAUED,KAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUNE,UAAAA,IAVM;;AAAA,eAWXA,IAAI,CAACC,QAAL,CAAc,OAAd,CAXW;AAAA;AAAA;AAAA;;AAYPC,UAAAA,UAZO,kBAYcF,IAAI,CAACG,KAAL,CAAW,OAAX,EAAoB,CAApB,CAZd;AAcPC,UAAAA,MAdO,GAcE,IAAIP,UAAJ,kBAAyBG,IAAzB,EAdF;AAAA;AAAA,2CAegBd,OAAO,CAACkB,MAAD,EAAS;AAC3CC,YAAAA,SAAS,mBAAYH,UAAZ;AADkC,WAAT,CAfvB;;AAAA;AAePI,UAAAA,IAfO;;AAmBb,cAAIA,IAAJ,EAAU;AACRjB,YAAAA,KAAK,CAACkB,IAAN,CAAW;AACTD,cAAAA,IAAI,EAAJA,IADS;AAETJ,cAAAA,UAAU,EAAVA;AAFS,aAAX;AAID;;AAxBY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA2BjBR,UAAAA,KAAK,CAACc,QAAN,CAAevB,YAAY,CAACwB,WAAb,CAAyBpB,KAAzB,CAAf;AA3BiB,2CA6BV;AACLA,YAAAA,KAAK,EAALA;AADK,WA7BU;;AAAA;AAAA;AAAA;AAiCjBqB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAjCiB;AAAA,2CAoCd,EApCc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAuCA,eAAexB,IAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\n\nimport * as booksActions from '../reducers/books';\n\nimport { getBook } from '../lib/util';\n\nimport { ReducerState } from '../interfaces';\nimport { BookInfo, EpubBook } from '../interfaces/books';\n\nconst Home: NextPage = () => {\n  const { list } = useSelector((state: ReducerState) => state.books);\n\n  return (\n    <Layout>\n      <BookList books={list} />\n    </Layout>\n  );\n};\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n    const books: BookInfo[] = [];\n\n    const files = fs.readdirSync('public/');\n    try {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          const publicPath = `epub/${file.split('.epub')[0]}`;\n\n          const parser = new EpubParser(`public/${file}`);\n          const book: EpubBook = await getBook(parser, {\n            unzipPath: `public/${publicPath}`,\n          });\n\n          if (book) {\n            books.push({\n              book,\n              publicPath,\n            });\n          }\n        }\n      }\n      store.dispatch(booksActions.setBookList(books));\n\n      return {\n        books,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}