{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingColorItem.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { ViewerSettingItemStyle, ViewerSettingLabelStyle } from '../../styles/viewer';\nconst Container = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Container\",\n  componentId: \"sc-4drjko-0\"\n})([\"\", \"\"], ViewerSettingItemStyle);\nconst Label = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Label\",\n  componentId: \"sc-4drjko-1\"\n})([\"\", \"\"], ViewerSettingLabelStyle);\nconst Controller = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Controller\",\n  componentId: \"sc-4drjko-2\"\n})([\"display:flex;margin:auto 0 auto auto;\"]);\nconst Content = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Content\",\n  componentId: \"sc-4drjko-3\"\n})([\"width:1em;height:1em;border:1px solid \", \";border-radius:50%;background-color:\", \";cursor:pointer;\"], props => props.styleProps.isSelected ? 'black' : `${subColor}`, props => props.styleProps.color);\n\nconst ViewerSettingColorItem = ({\n  label,\n  value,\n  colors,\n  action\n}) => __jsx(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, __jsx(Label, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, label), __jsx(Controller, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, colors.map(color => __jsx(Content, {\n  key: color,\n  styleProps: {\n    color,\n    isSelected: color === value\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}))));\n\nexport default ViewerSettingColorItem;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingColorItem.tsx"],"names":["React","styled","subColor","ViewerSettingItemStyle","ViewerSettingLabelStyle","Container","div","Label","Controller","Content","props","styleProps","isSelected","color","ViewerSettingColorItem","label","value","colors","action","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SACEC,sBADF,EAEEC,uBAFF,QAGO,qBAHP;AAKA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,aACXH,sBADW,CAAf;AAIA,MAAMI,KAAK,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,aACPF,uBADO,CAAX;AAIA,MAAMI,UAAU,GAAGP,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,6CAAhB;AAKA,MAAMG,OAAO,GAAGR,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,2GAGUI,KAAD,IAAYA,KAAK,CAACC,UAAN,CAAiBC,UAAjB,GAA8B,OAA9B,GAAyC,GAAEV,QAAS,EAHzE,EAKUQ,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBE,KALrC,CAAb;;AAgBA,MAAMC,sBAAsD,GAAG,CAAC;AAC9DC,EAAAA,KAD8D;AACvDC,EAAAA,KADuD;AAChDC,EAAAA,MADgD;AACxCC,EAAAA;AADwC,CAAD,KAG7D,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,KADH,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIE,MAAM,CAACE,GAAP,CAAYN,KAAD,IACT,MAAC,OAAD;AACE,EAAA,GAAG,EAAEA,KADP;AAEE,EAAA,UAAU,EAAE;AACVA,IAAAA,KADU;AAEVD,IAAAA,UAAU,EAAEC,KAAK,KAAKG;AAFZ,GAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,CAJF,CAHF;;AAuBA,eAAeF,sBAAf","sourcesContent":["import React from 'react';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\nimport {\n  ViewerSettingItemStyle,\n  ViewerSettingLabelStyle,\n} from '../../styles/viewer';\n\nconst Container = styled.div`\n  ${ViewerSettingItemStyle}\n`;\n\nconst Label = styled.div`\n  ${ViewerSettingLabelStyle}\n`;\n\nconst Controller = styled.div`\n  display: flex;\n  margin: auto 0 auto auto;\n`;\n\nconst Content = styled.div`\n  width: 1em;\n  height: 1em;\n  border: 1px solid ${(props) => (props.styleProps.isSelected ? 'black' : `${subColor}`)};  \n  border-radius: 50%;\n  background-color: ${(props) => props.styleProps.color};\n  cursor: pointer;\n`;\n\ninterface Props {\n  label: string;\n  value: number | string;\n  colors: string[];\n  action: (param: string | number) => void;\n}\n\nconst ViewerSettingColorItem: React.FunctionComponent<Props> = ({\n  label, value, colors, action,\n}) => (\n  <Container>\n    <Label>\n      {label}\n    </Label>\n    <Controller>\n      {\n        colors.map((color) => (\n          <Content\n            key={color}\n            styleProps={{\n              color,\n              isSelected: color === value,\n            }}\n          />\n        ))\n      }\n    </Controller>\n  </Container>\n);\n\nexport default ViewerSettingColorItem;\n"]},"metadata":{},"sourceType":"module"}