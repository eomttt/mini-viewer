{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { ViewerSettingItem, ViewerSettingLabel } from '../../styles/viewer';\nvar Controller = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Controller\",\n  componentId: \"sc-4drjko-0\"\n})([\"display:flex;margin:auto 0 auto auto;\"]);\nvar Content = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Content\",\n  componentId: \"sc-4drjko-1\"\n})([\"width:1em;height:1em;border:1px solid \", \";border-radius:50%;background-color:\", \" !important;cursor:pointer;margin:0 .2em;\"], function (props) {\n  return props.styleProps.isSelected ? 'black' : \"\".concat(subColor);\n}, function (props) {\n  return props.styleProps.color;\n});\n\nvar ViewerSettingColorItem = function ViewerSettingColorItem(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      colors = _ref.colors,\n      action = _ref.action;\n  var selectColor = useCallback(function (selectedColor) {\n    action(selectedColor);\n  }, [action]);\n  return __jsx(ViewerSettingItem, null, __jsx(ViewerSettingLabel, null, label), __jsx(Controller, null, colors.map(function (color) {\n    return __jsx(Content, {\n      key: color,\n      styleProps: {\n        color: color,\n        isSelected: color === value\n      },\n      onClick: function onClick() {\n        return selectColor(color);\n      }\n    });\n  })));\n};\n\nexport default ViewerSettingColorItem;","map":null,"metadata":{},"sourceType":"module"}