{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport BookList from '../components/books/BookList';\nimport * as booksActions from '../reducers/books';\nimport { getBookInfo, isEpubFile } from '../lib/util';\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.books;\n  }),\n      list = _useSelector.list;\n\n  return __jsx(React.Fragment, null, __jsx(BookList, {\n    books: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = function _callee2(context) {\n  var req, store, fs, _require, EpubParser, files, booksInfo, styles, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file;\n\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          req = context.req, store = context.store;\n\n          if (!req) {\n            _context2.next = 37;\n            break;\n          }\n\n          fs = require('fs');\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          files = fs.readdirSync('public/');\n          booksInfo = [];\n          styles = []; // eslint-disable-next-line no-restricted-syntax\n\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context2.prev = 10;\n          _iterator = files[Symbol.iterator]();\n\n        case 12:\n          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n            _context2.next = 20;\n            break;\n          }\n\n          file = _step.value;\n\n          if (!isEpubFile(file)) {\n            _context2.next = 17;\n            break;\n          }\n\n          _context2.next = 17;\n          return _regeneratorRuntime.awrap(function _callee() {\n            var _file$split, _file$split2, fileName, epubPath, _ref, book, viewers;\n\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _file$split = file.split('.epub'), _file$split2 = _slicedToArray(_file$split, 1), fileName = _file$split2[0];\n                    epubPath = \"epub/\".concat(fileName);\n                    _context.prev = 2;\n                    _context.next = 5;\n                    return _regeneratorRuntime.awrap(getBookInfo(EpubParser, {\n                      epubFile: fileName,\n                      epubPath: epubPath\n                    }));\n\n                  case 5:\n                    _ref = _context.sent;\n                    book = _ref.book;\n                    viewers = _ref.viewers;\n                    booksInfo.push({\n                      book: book,\n                      viewers: viewers,\n                      publicPath: epubPath\n                    });\n                    styles = [].concat(_toConsumableArray(styles), _toConsumableArray(book.styles.map(function (style) {\n                      return \"\".concat(epubPath, \"/\").concat(style.href);\n                    })));\n                    _context.next = 15;\n                    break;\n\n                  case 12:\n                    _context.prev = 12;\n                    _context.t0 = _context[\"catch\"](2);\n                    console.log('Error', _context.t0);\n\n                  case 15:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[2, 12]], Promise);\n          }());\n\n        case 17:\n          _iteratorNormalCompletion = true;\n          _context2.next = 12;\n          break;\n\n        case 20:\n          _context2.next = 26;\n          break;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.t0 = _context2[\"catch\"](10);\n          _didIteratorError = true;\n          _iteratorError = _context2.t0;\n\n        case 26:\n          _context2.prev = 26;\n          _context2.prev = 27;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 29:\n          _context2.prev = 29;\n\n          if (!_didIteratorError) {\n            _context2.next = 32;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 32:\n          return _context2.finish(29);\n\n        case 33:\n          return _context2.finish(26);\n\n        case 34:\n          store.dispatch(booksActions.setBookStyles(styles));\n          store.dispatch(booksActions.setBookList(booksInfo));\n          return _context2.abrupt(\"return\", {\n            booksInfo: booksInfo\n          });\n\n        case 37:\n          return _context2.abrupt(\"return\", {});\n\n        case 38:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[10, 22, 26, 34], [27,, 29, 33]], Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","useSelector","BookList","booksActions","getBookInfo","isEpubFile","Home","state","books","list","getInitialProps","context","req","store","fs","require","EpubParser","files","readdirSync","booksInfo","styles","file","split","fileName","epubPath","epubFile","book","viewers","push","publicPath","map","style","href","console","log","dispatch","setBookStyles","setBookList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\n\nimport * as booksActions from '../reducers/books';\n\nimport { getBookInfo, isEpubFile } from '../lib/util';\n\nimport { ReducerState } from '../interfaces';\nimport { BookInfo } from '../interfaces/books';\n\nconst Home: NextPage = () => {\n  const { list } = useSelector((state: ReducerState) => state.books);\n\n  return (\n    <>\n      <BookList books={list} />\n    </>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n\n    const files = fs.readdirSync('public/');\n    const booksInfo: BookInfo[] = [];\n    let styles: string[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const file of files) {\n      if (isEpubFile(file)) {\n        const [fileName] = file.split('.epub');\n        const epubPath = `epub/${fileName}`;\n        try {\n          const { book, viewers } = await getBookInfo(EpubParser, {\n            epubFile: fileName,\n            epubPath,\n          });\n\n          booksInfo.push({\n            book,\n            viewers,\n            publicPath: epubPath,\n          });\n          styles = [...styles, ...book.styles.map((style) => `${epubPath}/${style.href}`)];\n        } catch (error) {\n          console.log('Error', error);\n        }\n      }\n    }\n    store.dispatch(booksActions.setBookStyles(styles));\n    store.dispatch(booksActions.setBookList(booksInfo));\n\n    return {\n      booksInfo,\n    };\n  }\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}