{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst Test = styled.div.withConfig({\n  displayName: \"pages__Test\",\n  componentId: \"sc-18mi7mi-0\"\n})([\"background-color:black;color:white;\"]);\n\nconst Home = ({\n  spines,\n  description\n}) => {\n  console.log('RRR', spines, description);\n  return __jsx(Test, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Home\");\n};\n\nHome.getInitialProps = async context => {\n  const {\n    req\n  } = context;\n\n  if (req) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const {\n      EpubParser\n    } = require('@ridi/epub-parser');\n\n    console.log('Cddlled');\n\n    try {\n      const parser = new EpubParser('public/pg61611-images.epub');\n      const book = await parser.parse();\n      const spines = await parser.readItems(book.spines);\n      const description = await parser.readItems(book.description);\n      return {\n        spines,\n        description\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n  return {};\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","styled","Test","div","Home","spines","description","console","log","getInitialProps","context","req","EpubParser","require","parser","book","parse","readItems","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,2CAAV;;AAKA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,MAAnB,EAA2BC,WAA3B;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,CARD;;AAUAF,IAAI,CAACK,eAAL,GAAuB,MAAOC,OAAP,IAAkD;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAUD,OAAhB;;AACA,MAAIC,GAAJ,EAAS;AACP;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBC,OAAO,CAAC,mBAAD,CAA9B;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,QAAI;AACF,YAAMM,MAAM,GAAG,IAAIF,UAAJ,CAAe,4BAAf,CAAf;AACA,YAAMG,IAAI,GAAG,MAAMD,MAAM,CAACE,KAAP,EAAnB;AACA,YAAMX,MAAM,GAAG,MAAMS,MAAM,CAACG,SAAP,CAAiBF,IAAI,CAACV,MAAtB,CAArB;AACA,YAAMC,WAAW,GAAG,MAAMQ,MAAM,CAACG,SAAP,CAAiBF,IAAI,CAACT,WAAtB,CAA1B;AAEA,aAAO;AACLD,QAAAA,MADK;AAELC,QAAAA;AAFK,OAAP;AAID,KAVD,CAUE,OAAOY,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBU,KAArB;AACD;AACF;;AAGD,SAAO,EAAP;AACD,CAvBD;;AAyBA,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport { NextPageContext } from 'next';\nimport styled from 'styled-components';\n\nconst Test = styled.div`\n  background-color: black;\n  color: white;\n`;\n\nconst Home = ({ spines, description }) => {\n  console.log('RRR', spines, description);\n\n  return (\n    <Test>\n      Home\n    </Test>\n  );\n};\n\nHome.getInitialProps = async (context: NextPageContext): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { EpubParser } = require('@ridi/epub-parser');\n    console.log('Cddlled');\n    try {\n      const parser = new EpubParser('public/pg61611-images.epub');\n      const book = await parser.parse();\n      const spines = await parser.readItems(book.spines);\n      const description = await parser.readItems(book.description);\n\n      return {\n        spines,\n        description,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}