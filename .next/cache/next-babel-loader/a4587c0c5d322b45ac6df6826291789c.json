{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingCountItem.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { ViewerSettingItemStyle, ViewerSettingValueStyle, ViewerSettingLabelStyle } from '../../styles/viewer';\nconst Container = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Container\",\n  componentId: \"sc-1rnr8mc-0\"\n})([\"\", \"\"], ViewerSettingItemStyle);\nconst Label = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Label\",\n  componentId: \"sc-1rnr8mc-1\"\n})([\"\", \"\"], ViewerSettingLabelStyle);\nconst Value = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Value\",\n  componentId: \"sc-1rnr8mc-2\"\n})([\"\", \"\"], ViewerSettingValueStyle);\nconst Controller = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Controller\",\n  componentId: \"sc-1rnr8mc-3\"\n})([\"display:flex;width:30%;margin:auto 0 auto auto;border:1px solid \", \";border-radius:1em;padding-left:.3em;padding-right:.3em;\"], subColor);\nconst MinusButton = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__MinusButton\",\n  componentId: \"sc-1rnr8mc-4\"\n})([\"width:50%;cursor:pointer;border-right:1px solid \", \"\"], subColor);\nconst PlusButton = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__PlusButton\",\n  componentId: \"sc-1rnr8mc-5\"\n})([\"width:50%;cursor:pointer;\"]);\n\nconst ViewerSettingCountItem = ({\n  label,\n  value,\n  valueUnit,\n  minValue,\n  maxValue,\n  action\n}) => {\n  const dispatch = useDispatch();\n  const countUpValue = useCallback(() => {\n    if (Number(value) + 1 <= maxValue) {\n      dispatch(action(Number(value) + valueUnit));\n    }\n  }, [dispatch, action, value, maxValue, valueUnit]);\n  const countDownValue = useCallback(() => {\n    if (Number(value) - 1 >= minValue) {\n      dispatch(action(Number(value) - valueUnit));\n    }\n  }, [dispatch, action, value, minValue, valueUnit]);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, label), __jsx(Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, value), __jsx(Controller, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(MinusButton, {\n    onClick: countDownValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"-\"), __jsx(PlusButton, {\n    onClick: countUpValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"+\")));\n};\n\nexport default ViewerSettingCountItem;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingCountItem.tsx"],"names":["React","useCallback","useDispatch","styled","subColor","ViewerSettingItemStyle","ViewerSettingValueStyle","ViewerSettingLabelStyle","Container","div","Label","Value","Controller","MinusButton","PlusButton","ViewerSettingCountItem","label","value","valueUnit","minValue","maxValue","action","dispatch","countUpValue","Number","countDownValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SACEC,sBADF,EAEEC,uBAFF,EAGEC,uBAHF,QAIO,qBAJP;AAMA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,aACXJ,sBADW,CAAf;AAIA,MAAMK,KAAK,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,aACPF,uBADO,CAAX;AAIA,MAAMI,KAAK,GAAGR,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,aACPH,uBADO,CAAX;AAIA,MAAMM,UAAU,GAAGT,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,qIAIML,QAJN,CAAhB;AAUA,MAAMS,WAAW,GAAGV,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,6DAGWL,QAHX,CAAjB;AAMA,MAAMU,UAAU,GAAGX,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,iCAAhB;;AAcA,MAAMM,sBAAsD,GAAG,CAAC;AAC9DC,EAAAA,KAD8D;AACvDC,EAAAA,KADuD;AAChDC,EAAAA,SADgD;AAE9DC,EAAAA,QAF8D;AAEpDC,EAAAA,QAFoD;AAE1CC,EAAAA;AAF0C,CAAD,KAGzD;AACJ,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,QAAMqB,YAAY,GAAGtB,WAAW,CAAC,MAAM;AACrC,QAAIuB,MAAM,CAACP,KAAD,CAAN,GAAgB,CAAhB,IAAqBG,QAAzB,EAAmC;AACjCE,MAAAA,QAAQ,CAACD,MAAM,CAACG,MAAM,CAACP,KAAD,CAAN,GAAgBC,SAAjB,CAAP,CAAR;AACD;AACF,GAJ+B,EAI7B,CAACI,QAAD,EAAWD,MAAX,EAAmBJ,KAAnB,EAA0BG,QAA1B,EAAoCF,SAApC,CAJ6B,CAAhC;AAMA,QAAMO,cAAc,GAAGxB,WAAW,CAAC,MAAM;AACvC,QAAIuB,MAAM,CAACP,KAAD,CAAN,GAAgB,CAAhB,IAAqBE,QAAzB,EAAmC;AACjCG,MAAAA,QAAQ,CAACD,MAAM,CAACG,MAAM,CAACP,KAAD,CAAN,GAAgBC,SAAjB,CAAP,CAAR;AACD;AACF,GAJiC,EAI/B,CAACI,QAAD,EAAWD,MAAX,EAAmBJ,KAAnB,EAA0BE,QAA1B,EAAoCD,SAApC,CAJ+B,CAAlC;AAMA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,CADF,EAIE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,CAJF,EAOE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEQ,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAIE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAEF,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CAPF,CADF;AAkBD,CApCD;;AAsCA,eAAeR,sBAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\nimport {\n  ViewerSettingItemStyle,\n  ViewerSettingValueStyle,\n  ViewerSettingLabelStyle,\n} from '../../styles/viewer';\n\nconst Container = styled.div`\n  ${ViewerSettingItemStyle}\n`;\n\nconst Label = styled.div`\n  ${ViewerSettingLabelStyle}\n`;\n\nconst Value = styled.div`\n  ${ViewerSettingValueStyle}\n`;\n\nconst Controller = styled.div`\n  display: flex;\n  width: 30%;\n  margin: auto 0 auto auto;\n  border: 1px solid ${subColor};\n  border-radius: 1em;\n  padding-left: .3em;\n  padding-right: .3em;\n`;\n\nconst MinusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n  border-right: 1px solid ${subColor}\n`;\n\nconst PlusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n`;\n\ninterface Props {\n  label: string;\n  value: string | number;\n  valueUnit: number;\n  minValue: number;\n  maxValue: number;\n  action: (param: string | number) => void;\n}\n\nconst ViewerSettingCountItem: React.FunctionComponent<Props> = ({\n  label, value, valueUnit,\n  minValue, maxValue, action,\n}) => {\n  const dispatch = useDispatch();\n\n  const countUpValue = useCallback(() => {\n    if (Number(value) + 1 <= maxValue) {\n      dispatch(action(Number(value) + valueUnit));\n    }\n  }, [dispatch, action, value, maxValue, valueUnit]);\n\n  const countDownValue = useCallback(() => {\n    if (Number(value) - 1 >= minValue) {\n      dispatch(action(Number(value) - valueUnit));\n    }\n  }, [dispatch, action, value, minValue, valueUnit]);\n\n  return (\n    <Container>\n      <Label>\n        {label}\n      </Label>\n      <Value>\n        {value}\n      </Value>\n      <Controller>\n        <MinusButton onClick={countDownValue}>\n          -\n        </MinusButton>\n        <PlusButton onClick={countUpValue}>\n          +\n        </PlusButton>\n      </Controller>\n    </Container>\n  );\n};\n\nexport default ViewerSettingCountItem;\n"]},"metadata":{},"sourceType":"module"}