{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/books/BookList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 10em;\\n  min-height: 13em;\\n  border: 1px solid \", \";\\n  display: inline-block;\\n  margin: 1em;\\n  vertical-align: bottom;\\n  cursor: grab;\\n  & img {\\n    width: 100%;\\n    user-select: none;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState } from 'react';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { DEFAULT_IMAGE } from '../../constants/books';\nvar Container = styled.ul(_templateObject());\nvar CoverImage = styled.li(_templateObject2(), subColor);\n\nvar BookList = function BookList(_ref) {\n  var books = _ref.books;\n\n  var _useState = useState(books),\n      bookList = _useState[0],\n      setBookList = _useState[1];\n\n  var _useState2 = useState(null),\n      draggedItem = _useState2[0],\n      setDraggedItem = _useState2[1];\n\n  var openBook = useCallback(function (bookIndex) {\n    var selectedBook = bookList[bookIndex];\n    Router.push({});\n  }, [bookList]);\n  var dragStart = useCallback(function (e, index) {\n    setDraggedItem(bookList[index]);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  }, [bookList]);\n  var dragOver = useCallback(function (e, index) {\n    e.preventDefault();\n    var draggedOverItem = bookList[index];\n\n    if (draggedItem.publicPath === draggedOverItem.publicPath) {\n      return;\n    }\n\n    var newSortedBooks = bookList.filter(function (item) {\n      return item.publicPath !== draggedItem.publicPath;\n    });\n    newSortedBooks.splice(index, 0, draggedItem);\n    setBookList(newSortedBooks);\n  }, [bookList, draggedItem]);\n  var dragEnd = useCallback(function (e) {\n    e.preventDefault();\n  }, []);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, bookList.map(function (_ref2, index) {\n    var book = _ref2.book,\n        publicPath = _ref2.publicPath;\n    return __jsx(CoverImage, {\n      onClick: function onClick() {\n        return openBook(index);\n      },\n      onDragOver: function onDragOver(e) {\n        return dragOver(e, index);\n      },\n      key: publicPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: book.cover ? \"\".concat(publicPath, \"/\").concat(book.cover.href) : DEFAULT_IMAGE,\n      draggable: true,\n      onDragStart: function onDragStart(e) {\n        return dragStart(e, index);\n      },\n      onDragEnd: dragEnd,\n      alt: \"Cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default BookList;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/books/BookList.tsx"],"names":["React","useCallback","useState","Router","styled","subColor","DEFAULT_IMAGE","Container","ul","CoverImage","li","BookList","books","bookList","setBookList","draggedItem","setDraggedItem","openBook","bookIndex","selectedBook","push","dragStart","e","index","dataTransfer","effectAllowed","setData","target","parentNode","setDragImage","dragOver","preventDefault","draggedOverItem","publicPath","newSortedBooks","filter","item","splice","dragEnd","map","book","cover","href"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport Router from 'next/router';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\n\nimport { BookInfo } from '../../interfaces/books';\n\nimport { DEFAULT_IMAGE } from '../../constants/books';\n\nconst Container = styled.ul``;\n\nconst CoverImage = styled.li`\n  width: 10em;\n  min-height: 13em;\n  border: 1px solid ${subColor};\n  display: inline-block;\n  margin: 1em;\n  vertical-align: bottom;\n  cursor: grab;\n  & img {\n    width: 100%;\n    user-select: none;\n  }\n`;\n\ninterface Props {\n  books: BookInfo[];\n}\n\nconst BookList: React.FunctionComponent<Props> = ({ books }) => {\n  const [bookList, setBookList] = useState(books);\n  const [draggedItem, setDraggedItem] = useState<BookInfo>(null);\n\n  const openBook = useCallback((bookIndex: number) => {\n    const selectedBook = bookList[bookIndex];\n\n    Router.push({\n\n    });\n  }, [bookList]);\n\n  const dragStart = useCallback((e, index) => {\n    setDraggedItem(bookList[index]);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  }, [bookList]);\n\n  const dragOver = useCallback((e, index) => {\n    e.preventDefault();\n    const draggedOverItem = bookList[index];\n\n    if (draggedItem.publicPath === draggedOverItem.publicPath) {\n      return;\n    }\n\n    const newSortedBooks = bookList.filter((item) => item.publicPath !== draggedItem.publicPath);\n    newSortedBooks.splice(index, 0, draggedItem);\n    setBookList(newSortedBooks);\n  }, [bookList, draggedItem]);\n\n  const dragEnd = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n\n  return (\n    <Container>\n      {\n        bookList.map(({ book, publicPath }, index) => (\n          <CoverImage\n            onClick={() => openBook(index)}\n            onDragOver={(e) => dragOver(e, index)}\n            key={publicPath}\n          >\n            <img\n              src={book.cover ? `${publicPath}/${book.cover.href}` : DEFAULT_IMAGE}\n              draggable\n              onDragStart={(e) => dragStart(e, index)}\n              onDragEnd={dragEnd}\n              alt=\"Cover\"\n            />\n          </CoverImage>\n        ))\n      }\n    </Container>\n  );\n};\n\nexport default BookList;\n"]},"metadata":{},"sourceType":"module"}