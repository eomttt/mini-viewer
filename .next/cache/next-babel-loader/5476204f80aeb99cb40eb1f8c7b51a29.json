{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst Test = styled.div.withConfig({\n  displayName: \"pages__Test\",\n  componentId: \"sc-18mi7mi-0\"\n})([\"\"]);\n\nconst Home = test => {\n  console.log('RRR', test);\n  const {\n    spines,\n    items,\n    book\n  } = test;\n\n  const renderItems = () => {\n    items.map((item, idx) => {\n      const {\n        mediaType\n      } = book.items[idx];\n      console.log(mediaType);\n\n      if (mediaType === 'image/jpeg') {\n        return __jsx(\"img\", {\n          src: `data:image/jpeg;base64,${item.toString('base64')}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n\n      if (mediaType === 'text/css') {}\n\n      return __jsx(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: item\n        },\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    });\n  };\n\n  return __jsx(Test, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, renderItems());\n};\n\nHome.getInitialProps = async context => {\n  const {\n    req\n  } = context;\n\n  if (req) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const {\n      EpubParser\n    } = require('@ridi/epub-parser');\n\n    try {\n      const parser = new EpubParser('public/pg61625-images.epub');\n      const book = await parser.parse({\n        parseStyle: false\n      });\n      const spines = await parser.readItems(book.spines);\n      const items = await parser.readItems(book.items, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true\n      });\n      return {\n        book,\n        spines,\n        items\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n  return {};\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","styled","Test","div","Home","test","console","log","spines","items","book","renderItems","map","item","idx","mediaType","toString","__html","getInitialProps","context","req","EpubParser","require","parser","parse","parseStyle","readItems","force","extractBody","serializedAnchor","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,QAAV;;AAGA,MAAMC,IAAI,GAAIC,IAAD,IAAU;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,IAAnB;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BL,IAAhC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBF,IAAAA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAgBL,IAAI,CAACD,KAAL,CAAWK,GAAX,CAAtB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAZ;;AACA,UAAIA,SAAS,KAAK,YAAlB,EAAgC;AAC9B,eAAO;AAAK,UAAA,GAAG,EAAG,0BAAyBF,IAAI,CAACG,QAAL,CAAc,QAAd,CAAwB,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAAC,UAAID,SAAS,KAAK,UAAlB,EAA8B,CAE/B;;AAED,aAAO;AAAK,QAAA,uBAAuB,EAAE;AAAEE,UAAAA,MAAM,EAAEJ;AAAV,SAA9B;AAAgD,QAAA,GAAG,EAAEC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAVD;AAWD,GAZD;;AAcA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,WAAW,EAFf,CADF;AAOD,CAzBD;;AA2BAP,IAAI,CAACc,eAAL,GAAuB,MAAOC,OAAP,IAAkD;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAUD,OAAhB;;AACA,MAAIC,GAAJ,EAAS;AACP;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBC,OAAO,CAAC,mBAAD,CAA9B;;AACA,QAAI;AACF,YAAMC,MAAM,GAAG,IAAIF,UAAJ,CAAe,4BAAf,CAAf;AACA,YAAMX,IAAI,GAAG,MAAMa,MAAM,CAACC,KAAP,CAAa;AAC9BC,QAAAA,UAAU,EAAE;AADkB,OAAb,CAAnB;AAGA,YAAMjB,MAAM,GAAG,MAAMe,MAAM,CAACG,SAAP,CAAiBhB,IAAI,CAACF,MAAtB,CAArB;AACA,YAAMC,KAAK,GAAG,MAAMc,MAAM,CAACG,SAAP,CAAiBhB,IAAI,CAACD,KAAtB,EAA6B;AAC/CkB,QAAAA,KAAK,EAAE,IADwC;AAE/CC,QAAAA,WAAW,EAAE,IAFkC;AAG/CC,QAAAA,gBAAgB,EAAE;AAH6B,OAA7B,CAApB;AAMA,aAAO;AACLnB,QAAAA,IADK;AAELF,QAAAA,MAFK;AAGLC,QAAAA;AAHK,OAAP;AAKD,KAjBD,CAiBE,OAAOqB,KAAP,EAAc;AACdxB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBuB,KAArB;AACD;AACF;;AAGD,SAAO,EAAP;AACD,CA7BD;;AA+BA,eAAe1B,IAAf","sourcesContent":["import React from 'react';\nimport { NextPageContext } from 'next';\nimport styled from 'styled-components';\n\nconst Test = styled.div`\n`;\n\nconst Home = (test) => {\n  console.log('RRR', test);\n  const { spines, items, book } = test;\n\n  const renderItems = () => {\n    items.map((item, idx) => {\n      const { mediaType } = book.items[idx];\n      console.log(mediaType);\n      if (mediaType === 'image/jpeg') {\n        return <img src={`data:image/jpeg;base64,${item.toString('base64')}`} />;\n      } if (mediaType === 'text/css') {\n\n      }\n\n      return <div dangerouslySetInnerHTML={{ __html: item }} key={idx} />;\n    });\n  };\n\n  return (\n    <Test>\n      {\n        renderItems()\n      }\n    </Test>\n  );\n};\n\nHome.getInitialProps = async (context: NextPageContext): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/pg61625-images.epub');\n      const book = await parser.parse({\n        parseStyle: false,\n      });\n      const spines = await parser.readItems(book.spines);\n      const items = await parser.readItems(book.items, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n      });\n\n      return {\n        book,\n        spines,\n        items,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}