{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { ViewArticleStyle, ViewSectionStyle, ViewerContentsStyle } from '../../styles/viewer';\nimport * as actions from '../../reducers/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\nvar HiddenViewArticle = styled.article.withConfig({\n  displayName: \"ViewerCount__HiddenViewArticle\",\n  componentId: \"sc-1llu6pn-0\"\n})([\"\", \" width:\", \"px;height:\", \"px;overflow:scroll;\"], ViewArticleStyle, function (props) {\n  return props.styleProps.width;\n}, function (props) {\n  return props.styleProps.height;\n});\nvar HiddenViewSection = styled.section.withConfig({\n  displayName: \"ViewerCount__HiddenViewSection\",\n  componentId: \"sc-1llu6pn-1\"\n})([\"\", \" column-width:\", \"px;visibility:hidden;\"], ViewSectionStyle, function (props) {\n  return props.styleProps.width;\n});\nvar Contents = styled.div.withConfig({\n  displayName: \"ViewerCount__Contents\",\n  componentId: \"sc-1llu6pn-2\"\n})([\"\", \"\"], ViewerContentsStyle);\n\nvar ViewerCount = function ViewerCount(_ref) {\n  var viewerWidth = _ref.viewerWidth,\n      viewerHeight = _ref.viewerHeight,\n      viewerSpineIndex = _ref.viewerSpineIndex,\n      viewerSpine = _ref.viewerSpine,\n      spine = _ref.spine;\n  var dispatch = useDispatch();\n  var hiddenViewContainerRef = useRef(null);\n  var hiddenViewSectionRef = useRef(null);\n  useEffect(function () {\n    if (viewerWidth) {\n      var hiddenViewContainerCurrent = hiddenViewContainerRef.current;\n      var count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n      dispatch(actions.setViewerColumnCount({\n        count: count,\n        index: viewerSpineIndex,\n        spineId: spine.id\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewerWidth]);\n  return __jsx(HiddenViewArticle, {\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    ref: hiddenViewContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(HiddenViewSection, {\n    styleProps: {\n      width: viewerWidth\n    },\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","useDispatch","styled","ViewArticleStyle","ViewSectionStyle","ViewerContentsStyle","actions","VIEWER_PAGE_GAP","HiddenViewArticle","article","props","styleProps","width","height","HiddenViewSection","section","Contents","div","ViewerCount","viewerWidth","viewerHeight","viewerSpineIndex","viewerSpine","spine","dispatch","hiddenViewContainerRef","hiddenViewSectionRef","hiddenViewContainerCurrent","current","count","scrollWidth","setViewerColumnCount","index","spineId","id","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,gBADF,EACoBC,gBADpB,EACsCC,mBADtC,QAEO,qBAFP;AAIA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAIA,IAAMC,iBAAiB,GAAGN,MAAM,CAACO,OAAV;AAAA;AAAA;AAAA,yDACnBN,gBADmB,EAEZ,UAACO,KAAD;AAAA,SAAWA,KAAK,CAACC,UAAN,CAAiBC,KAA5B;AAAA,CAFY,EAGX,UAACF,KAAD;AAAA,SAAWA,KAAK,CAACC,UAAN,CAAiBE,MAA5B;AAAA,CAHW,CAAvB;AAOA,IAAMC,iBAAiB,GAAGZ,MAAM,CAACa,OAAV;AAAA;AAAA;AAAA,oDACnBX,gBADmB,EAEL,UAACM,KAAD;AAAA,SAAWA,KAAK,CAACC,UAAN,CAAiBC,KAA5B;AAAA,CAFK,CAAvB;AAMA,IAAMI,QAAQ,GAAGd,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,aACVZ,mBADU,CAAd;;AAYA,IAAMa,WAA2C,GAAG,SAA9CA,WAA8C,OAG9C;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MAFSC,YAET,QAFSA,YAET;AAAA,MADJC,gBACI,QADJA,gBACI;AAAA,MADcC,WACd,QADcA,WACd;AAAA,MAD2BC,KAC3B,QAD2BA,KAC3B;AACJ,MAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,MAAMwB,sBAAsB,GAAG1B,MAAM,CAAC,IAAD,CAArC;AACA,MAAM2B,oBAAoB,GAAG3B,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAImB,WAAJ,EAAiB;AAAA,UACEQ,0BADF,GACiCF,sBADjC,CACPG,OADO;AAEf,UAAMC,KAAK,GAAGF,0BAA0B,CAACG,WAA3B,IAA0CX,WAAW,GAAGZ,eAAxD,CAAd;AAEAiB,MAAAA,QAAQ,CAAClB,OAAO,CAACyB,oBAAR,CAA6B;AACpCF,QAAAA,KAAK,EAALA,KADoC;AAEpCG,QAAAA,KAAK,EAAEX,gBAF6B;AAGpCY,QAAAA,OAAO,EAAEV,KAAK,CAACW;AAHqB,OAA7B,CAAD,CAAR;AAKD,KAVa,CAYhB;;AACC,GAbQ,EAaN,CAACf,WAAD,CAbM,CAAT;AAeA,SACE,MAAC,iBAAD;AACE,IAAA,UAAU,EAAE;AACVP,MAAAA,KAAK,EAAEO,WADG;AAEVN,MAAAA,MAAM,EAAEO;AAFE,KADd;AAKE,IAAA,GAAG,EAAEK,sBALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,iBAAD;AACE,IAAA,UAAU,EAAE;AACVb,MAAAA,KAAK,EAAEO;AADG,KADd;AAIE,IAAA,GAAG,EAAEO,oBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAES,MAAAA,MAAM,EAAEb;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAPF,CADF;AAmBD,CA1CD;;AA4CA,eAAeJ,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport {\n  ViewArticleStyle, ViewSectionStyle, ViewerContentsStyle,\n} from '../../styles/viewer';\n\nimport * as actions from '../../reducers/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { EpubSpineItem } from '../../interfaces/books';\n\nconst HiddenViewArticle = styled.article`\n  ${ViewArticleStyle}\n  width: ${(props) => props.styleProps.width}px;\n  height: ${(props) => props.styleProps.height}px;\n  overflow: scroll;\n`;\n\nconst HiddenViewSection = styled.section`\n  ${ViewSectionStyle}\n  column-width: ${(props) => props.styleProps.width}px;\n  visibility: hidden;\n`;\n\nconst Contents = styled.div`\n  ${ViewerContentsStyle}\n`;\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewerSpineIndex: number;\n  viewerSpine: string;\n  spine: EpubSpineItem;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewerSpineIndex, viewerSpine, spine,\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (viewerWidth) {\n      const { current: hiddenViewContainerCurrent } = hiddenViewContainerRef;\n      const count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n\n      dispatch(actions.setViewerColumnCount({\n        count,\n        index: viewerSpineIndex,\n        spineId: spine.id,\n      }));\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewerWidth]);\n\n  return (\n    <HiddenViewArticle\n      styleProps={{\n        width: viewerWidth,\n        height: viewerHeight,\n      }}\n      ref={hiddenViewContainerRef}\n    >\n      <HiddenViewSection\n        styleProps={{\n          width: viewerWidth,\n        }}\n        ref={hiddenViewSectionRef}\n      >\n        <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n      </HiddenViewSection>\n    </HiddenViewArticle>\n\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}