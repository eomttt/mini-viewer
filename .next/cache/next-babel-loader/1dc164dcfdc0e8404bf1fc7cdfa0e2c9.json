{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HiddenViewArticle, HiddenViewSection, Contents } from '../../styles/viewer';\nimport * as actions from '../../reducers/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nconst ViewerCount = ({\n  viewerWidth,\n  viewerHeight,\n  viewerSpineIndex,\n  viewerSpine,\n  spine\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n  useEffect(() => {\n    if (viewerWidth) {\n      const {\n        current: hiddenViewContainerCurrent\n      } = hiddenViewContainerRef;\n      const count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n      dispatch(actions.setViewerColumnCount({\n        index: viewerSpineIndex,\n        count: count - 1,\n        spineId: spine.id\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewerWidth]);\n  return __jsx(HiddenViewArticle, {\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    ref: hiddenViewContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(HiddenViewSection, {\n    styleProps: {\n      width: viewerWidth\n    },\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","useDispatch","HiddenViewArticle","HiddenViewSection","Contents","actions","VIEWER_PAGE_GAP","ViewerCount","viewerWidth","viewerHeight","viewerSpineIndex","viewerSpine","spine","dispatch","hiddenViewContainerRef","hiddenViewSectionRef","current","hiddenViewContainerCurrent","count","scrollWidth","setViewerColumnCount","index","spineId","id","width","height","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SACEC,iBADF,EACqBC,iBADrB,EAEEC,QAFF,QAGO,qBAHP;AAKA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAYA,MAAMC,WAA2C,GAAG,CAAC;AACnDC,EAAAA,WADmD;AACtCC,EAAAA,YADsC;AAEnDC,EAAAA,gBAFmD;AAEjCC,EAAAA,WAFiC;AAEpBC,EAAAA;AAFoB,CAAD,KAG9C;AACJ,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,sBAAsB,GAAGf,MAAM,CAAC,IAAD,CAArC;AACA,QAAMgB,oBAAoB,GAAGhB,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAJ,EAAiB;AACf,YAAM;AAAEQ,QAAAA,OAAO,EAAEC;AAAX,UAA0CH,sBAAhD;AACA,YAAMI,KAAK,GAAGD,0BAA0B,CAACE,WAA3B,IAA0CX,WAAW,GAAGF,eAAxD,CAAd;AAEAO,MAAAA,QAAQ,CAACR,OAAO,CAACe,oBAAR,CAA6B;AACpCC,QAAAA,KAAK,EAAEX,gBAD6B;AAEpCQ,QAAAA,KAAK,EAAEA,KAAK,GAAG,CAFqB;AAGpCI,QAAAA,OAAO,EAAEV,KAAK,CAACW;AAHqB,OAA7B,CAAD,CAAR;AAKD,KAVa,CAYhB;;AACC,GAbQ,EAaN,CAACf,WAAD,CAbM,CAAT;AAeA,SACE,MAAC,iBAAD;AACE,IAAA,UAAU,EAAE;AACVgB,MAAAA,KAAK,EAAEhB,WADG;AAEViB,MAAAA,MAAM,EAAEhB;AAFE,KADd;AAKE,IAAA,GAAG,EAAEK,sBALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,iBAAD;AACE,IAAA,UAAU,EAAE;AACVU,MAAAA,KAAK,EAAEhB;AADG,KADd;AAIE,IAAA,GAAG,EAAEO,oBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAEW,MAAAA,MAAM,EAAEf;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAPF,CADF;AAmBD,CA1CD;;AA4CA,eAAeJ,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  HiddenViewArticle, HiddenViewSection,\n  Contents,\n} from '../../styles/viewer';\n\nimport * as actions from '../../reducers/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { EpubSpineItem } from '../../interfaces/books';\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewerSpineIndex: number;\n  viewerSpine: string;\n  spine: EpubSpineItem;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewerSpineIndex, viewerSpine, spine,\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (viewerWidth) {\n      const { current: hiddenViewContainerCurrent } = hiddenViewContainerRef;\n      const count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n\n      dispatch(actions.setViewerColumnCount({\n        index: viewerSpineIndex,\n        count: count - 1,\n        spineId: spine.id,\n      }));\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewerWidth]);\n\n  return (\n    <HiddenViewArticle\n      styleProps={{\n        width: viewerWidth,\n        height: viewerHeight,\n      }}\n      ref={hiddenViewContainerRef}\n    >\n      <HiddenViewSection\n        styleProps={{\n          width: viewerWidth,\n        }}\n        ref={hiddenViewSectionRef}\n      >\n        <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n      </HiddenViewSection>\n    </HiddenViewArticle>\n\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}