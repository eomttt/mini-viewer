{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { defaultColor } from '../styles';\nexport const initialState = {\n  fontSize: 1,\n  padding: 0,\n  lineHeight: 1.5,\n  backgroundColor: defaultColor\n}; // Action types\n\nexport const SET_FONT_SIZE = 'viewerSetting/SET_FONT_SIZE';\nexport const SET_PADDING = 'viewerSetting/SET_PADDING';\nexport const SET_LINE_HEIGHT = 'viewerSetting/SET_LINE_HEIGHT';\nexport const SET_BACKGROUND_COLOR = 'viewerSetting/SET_VIEWER_SETTING_BACKGROUND_COLOR'; // Action creators\n\nexport const setViewerSettingFontSize = fontSize => ({\n  type: SET_FONT_SIZE,\n  payload: {\n    fontSize\n  }\n});\nexport const setViewerSettingPadding = padding => ({\n  type: SET_PADDING,\n  payload: {\n    padding\n  }\n});\nexport const setViewerSettingLineHeight = lineHeight => ({\n  type: SET_LINE_HEIGHT,\n  payload: {\n    lineHeight\n  }\n});\nexport const setViewerSettingBackgroundColor = color => ({\n  type: SET_BACKGROUND_COLOR,\n  payload: {\n    backgroundColor: color\n  }\n});\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_FONT_SIZE:\n      {\n        const {\n          fontSize\n        } = payload;\n        return _objectSpread({}, state, {\n          fontSize\n        });\n      }\n\n    case SET_PADDING:\n      {\n        const {\n          padding\n        } = payload;\n        return _objectSpread({}, state, {\n          padding\n        });\n      }\n\n    case SET_LINE_HEIGHT:\n      {\n        const {\n          lineHeight\n        } = payload;\n        return _objectSpread({}, state, {\n          lineHeight\n        });\n      }\n\n    case SET_BACKGROUND_COLOR:\n      {\n        const {\n          backgroundColor\n        } = payload;\n        return _objectSpread({}, state, {\n          backgroundColor\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/reducers/viewerSetting.ts"],"names":["defaultColor","initialState","fontSize","padding","lineHeight","backgroundColor","SET_FONT_SIZE","SET_PADDING","SET_LINE_HEIGHT","SET_BACKGROUND_COLOR","setViewerSettingFontSize","type","payload","setViewerSettingPadding","setViewerSettingLineHeight","setViewerSettingBackgroundColor","color","state","action"],"mappings":";;;;;;AAGA,SAASA,YAAT,QAA6B,WAA7B;AAEA,OAAO,MAAMC,YAAgC,GAAG;AAC9CC,EAAAA,QAAQ,EAAE,CADoC;AAE9CC,EAAAA,OAAO,EAAE,CAFqC;AAG9CC,EAAAA,UAAU,EAAE,GAHkC;AAI9CC,EAAAA,eAAe,EAAEL;AAJ6B,CAAzC,C,CAOP;;AACA,OAAO,MAAMM,aAAa,GAAG,6BAAtB;AACP,OAAO,MAAMC,WAAW,GAAG,2BAApB;AACP,OAAO,MAAMC,eAAe,GAAG,+BAAxB;AACP,OAAO,MAAMC,oBAAoB,GAAG,mDAA7B,C,CAEP;;AACA,OAAO,MAAMC,wBAAwB,GAAIR,QAAD,KAAuB;AAC7DS,EAAAA,IAAI,EAAEL,aADuD;AAE7DM,EAAAA,OAAO,EAAE;AACPV,IAAAA;AADO;AAFoD,CAAvB,CAAjC;AAOP,OAAO,MAAMW,uBAAuB,GAAIV,OAAD,KAAsB;AAC3DQ,EAAAA,IAAI,EAAEJ,WADqD;AAE3DK,EAAAA,OAAO,EAAE;AACPT,IAAAA;AADO;AAFkD,CAAtB,CAAhC;AAOP,OAAO,MAAMW,0BAA0B,GAAIV,UAAD,KAAyB;AACjEO,EAAAA,IAAI,EAAEH,eAD2D;AAEjEI,EAAAA,OAAO,EAAE;AACPR,IAAAA;AADO;AAFwD,CAAzB,CAAnC;AAOP,OAAO,MAAMW,+BAA+B,GAAIC,KAAD,KAAoB;AACjEL,EAAAA,IAAI,EAAEF,oBAD2D;AAEjEG,EAAAA,OAAO,EAAE;AACPP,IAAAA,eAAe,EAAEW;AADV;AAFwD,CAApB,CAAxC;AAOP,gBAAe,CAACC,KAAK,GAAGhB,YAAT,EAAuBiB,MAAvB,KAAqE;AAClF,QAAM;AAAEP,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBM,MAA1B;;AACA,UAAQP,IAAR;AACE,SAAKL,aAAL;AAAoB;AAClB,cAAM;AAAEJ,UAAAA;AAAF,YAAeU,OAArB;AACA,iCACKK,KADL;AAEEf,UAAAA;AAFF;AAID;;AACD,SAAKK,WAAL;AAAkB;AAChB,cAAM;AAAEJ,UAAAA;AAAF,YAAcS,OAApB;AACA,iCACKK,KADL;AAEEd,UAAAA;AAFF;AAID;;AACD,SAAKK,eAAL;AAAsB;AACpB,cAAM;AAAEJ,UAAAA;AAAF,YAAiBQ,OAAvB;AACA,iCACKK,KADL;AAEEb,UAAAA;AAFF;AAID;;AACD,SAAKK,oBAAL;AAA2B;AACzB,cAAM;AAAEJ,UAAAA;AAAF,YAAsBO,OAA5B;AACA,iCACKK,KADL;AAEEZ,UAAAA;AAFF;AAID;;AACD;AAAS;AACP,iCACKY,KADL;AAGD;AAjCH;AAmCD,CArCD","sourcesContent":["import { ReducerAction } from '../interfaces';\nimport { ViewerSettingState } from '../interfaces/viewer';\n\nimport { defaultColor } from '../styles';\n\nexport const initialState: ViewerSettingState = {\n  fontSize: 1,\n  padding: 0,\n  lineHeight: 1.5,\n  backgroundColor: defaultColor,\n};\n\n// Action types\nexport const SET_FONT_SIZE = 'viewerSetting/SET_FONT_SIZE';\nexport const SET_PADDING = 'viewerSetting/SET_PADDING';\nexport const SET_LINE_HEIGHT = 'viewerSetting/SET_LINE_HEIGHT';\nexport const SET_BACKGROUND_COLOR = 'viewerSetting/SET_VIEWER_SETTING_BACKGROUND_COLOR';\n\n// Action creators\nexport const setViewerSettingFontSize = (fontSize: number) => ({\n  type: SET_FONT_SIZE,\n  payload: {\n    fontSize,\n  },\n});\n\nexport const setViewerSettingPadding = (padding: number) => ({\n  type: SET_PADDING,\n  payload: {\n    padding,\n  },\n});\n\nexport const setViewerSettingLineHeight = (lineHeight: number) => ({\n  type: SET_LINE_HEIGHT,\n  payload: {\n    lineHeight,\n  },\n});\n\nexport const setViewerSettingBackgroundColor = (color: string) => ({\n  type: SET_BACKGROUND_COLOR,\n  payload: {\n    backgroundColor: color,\n  },\n});\n\nexport default (state = initialState, action: ReducerAction): ViewerSettingState => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_FONT_SIZE: {\n      const { fontSize } = payload;\n      return {\n        ...state,\n        fontSize,\n      };\n    }\n    case SET_PADDING: {\n      const { padding } = payload;\n      return {\n        ...state,\n        padding,\n      };\n    }\n    case SET_LINE_HEIGHT: {\n      const { lineHeight } = payload;\n      return {\n        ...state,\n        lineHeight,\n      };\n    }\n    case SET_BACKGROUND_COLOR: {\n      const { backgroundColor } = payload;\n      return {\n        ...state,\n        backgroundColor,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}