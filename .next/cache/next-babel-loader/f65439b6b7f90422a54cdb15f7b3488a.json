{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport ViewerPageComponent from '../components/viewer/ViewerPage';\nimport Layout from '../components/Layout';\n\nvar Viewer = function Viewer(_ref) {\n  var book = _ref.book,\n      viewerSpines = _ref.viewerSpines,\n      styleLinks = _ref.styleLinks,\n      basePath = _ref.basePath;\n\n  var _useState = useState([]),\n      styleTags = _useState[0],\n      setStyleTags = _useState[1];\n\n  useEffect(function () {\n    var styles = book.styles;\n    setStyleTags(styles.map(function (style) {\n      return __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"\".concat(basePath, \"/\").concat(style.href),\n        key: style.href,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }));\n  }, [basePath, book]);\n  console.log('Style', styleTags, styleLinks);\n  return __jsx(Layout, {\n    styleLinks: styleLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, styleTags.map(function (styleTag) {\n    return styleTag;\n  })), __jsx(ViewerPageComponent, {\n    spines: book.spines,\n    viewerSpines: viewerSpines,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nViewer.getInitialProps = function _callee(context) {\n  var req, _require, EpubParser, parser, book, viewerSpines;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req;\n\n          if (!req) {\n            _context.next = 17;\n            break;\n          }\n\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _context.prev = 3;\n          parser = new EpubParser('public/jikji.epub');\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: 'public/epub/jikji'\n          }));\n\n        case 7:\n          book = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(parser.readItems(book.spines, {\n            force: true,\n            extractBody: true,\n            serializedAnchor: true,\n            ignoreScript: true,\n            basePath: 'epub/jikji'\n          }));\n\n        case 10:\n          viewerSpines = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            viewerSpines: viewerSpines,\n            styleLinks: book.styles.map(function (style) {\n              return \"epub/jikji/\".concat(style.href);\n            }),\n            basePath: 'epub/jikji'\n          });\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](3);\n          console.log('Error', _context.t0);\n\n        case 17:\n          return _context.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 14]], Promise);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx"],"names":["React","useEffect","useState","Head","ViewerPageComponent","Layout","Viewer","book","viewerSpines","styleLinks","basePath","styleTags","setStyleTags","styles","map","style","href","console","log","styleTag","spines","getInitialProps","context","req","require","EpubParser","parser","parse","validatePackage","parseStyle","unzipPath","readItems","force","extractBody","serializedAnchor","ignoreScript"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NextPageContext, NextPage } from 'next';\nimport Head from 'next/head';\n\nimport ViewerPageComponent from '../components/viewer/ViewerPage';\n\nimport { EpubBook } from '../interfaces/books';\nimport Layout from '../components/Layout';\n\ninterface Props {\n  book: EpubBook;\n  viewerSpines: string[];\n  styleLinks: string[];\n  basePath: string;\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewerSpines, styleLinks, basePath }) => {\n  const [styleTags, setStyleTags] = useState([]);\n\n  useEffect(() => {\n    const {\n      styles,\n    } = book;\n\n    setStyleTags(styles.map((style) => <link rel=\"stylesheet\" href={`${basePath}/${style.href}`} key={style.href} />));\n  }, [basePath, book]);\n\n  console.log('Style', styleTags, styleLinks);\n\n  return (\n    <Layout\n    styleLinks={styleLinks}\n    >\n      <Head>\n        {styleTags.map((styleTag) => styleTag)}\n      </Head>\n      <ViewerPageComponent\n        spines={book.spines}\n        viewerSpines={viewerSpines}\n      />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/jikji.epub');\n      const book: EpubBook = await parser.parse({\n        validatePackage: true,\n        parseStyle: false,\n        unzipPath: 'public/epub/jikji',\n      });\n      const viewerSpines = await parser.readItems(book.spines, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n        ignoreScript: true,\n        basePath: 'epub/jikji',\n      });\n\n      return {\n        book,\n        viewerSpines,\n        styleLinks: book.styles.map((style) => `epub/jikji/${style.href}`),\n        basePath: 'epub/jikji',\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}