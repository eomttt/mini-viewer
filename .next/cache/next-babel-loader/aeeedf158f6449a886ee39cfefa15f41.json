{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCalculator from '../components/viewer/ViewerCalculator';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\nimport * as viewerActions from '../reducers/viewer';\nimport { getBookInfo } from '../lib/util';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\nvar Container = styled.div.withConfig({\n  displayName: \"viewer__Container\",\n  componentId: \"sc-1iklkx5-0\"\n})([\"padding:\", \"% \", \"%;height:\", \"px;background-color:\", \";text-align:center;overflow:hidden;\"], (100 - VIEWER_HEIGHT_RATIO) / 2, (100 - VIEWER_WIDTH_RATIO) / 2, function (props) {\n  return props.styleProps.height;\n}, function (props) {\n  return props.styleProps.backgroundColor;\n});\n\nvar Viewer = function Viewer(_ref) {\n  var book = _ref.book,\n      viewers = _ref.viewers,\n      styleLinks = _ref.styleLinks;\n  var spines = book.spines,\n      titles = book.titles,\n      ncx = book.ncx,\n      contributors = book.contributors;\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  var _useState4 = useState(0),\n      wholePageCount = _useState4[0],\n      setWholePageCount = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.books;\n  }),\n      styles = _useSelector.styles;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector2.viewerCountList,\n      viewerPageCount = _useSelector2.viewerPageCount;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.viewerSetting;\n  }),\n      fontSize = _useSelector3.fontSize,\n      widthRatio = _useSelector3.widthRatio,\n      lineHeight = _useSelector3.lineHeight,\n      backgroundColor = _useSelector3.backgroundColor;\n\n  var isAnalyzedSpine = useMemo(function () {\n    return viewerCountList.length >= viewers.length;\n  }, [viewerCountList, viewers]);\n  var isFirstPage = useMemo(function () {\n    return viewerPageCount === 0;\n  }, [viewerPageCount]);\n  var isLastPage = useMemo(function () {\n    return viewerPageCount === wholePageCount;\n  }, [viewerPageCount, wholePageCount]);\n  var selectedSpineIndex = useMemo(function () {\n    var spineIndex = 0;\n    var accurateCount = 0;\n    viewerCountList.some(function (viewerCount) {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  var pageColumnOffset = useMemo(function () {\n    var columnOffset = viewerPageCount;\n    viewerCountList.some(function (viewerCount, index) {\n      if (index < nowSpineIndex) {\n        columnOffset -= viewerCount.count;\n        return false;\n      }\n\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n    return function () {\n      dispatch(viewerActions.initViewerState());\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n  useEffect(function () {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      var pageCount = viewerCountList.reduce(function (acc, cur) {\n        return acc + cur.count;\n      }, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n  useEffect(function () {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n  var calculateViewerWidth = useCallback(function (nowWidth, newRatio) {\n    return Math.floor(Number(nowWidth) * (Number(newRatio) / 100));\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(ViewerHeader, {\n    titles: titles,\n    authors: contributors,\n    ncxItem: ncx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), __jsx(Container, {\n    styleProps: {\n      height: viewerHeight,\n      backgroundColor: backgroundColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, isAnalyzedSpine && __jsx(ViewerPage, {\n    viewerWidth: calculateViewerWidth(viewerWidth, widthRatio),\n    viewerHeight: viewerHeight,\n    pageColumnOffset: pageColumnOffset,\n    viewerSpine: viewers[nowSpineIndex],\n    isFirstPage: isFirstPage,\n    isLastPage: isLastPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), !isAnalyzedSpine && __jsx(ViewerCalculator, {\n    viewerWidth: calculateViewerWidth(viewerWidth, widthRatio),\n    viewerHeight: viewerHeight,\n    spines: spines,\n    viewers: viewers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(ViewerBottom, {\n    sliderMaxValue: wholePageCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nViewer.getInitialProps = function _callee(context) {\n  var req, store, query, bookPath, queryPath, _require, EpubParser, _queryPath$split, _queryPath$split2, fileName, _ref2, book, viewers, _store$getState, books, list, selectedBookInfo, _selectedBookInfo, _book, _viewers, publicPath;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req, store = context.store, query = context.query;\n          bookPath = query.bookPath;\n          queryPath = decodeURI(String(bookPath));\n\n          if (!req) {\n            _context.next = 20;\n            break;\n          }\n\n          // Server side render\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _queryPath$split = queryPath.split('/'), _queryPath$split2 = _slicedToArray(_queryPath$split, 2), fileName = _queryPath$split2[1];\n          _context.prev = 6;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getBookInfo(EpubParser, {\n            epubFile: fileName,\n            epubPath: queryPath\n          }));\n\n        case 9:\n          _ref2 = _context.sent;\n          book = _ref2.book;\n          viewers = _ref2.viewers;\n          return _context.abrupt(\"return\", {\n            book: book,\n            viewers: viewers,\n            styleLinks: book.styles.map(function (style) {\n              return \"\".concat(queryPath, \"/\").concat(style.href);\n            })\n          });\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](6);\n          console.log('Error', _context.t0);\n\n        case 18:\n          _context.next = 26;\n          break;\n\n        case 20:\n          // Client side render\n          _store$getState = store.getState(), books = _store$getState.books;\n          list = books.list;\n          selectedBookInfo = list[0];\n          list.some(function (bookInfo) {\n            if (bookInfo.publicPath === queryPath) {\n              selectedBookInfo = bookInfo;\n              return true;\n            }\n\n            return false;\n          });\n          _selectedBookInfo = selectedBookInfo, _book = _selectedBookInfo.book, _viewers = _selectedBookInfo.viewers, publicPath = _selectedBookInfo.publicPath;\n          return _context.abrupt(\"return\", {\n            book: _book,\n            viewers: _viewers,\n            styleLinks: _book.styles.map(function (style) {\n              return \"\".concat(publicPath, \"/\").concat(style.href);\n            })\n          });\n\n        case 26:\n          return _context.abrupt(\"return\", {});\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 15]], Promise);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx"],"names":["React","useState","useMemo","useEffect","useCallback","useSelector","useDispatch","styled","ViewerBottom","ViewerCalculator","ViewerHeader","ViewerPage","viewerActions","getBookInfo","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","Container","div","props","styleProps","height","backgroundColor","Viewer","book","viewers","styleLinks","spines","titles","ncx","contributors","dispatch","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","wholePageCount","setWholePageCount","state","books","styles","viewer","viewerCountList","viewerPageCount","viewerSetting","fontSize","widthRatio","lineHeight","isAnalyzedSpine","length","isFirstPage","isLastPage","selectedSpineIndex","spineIndex","accurateCount","some","viewerCount","count","index","pageColumnOffset","columnOffset","Math","floor","window","innerWidth","innerHeight","initViewerState","console","log","pageCount","reduce","acc","cur","calculateViewerWidth","nowWidth","newRatio","Number","getInitialProps","context","req","store","query","bookPath","queryPath","decodeURI","String","require","EpubParser","split","fileName","epubFile","epubPath","map","style","href","getState","list","selectedBookInfo","bookInfo","publicPath"],"mappings":"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","sourcesContent":["import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCalculator from '../components/viewer/ViewerCalculator';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\n\nimport * as viewerActions from '../reducers/viewer';\n\nimport { getBookInfo } from '../lib/util';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\n\nimport { ReducerState } from '../interfaces';\nimport { EpubBook } from '../interfaces/books';\n\nconst Container = styled.div`\n  padding: ${(100 - VIEWER_HEIGHT_RATIO) / 2}% ${(100 - VIEWER_WIDTH_RATIO) / 2}%;\n  height: ${(props) => props.styleProps.height}px;\n  background-color: ${(props) => props.styleProps.backgroundColor};\n  text-align: center;\n  overflow: hidden;\n`;\n\ninterface Props {\n  book: EpubBook;\n  viewers: string[];\n  styleLinks: string[];\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewers, styleLinks }) => {\n  const {\n    spines, titles, ncx, contributors,\n  } = book;\n  const dispatch = useDispatch();\n\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n  const [wholePageCount, setWholePageCount] = useState(0);\n\n  const { styles } = useSelector((state: ReducerState) => state.books);\n  const {\n    viewerCountList, viewerPageCount,\n  } = useSelector((state: ReducerState) => state.viewer);\n  const {\n    fontSize, widthRatio, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const isAnalyzedSpine = useMemo(() => viewerCountList.length >= viewers.length, [viewerCountList, viewers]);\n  const isFirstPage = useMemo(() => viewerPageCount === 0, [viewerPageCount]);\n  const isLastPage = useMemo(() => viewerPageCount === wholePageCount, [viewerPageCount, wholePageCount]);\n  const selectedSpineIndex = useMemo(() => {\n    let spineIndex = 0;\n    let accurateCount = 0;\n    viewerCountList.some((viewerCount) => {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  const pageColumnOffset = useMemo(() => {\n    let columnOffset = viewerPageCount;\n    viewerCountList.some((viewerCount, index) => {\n      if (index < nowSpineIndex) {\n        columnOffset -= (viewerCount.count);\n        return false;\n      }\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n    return () => {\n      dispatch(viewerActions.initViewerState());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n\n  useEffect(() => {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      const pageCount = viewerCountList.reduce((acc, cur) => acc + cur.count, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n\n  useEffect(() => {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n\n  const calculateViewerWidth = useCallback(\n    (nowWidth, newRatio) => Math.floor(Number(nowWidth) * (Number(newRatio) / 100)),\n    [],\n  );\n\n  return (\n    <>\n      <ViewerHeader\n        titles={titles}\n        authors={contributors}\n        ncxItem={ncx}\n      />\n      <Container\n        styleProps={{\n          height: viewerHeight,\n          backgroundColor,\n        }}\n      >\n        {isAnalyzedSpine\n        && (\n        <ViewerPage\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          pageColumnOffset={pageColumnOffset}\n          viewerSpine={viewers[nowSpineIndex]}\n          isFirstPage={isFirstPage}\n          isLastPage={isLastPage}\n        />\n        )}\n        {!isAnalyzedSpine\n        && (\n        <ViewerCalculator\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          spines={spines}\n          viewers={viewers}\n        />\n        )}\n      </Container>\n      <ViewerBottom\n        sliderMaxValue={wholePageCount}\n      />\n    </>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store, query } = context;\n  const { bookPath } = query;\n  const queryPath = decodeURI(String(bookPath));\n\n  if (req) {\n    // Server side render\n    const { EpubParser } = require('@ridi/epub-parser');\n    const [, fileName] = queryPath.split('/');\n    try {\n      const { book, viewers } = await getBookInfo(EpubParser, {\n        epubFile: fileName,\n        epubPath: queryPath,\n      });\n\n      return {\n        book,\n        viewers,\n        styleLinks: book.styles.map((style) => `${queryPath}/${style.href}`),\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  } else {\n    // Client side render\n    const { books }: ReducerState = store.getState();\n    const { list } = books;\n\n    let selectedBookInfo = list[0];\n\n    list.some((bookInfo) => {\n      if (bookInfo.publicPath === queryPath) {\n        selectedBookInfo = bookInfo;\n        return true;\n      }\n      return false;\n    });\n\n    const { book, viewers, publicPath } = selectedBookInfo;\n\n    return {\n      book,\n      viewers,\n      styleLinks: book.styles.map((style) => `${publicPath}/${style.href}`),\n    };\n  }\n\n  return {};\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}