{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  viewerSpineId: '',\n  viewerCountList: [],\n  viewerPageCount: 0\n}; // Action types\n\nexport var SET_VIEWER_SPINE_ID = 'viewer/SET_VIEWER_SPINE_ID';\nexport var SET_VIEWER_COLUMN_COUNT = 'viewer/SET_VIEWER_COLUMN_COUNT';\nexport var SET_VIEWER_PAGE_COUNT = 'viewer/SET_VIEWER_PAGE_COUNT';\nexport var SET_COUNT_UP_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_UP_VIEWER_PAGE_COUNT';\nexport var SET_COUNT_DOWN_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_DOWN_VIEWER_PAGE_COUNT'; // Action creators\n\nexport var setViewerSpineId = function setViewerSpineId(spineId) {\n  return {\n    type: SET_VIEWER_SPINE_ID,\n    payload: {\n      spineId: spineId\n    }\n  };\n};\nexport var setViewerColumnCount = function setViewerColumnCount(_ref) {\n  var index = _ref.index,\n      count = _ref.count,\n      spineId = _ref.spineId;\n  return {\n    type: SET_VIEWER_COLUMN_COUNT,\n    payload: {\n      index: index,\n      count: count,\n      spineId: spineId\n    }\n  };\n};\nexport var setViewerPageCount = function setViewerPageCount(pageCount) {\n  return {\n    type: SET_VIEWER_PAGE_COUNT,\n    payload: {\n      pageCount: pageCount\n    }\n  };\n};\nexport var setCountUpViewerPageCount = function setCountUpViewerPageCount() {\n  return {\n    type: SET_COUNT_UP_VIEWER_PAGE_COUNT\n  };\n};\nexport var setCountDownViewerPageCount = function setCountDownViewerPageCount() {\n  return {\n    type: SET_COUNT_DOWN_VIEWER_PAGE_COUNT\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case SET_VIEWER_SPINE_ID:\n      {\n        var spineId = payload.spineId;\n        return _objectSpread({}, state, {\n          viewerSpineId: spineId\n        });\n      }\n\n    case SET_VIEWER_COLUMN_COUNT:\n      {\n        var index = payload.index,\n            count = payload.count,\n            _spineId = payload.spineId;\n        return _objectSpread({}, state, {\n          viewerCountList: [].concat(_toConsumableArray(state.viewerCountList), [{\n            index: index,\n            count: count,\n            spineId: _spineId\n          }])\n        });\n      }\n\n    case SET_VIEWER_PAGE_COUNT:\n      {\n        var pageCount = payload.pageCount;\n        return _objectSpread({}, state, {\n          viewerPageCount: pageCount\n        });\n      }\n\n    case SET_COUNT_UP_VIEWER_PAGE_COUNT:\n      {\n        return _objectSpread({}, state, {\n          viewerPageCount: state.viewerPageCount + 1\n        });\n      }\n\n    case SET_COUNT_DOWN_VIEWER_PAGE_COUNT:\n      {\n        return _objectSpread({}, state, {\n          viewerPageCount: state.viewerPageCount - 1\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n});","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/reducers/viewer.ts"],"names":["initialState","viewerSpineId","viewerCountList","viewerPageCount","SET_VIEWER_SPINE_ID","SET_VIEWER_COLUMN_COUNT","SET_VIEWER_PAGE_COUNT","SET_COUNT_UP_VIEWER_PAGE_COUNT","SET_COUNT_DOWN_VIEWER_PAGE_COUNT","setViewerSpineId","spineId","type","payload","setViewerColumnCount","index","count","setViewerPageCount","pageCount","setCountUpViewerPageCount","setCountDownViewerPageCount","state","action"],"mappings":"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","sourcesContent":["import { ReducerAction } from '../interfaces';\nimport { ViewerState } from '../interfaces/viewer';\n\nexport const initialState: ViewerState = {\n  viewerSpineId: '',\n  viewerCountList: [],\n  viewerPageCount: 0,\n};\n\n// Action types\nexport const SET_VIEWER_SPINE_ID = 'viewer/SET_VIEWER_SPINE_ID';\nexport const SET_VIEWER_COLUMN_COUNT = 'viewer/SET_VIEWER_COLUMN_COUNT';\n\nexport const SET_VIEWER_PAGE_COUNT = 'viewer/SET_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_UP_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_UP_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_DOWN_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_DOWN_VIEWER_PAGE_COUNT';\n\n// Action creators\nexport const setViewerSpineId = (spineId: string) => ({\n  type: SET_VIEWER_SPINE_ID,\n  payload: {\n    spineId,\n  },\n});\n\nexport const setViewerColumnCount = (\n  { index, count, spineId }: {index: number; count: number; spineId: string},\n) => ({\n  type: SET_VIEWER_COLUMN_COUNT,\n  payload: {\n    index,\n    count,\n    spineId,\n  },\n});\n\nexport const setViewerPageCount = (pageCount: number) => ({\n  type: SET_VIEWER_PAGE_COUNT,\n  payload: {\n    pageCount,\n  },\n});\n\nexport const setCountUpViewerPageCount = () => ({\n  type: SET_COUNT_UP_VIEWER_PAGE_COUNT,\n});\n\nexport const setCountDownViewerPageCount = () => ({\n  type: SET_COUNT_DOWN_VIEWER_PAGE_COUNT,\n});\n\nexport default (state = initialState, action: ReducerAction): ViewerState => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_VIEWER_SPINE_ID: {\n      const { spineId } = payload;\n      return {\n        ...state,\n        viewerSpineId: spineId,\n      };\n    }\n    case SET_VIEWER_COLUMN_COUNT: {\n      const { index, count, spineId } = payload;\n      return {\n        ...state,\n        viewerCountList: [...state.viewerCountList, { index, count, spineId }],\n      };\n    }\n    case SET_VIEWER_PAGE_COUNT: {\n      const { pageCount } = payload;\n      return {\n        ...state,\n        viewerPageCount: pageCount,\n      };\n    }\n    case SET_COUNT_UP_VIEWER_PAGE_COUNT: {\n      return {\n        ...state,\n        viewerPageCount: state.viewerPageCount + 1,\n      };\n    }\n    case SET_COUNT_DOWN_VIEWER_PAGE_COUNT: {\n      return {\n        ...state,\n        viewerPageCount: state.viewerPageCount - 1,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}