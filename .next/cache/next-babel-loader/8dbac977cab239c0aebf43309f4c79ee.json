{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nvar Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-18mi7mi-0\"\n})([\"\"]);\n\nvar Home = function Home(bookInfo) {\n  console.log('RRR', bookInfo);\n\n  var _useState = useState([]),\n      styleTags = _useState[0],\n      setStyleTags = _useState[1];\n\n  var readSpines = bookInfo.readSpines,\n      book = bookInfo.book,\n      basePath = bookInfo.basePath;\n  useEffect(function () {\n    var styles = book.styles;\n    setStyleTags(styles.map(function (style) {\n      return __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"\".concat(basePath, \"/\").concat(style.href),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }));\n  }, [basePath, book]); // const renderBookItem = (bookItem, readItem): JSX.Element => {\n  //   if (imagesId.includes(bookItem.id)) {\n  //     return <img src={`${basePath}/${bookItem.href}`} alt=\"Cover\" />;\n  //   }\n  //   if (stylesId.includes(bookItem.id)) {\n  //     return <link rel=\"stylesheet\" href={`${basePath}/${bookItem.href}`} />;\n  //   }\n  //   if (ncx.id === bookItem.id) {\n  //     return <div>NCX</div>;\n  //   }\n  //   // eslint-disable-next-line react/no-danger\n  //   return <div dangerouslySetInnerHTML={{ __html: readItem }} />;\n  // };\n  // const renderItems = (): JSX.Element => items.map((item, idx) => {\n  //   return (\n  //     <section key={idx}>\n  //       {renderBookItem(item, readItems[idx])}\n  //     </section>\n  //   );\n  // });\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, // eslint-disable-next-line react/no-danger\n  readSpines.map(function (spine) {\n    return __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: spine\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }));\n};\n\nHome.getInitialProps = function _callee(context) {\n  var req, _require, EpubParser, parser, book, readSpines;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req;\n\n          if (!req) {\n            _context.next = 17;\n            break;\n          }\n\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _context.prev = 3;\n          parser = new EpubParser('public/pg61625-images.epub');\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: 'public/epub/pg61625-images'\n          }));\n\n        case 7:\n          book = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(parser.readItems(book.spines, {\n            force: true,\n            extractBody: true,\n            serializedAnchor: true,\n            ignoreScript: true,\n            basePath: 'epub/pg61625-images'\n          }));\n\n        case 10:\n          readSpines = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            readSpines: readSpines,\n            basePath: 'epub/pg61625-images'\n          });\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](3);\n          console.log('Error', _context.t0);\n\n        case 17:\n          return _context.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 14]], Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","useEffect","useState","styled","Container","div","Home","bookInfo","console","log","styleTags","setStyleTags","readSpines","book","basePath","styles","map","style","href","spine","__html","getInitialProps","context","req","require","EpubParser","parser","parse","validatePackage","parseStyle","unzipPath","readItems","spines","force","extractBody","serializedAnchor","ignoreScript"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,QAAf;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,QAAD,EAAc;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,QAAnB;;AADyB,kBAESL,QAAQ,CAAC,EAAD,CAFjB;AAAA,MAElBQ,SAFkB;AAAA,MAEPC,YAFO;;AAAA,MAKvBC,UALuB,GAMrBL,QANqB,CAKvBK,UALuB;AAAA,MAKXC,IALW,GAMrBN,QANqB,CAKXM,IALW;AAAA,MAKLC,QALK,GAMrBP,QANqB,CAKLO,QALK;AAQzBb,EAAAA,SAAS,CAAC,YAAM;AAAA,QAEZc,MAFY,GAGVF,IAHU,CAEZE,MAFY;AAKdJ,IAAAA,YAAY,CAACI,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD;AAAA,aAAW;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,YAAKH,QAAL,cAAiBG,KAAK,CAACC,IAAvB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AAAA,KAAX,CAAD,CAAZ;AACD,GANQ,EAMN,CAACJ,QAAD,EAAWD,IAAX,CANM,CAAT,CARyB,CAgBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACAD,EAAAA,UAAU,CAACI,GAAX,CAAe,UAACG,KAAD;AAAA,WAAW;AAAK,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAED;AAAV,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AAAA,GAAf,CAHJ,CADF;AAQD,CA9CD;;AAgDAb,IAAI,CAACe,eAAL,GAAuB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,GADa,GACLD,OADK,CACbC,GADa;;AAAA,eAEjBA,GAFiB;AAAA;AAAA;AAAA;;AAAA,qBAGIC,OAAO,CAAC,mBAAD,CAHX,EAGXC,UAHW,YAGXA,UAHW;AAAA;AAKXC,UAAAA,MALW,GAKF,IAAID,UAAJ,CAAe,4BAAf,CALE;AAAA;AAAA,2CAMEC,MAAM,CAACC,KAAP,CAAa;AAC9BC,YAAAA,eAAe,EAAE,IADa;AAE9BC,YAAAA,UAAU,EAAE,KAFkB;AAG9BC,YAAAA,SAAS,EAAE;AAHmB,WAAb,CANF;;AAAA;AAMXjB,UAAAA,IANW;AAAA;AAAA,2CAWQa,MAAM,CAACK,SAAP,CAAiBlB,IAAI,CAACmB,MAAtB,EAA8B;AACrDC,YAAAA,KAAK,EAAE,IAD8C;AAErDC,YAAAA,WAAW,EAAE,IAFwC;AAGrDC,YAAAA,gBAAgB,EAAE,IAHmC;AAIrDC,YAAAA,YAAY,EAAE,IAJuC;AAKrDtB,YAAAA,QAAQ,EAAE;AAL2C,WAA9B,CAXR;;AAAA;AAWXF,UAAAA,UAXW;AAAA,2CAmBV;AACLC,YAAAA,IAAI,EAAJA,IADK;AAELD,YAAAA,UAAU,EAAVA,UAFK;AAGLE,YAAAA,QAAQ,EAAE;AAHL,WAnBU;;AAAA;AAAA;AAAA;AAyBjBN,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAzBiB;AAAA,2CA8Bd,EA9Bc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAiCA,eAAeH,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NextPageContext } from 'next';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n`;\n\nconst Home = (bookInfo) => {\n  console.log('RRR', bookInfo);\n  const [styleTags, setStyleTags] = useState([]);\n\n  const {\n    readSpines, book, basePath,\n  } = bookInfo;\n\n  useEffect(() => {\n    const {\n      styles,\n    } = book;\n\n    setStyleTags(styles.map((style) => <link rel=\"stylesheet\" href={`${basePath}/${style.href}`} />));\n  }, [basePath, book]);\n\n  // const renderBookItem = (bookItem, readItem): JSX.Element => {\n  //   if (imagesId.includes(bookItem.id)) {\n  //     return <img src={`${basePath}/${bookItem.href}`} alt=\"Cover\" />;\n  //   }\n  //   if (stylesId.includes(bookItem.id)) {\n  //     return <link rel=\"stylesheet\" href={`${basePath}/${bookItem.href}`} />;\n  //   }\n  //   if (ncx.id === bookItem.id) {\n  //     return <div>NCX</div>;\n  //   }\n  //   // eslint-disable-next-line react/no-danger\n  //   return <div dangerouslySetInnerHTML={{ __html: readItem }} />;\n  // };\n\n  // const renderItems = (): JSX.Element => items.map((item, idx) => {\n  //   return (\n  //     <section key={idx}>\n  //       {renderBookItem(item, readItems[idx])}\n  //     </section>\n  //   );\n  // });\n\n  return (\n    <Container>\n      {\n        // eslint-disable-next-line react/no-danger\n        readSpines.map((spine) => <div dangerouslySetInnerHTML={{ __html: spine }} />)\n      }\n    </Container>\n  );\n};\n\nHome.getInitialProps = async (context: NextPageContext): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/pg61625-images.epub');\n      const book = await parser.parse({\n        validatePackage: true,\n        parseStyle: false,\n        unzipPath: 'public/epub/pg61625-images',\n      });\n      const readSpines = await parser.readItems(book.spines, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n        ignoreScript: true,\n        basePath: 'epub/pg61625-images',\n      });\n\n      return {\n        book,\n        readSpines,\n        basePath: 'epub/pg61625-images',\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}