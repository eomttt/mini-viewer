{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/no-danger */\nimport React, { useState, useRef, useCallback, useMemo } from 'react';\nimport { ViewArticle, ViewSection, Contents, LeftButton, RightButton } from '../../styles/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nconst Viewer = ({\n  viewerWidth,\n  viewerHeight,\n  wholeColumnCount,\n  spine,\n  viewerSpine,\n  setNextSpine,\n  setPrevSpine\n}) => {\n  const {\n    0: nowViewerCount,\n    1: setNowViewerCount\n  } = useState(0);\n  const hasNextViewer = useMemo(() => nowViewerCount < wholeColumnCount, [nowViewerCount, wholeColumnCount]);\n  const hasPrevViewer = useMemo(() => nowViewerCount > 0, [nowViewerCount]);\n  const viewArticleRef = useRef(null);\n  const clickRight = useCallback(() => {\n    console.log('AAAA', nowViewerCount, wholeColumnCount);\n\n    if (viewArticleRef) {\n      const {\n        current: viewArticleRefCurrent\n      } = viewArticleRef;\n\n      if (nowViewerCount <= wholeColumnCount) {\n        setNowViewerCount(nowViewerCount + 1);\n        viewArticleRefCurrent.scrollLeft += viewerWidth + VIEWER_PAGE_GAP;\n      } else {\n        viewArticleRefCurrent.scrollLeft = 0;\n        setNowViewerCount(0);\n        setNextSpine();\n      }\n    }\n  }, [viewArticleRef, wholeColumnCount, nowViewerCount, viewerWidth, setNextSpine]);\n  const clickLeft = useCallback(() => {\n    if (viewArticleRef) {\n      const {\n        current: viewArticleRefCurrent\n      } = viewArticleRef;\n\n      if (hasPrevViewer) {\n        setNowViewerCount(nowViewerCount - 1);\n        viewArticleRefCurrent.scrollLeft -= viewerWidth + VIEWER_PAGE_GAP;\n      } else {\n        viewArticleRefCurrent.scrollLeft = 0;\n        setNowViewerCount(0);\n        setPrevSpine();\n      }\n    }\n  }, [viewArticleRef, hasPrevViewer, nowViewerCount, viewerWidth, setPrevSpine]);\n  return __jsx(React.Fragment, null, __jsx(ViewArticle, {\n    ref: viewArticleRef,\n    onClick: clickRight,\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(ViewSection, {\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), __jsx(LeftButton, {\n    onClick: clickLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Left\"), __jsx(RightButton, {\n    onClick: clickRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Right\"));\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx"],"names":["React","useState","useRef","useCallback","useMemo","ViewArticle","ViewSection","Contents","LeftButton","RightButton","VIEWER_PAGE_GAP","Viewer","viewerWidth","viewerHeight","wholeColumnCount","spine","viewerSpine","setNextSpine","setPrevSpine","nowViewerCount","setNowViewerCount","hasNextViewer","hasPrevViewer","viewArticleRef","clickRight","console","log","current","viewArticleRefCurrent","scrollLeft","clickLeft","width","height","__html"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IACEC,QADF,EACYC,MADZ,EACoBC,WADpB,EACiCC,OADjC,QAEO,OAFP;AAMA,SACEC,WADF,EACeC,WADf,EAC4BC,QAD5B,EAEEC,UAFF,EAEcC,WAFd,QAGO,qBAHP;AAKA,SAASC,eAAT,QAAgC,wBAAhC;;AAYA,MAAMC,MAAsC,GAAG,CAAC;AAC9CC,EAAAA,WAD8C;AACjCC,EAAAA,YADiC;AACnBC,EAAAA,gBADmB;AAE9CC,EAAAA,KAF8C;AAEvCC,EAAAA,WAFuC;AAG9CC,EAAAA,YAH8C;AAGhCC,EAAAA;AAHgC,CAAD,KAIzC;AACJ,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCnB,QAAQ,CAAC,CAAD,CAApD;AAEA,QAAMoB,aAAa,GAAGjB,OAAO,CAAC,MAAMe,cAAc,GAAGL,gBAAxB,EAA0C,CAACK,cAAD,EAAiBL,gBAAjB,CAA1C,CAA7B;AACA,QAAMQ,aAAa,GAAGlB,OAAO,CAAC,MAAMe,cAAc,GAAG,CAAxB,EAA2B,CAACA,cAAD,CAA3B,CAA7B;AAEA,QAAMI,cAAc,GAAGrB,MAAM,CAAC,IAAD,CAA7B;AAEA,QAAMsB,UAAU,GAAGrB,WAAW,CAAC,MAAM;AACnCsB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,cAApB,EAAoCL,gBAApC;;AACA,QAAIS,cAAJ,EAAoB;AAClB,YAAM;AAAEI,QAAAA,OAAO,EAAEC;AAAX,UAAqCL,cAA3C;;AAEA,UAAIJ,cAAc,IAAIL,gBAAtB,EAAwC;AACtCM,QAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACAS,QAAAA,qBAAqB,CAACC,UAAtB,IAAqCjB,WAAW,GAAGF,eAAnD;AACD,OAHD,MAGO;AACLkB,QAAAA,qBAAqB,CAACC,UAAtB,GAAmC,CAAnC;AACAT,QAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACAH,QAAAA,YAAY;AACb;AACF;AACF,GAd6B,EAc3B,CAACM,cAAD,EAAiBT,gBAAjB,EAAmCK,cAAnC,EAAmDP,WAAnD,EAAgEK,YAAhE,CAd2B,CAA9B;AAgBA,QAAMa,SAAS,GAAG3B,WAAW,CAAC,MAAM;AAClC,QAAIoB,cAAJ,EAAoB;AAClB,YAAM;AAAEI,QAAAA,OAAO,EAAEC;AAAX,UAAqCL,cAA3C;;AAEA,UAAID,aAAJ,EAAmB;AACjBF,QAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACAS,QAAAA,qBAAqB,CAACC,UAAtB,IAAqCjB,WAAW,GAAGF,eAAnD;AACD,OAHD,MAGO;AACLkB,QAAAA,qBAAqB,CAACC,UAAtB,GAAmC,CAAnC;AACAT,QAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACAF,QAAAA,YAAY;AACb;AACF;AACF,GAb4B,EAa1B,CAACK,cAAD,EAAiBD,aAAjB,EAAgCH,cAAhC,EAAgDP,WAAhD,EAA6DM,YAA7D,CAb0B,CAA7B;AAeA,SACE,4BACE,MAAC,WAAD;AACE,IAAA,GAAG,EAAEK,cADP;AAEE,IAAA,OAAO,EAAEC,UAFX;AAGE,IAAA,UAAU,EAAE;AACVO,MAAAA,KAAK,EAAEnB,WADG;AAEVoB,MAAAA,MAAM,EAAEnB;AAFE,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,WAAD;AACE,IAAA,UAAU,EAAE;AACVkB,MAAAA,KAAK,EAAEnB,WADG;AAEVoB,MAAAA,MAAM,EAAEnB;AAFE,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAEoB,MAAAA,MAAM,EAAEjB;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CARF,CADF,EAkBE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAEc,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAmBE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEN,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CADF;AAuBD,CAlED;;AAoEA,eAAeb,MAAf","sourcesContent":["/* eslint-disable react/no-danger */\nimport React, {\n  useState, useRef, useCallback, useMemo,\n} from 'react';\n\nimport { EpubSpineItem } from '../../interfaces/books';\n\nimport {\n  ViewArticle, ViewSection, Contents,\n  LeftButton, RightButton,\n} from '../../styles/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  wholeColumnCount: number;\n  spine: EpubSpineItem;\n  viewerSpine: string;\n  setNextSpine: () => void;\n  setPrevSpine: () => void;\n}\n\nconst Viewer: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight, wholeColumnCount,\n  spine, viewerSpine,\n  setNextSpine, setPrevSpine,\n}) => {\n  const [nowViewerCount, setNowViewerCount] = useState(0);\n\n  const hasNextViewer = useMemo(() => nowViewerCount < wholeColumnCount, [nowViewerCount, wholeColumnCount]);\n  const hasPrevViewer = useMemo(() => nowViewerCount > 0, [nowViewerCount]);\n\n  const viewArticleRef = useRef(null);\n\n  const clickRight = useCallback(() => {\n    console.log('AAAA', nowViewerCount, wholeColumnCount);\n    if (viewArticleRef) {\n      const { current: viewArticleRefCurrent } = viewArticleRef;\n\n      if (nowViewerCount <= wholeColumnCount) {\n        setNowViewerCount(nowViewerCount + 1);\n        viewArticleRefCurrent.scrollLeft += (viewerWidth + VIEWER_PAGE_GAP);\n      } else {\n        viewArticleRefCurrent.scrollLeft = 0;\n        setNowViewerCount(0);\n        setNextSpine();\n      }\n    }\n  }, [viewArticleRef, wholeColumnCount, nowViewerCount, viewerWidth, setNextSpine]);\n\n  const clickLeft = useCallback(() => {\n    if (viewArticleRef) {\n      const { current: viewArticleRefCurrent } = viewArticleRef;\n\n      if (hasPrevViewer) {\n        setNowViewerCount(nowViewerCount - 1);\n        viewArticleRefCurrent.scrollLeft -= (viewerWidth + VIEWER_PAGE_GAP);\n      } else {\n        viewArticleRefCurrent.scrollLeft = 0;\n        setNowViewerCount(0);\n        setPrevSpine();\n      }\n    }\n  }, [viewArticleRef, hasPrevViewer, nowViewerCount, viewerWidth, setPrevSpine]);\n\n  return (\n    <>\n      <ViewArticle\n        ref={viewArticleRef}\n        onClick={clickRight}\n        styleProps={{\n          width: viewerWidth,\n          height: viewerHeight,\n        }}\n      >\n        <ViewSection\n          styleProps={{\n            width: viewerWidth,\n            height: viewerHeight,\n          }}\n        >\n          <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n        </ViewSection>\n      </ViewArticle>\n      <LeftButton onClick={clickLeft}>Left</LeftButton>\n      <RightButton onClick={clickRight}>Right</RightButton>\n    </>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}