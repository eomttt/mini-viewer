{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { subColor, defaultColor } from '../../styles';\nimport * as viewerActions from '../../reducers/viewer';\nvar Container = styled.div.withConfig({\n  displayName: \"ViewerNcx__Container\",\n  componentId: \"q4ouf6-0\"\n})([\"position:relative;\"]);\nvar ToggleButton = styled.div.withConfig({\n  displayName: \"ViewerNcx__ToggleButton\",\n  componentId: \"q4ouf6-1\"\n})([\"cursor:pointer;\"]);\nvar NavPointItems = styled.ul.withConfig({\n  displayName: \"ViewerNcx__NavPointItems\",\n  componentId: \"q4ouf6-2\"\n})([\"position:absolute;width:10em;height:30em;left:50%;transform:translateX(-50%);overflow:scroll;list-style-type:none;margin:0;padding:0;border:1px solid \", \";background-color:\", \";\"], subColor, defaultColor);\nvar NavPointItem = styled.li.withConfig({\n  displayName: \"ViewerNcx__NavPointItem\",\n  componentId: \"q4ouf6-3\"\n})([\"text-align:center;padding:2px;border-bottom:1px solid \", \";cursor:pointer;margin:0;&:nth-last-child(1){border-bottom:initial;}\"], subColor);\n\nvar ViewerNcx = function ViewerNcx(_ref) {\n  var ncxItem = _ref.ncxItem;\n  var navPoints = ncxItem.navPoints;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector.viewerCountList;\n\n  var _useState = useState(false),\n      isShowNcx = _useState[0],\n      setIsShowNcx = _useState[1];\n\n  var setViewerPage = useCallback(function (viewerSpineId) {\n    // 목차에서 선택할 때에 pageCount 업데이트 해준다.\n    var spineIndex = -1;\n    var spinePageCount = 0;\n    viewerCountList.some(function (viewrCount, index) {\n      if (viewrCount.spineId === viewerSpineId) {\n        spineIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (spineIndex > -1) {\n      viewerCountList.some(function (viewerCount, index) {\n        if (index < spineIndex) {\n          spinePageCount += viewerCount.count;\n          return false;\n        }\n\n        return true;\n      });\n      dispatch(viewerActions.setViewerPageCount(spinePageCount));\n    }\n  }, [dispatch, viewerCountList]);\n  var toggleShowNcs = useCallback(function () {\n    setIsShowNcx(!isShowNcx);\n  }, [isShowNcx]);\n  var selectNavPoint = useCallback(function (point) {\n    setIsShowNcx(false);\n    setViewerPage(point.spine.id);\n  }, [setViewerPage]);\n  return __jsx(Container, null, __jsx(ToggleButton, {\n    onClick: toggleShowNcs\n  }, \"\\uBAA9\\uCC28\"), isShowNcx && __jsx(NavPointItems, null, navPoints.map(function (navPoint) {\n    return __jsx(NavPointItem, {\n      onClick: function onClick() {\n        return selectNavPoint(navPoint);\n      },\n      key: navPoint.label\n    }, navPoint.label);\n  })));\n};\n\nexport default ViewerNcx;","map":null,"metadata":{},"sourceType":"module"}