{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/no-danger */\nimport React, { useState, useRef, useCallback, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ViewArticle, ViewSection, Contents, LeftButton, RightButton } from '../../styles/viewer';\nimport * as actions from '../../reducers/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nvar ViewerPage = function ViewerPage(_ref) {\n  var viewerWidth = _ref.viewerWidth,\n      viewerHeight = _ref.viewerHeight,\n      pageColumnOffset = _ref.pageColumnOffset,\n      wholeColumnCount = _ref.wholeColumnCount,\n      viewerSpine = _ref.viewerSpine,\n      setNextSpine = _ref.setNextSpine,\n      setPrevSpine = _ref.setPrevSpine;\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      nowViewerCount = _useState[0],\n      setNowViewerCount = _useState[1];\n\n  var hasNextViewer = useMemo(function () {\n    return nowViewerCount <= wholeColumnCount;\n  }, [nowViewerCount, wholeColumnCount]);\n  var hasPrevViewer = useMemo(function () {\n    return nowViewerCount > 0;\n  }, [nowViewerCount]);\n  var viewArticleRef = useRef(null);\n  useEffect(function () {\n    var viewArticleRefCurrent = viewArticleRef.current;\n    viewArticleRefCurrent.scrollLeft = 0;\n    setNowViewerCount(0);\n  }, [viewerSpine]);\n  var clickRight = useCallback(function () {\n    var viewArticleRefCurrent = viewArticleRef.current;\n\n    if (hasNextViewer) {\n      setNowViewerCount(nowViewerCount + 1);\n      viewArticleRefCurrent.scrollLeft += viewerWidth + VIEWER_PAGE_GAP;\n      dispatch(actions.setCountUpViewerPageCount());\n    } else {\n      setNextSpine();\n    }\n  }, [dispatch, hasNextViewer, nowViewerCount, viewerWidth, setNextSpine]);\n  var clickLeft = useCallback(function () {\n    var viewArticleRefCurrent = viewArticleRef.current;\n\n    if (hasPrevViewer) {\n      setNowViewerCount(nowViewerCount - 1);\n      viewArticleRefCurrent.scrollLeft -= viewerWidth + VIEWER_PAGE_GAP;\n      dispatch(actions.setCountDownViewerPageCount());\n    } else {\n      setPrevSpine();\n    }\n  }, [dispatch, hasPrevViewer, nowViewerCount, viewerWidth, setPrevSpine]);\n  return __jsx(React.Fragment, null, __jsx(ViewArticle, {\n    ref: viewArticleRef,\n    onClick: clickRight,\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(ViewSection, {\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), __jsx(LeftButton, {\n    onClick: clickLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Left\"), __jsx(RightButton, {\n    onClick: clickRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Right\"));\n};\n\nexport default ViewerPage;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx"],"names":["React","useState","useRef","useCallback","useMemo","useEffect","useDispatch","ViewArticle","ViewSection","Contents","LeftButton","RightButton","actions","VIEWER_PAGE_GAP","ViewerPage","viewerWidth","viewerHeight","pageColumnOffset","wholeColumnCount","viewerSpine","setNextSpine","setPrevSpine","dispatch","nowViewerCount","setNowViewerCount","hasNextViewer","hasPrevViewer","viewArticleRef","viewArticleRefCurrent","current","scrollLeft","clickRight","setCountUpViewerPageCount","clickLeft","setCountDownViewerPageCount","width","height","__html"],"mappings":"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","sourcesContent":["\n/* eslint-disable react/no-danger */\nimport React, {\n  useState, useRef, useCallback, useMemo, useEffect,\n} from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  ViewArticle, ViewSection, Contents,\n  LeftButton, RightButton,\n} from '../../styles/viewer';\n\nimport * as actions from '../../reducers/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  pageColumnOffset: number;\n  wholeColumnCount: number;\n  viewerSpine: string;\n  setNextSpine: () => void;\n  setPrevSpine: () => void;\n}\n\nconst ViewerPage: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  pageColumnOffset, wholeColumnCount,\n  viewerSpine,\n  setNextSpine, setPrevSpine,\n}) => {\n  const dispatch = useDispatch();\n  const [nowViewerCount, setNowViewerCount] = useState(0);\n\n  const hasNextViewer = useMemo(() => nowViewerCount <= wholeColumnCount, [nowViewerCount, wholeColumnCount]);\n  const hasPrevViewer = useMemo(() => nowViewerCount > 0, [nowViewerCount]);\n\n  const viewArticleRef = useRef(null);\n\n  useEffect(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n    viewArticleRefCurrent.scrollLeft = 0;\n    setNowViewerCount(0);\n  }, [viewerSpine]);\n\n  const clickRight = useCallback(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n    if (hasNextViewer) {\n      setNowViewerCount(nowViewerCount + 1);\n      viewArticleRefCurrent.scrollLeft += (viewerWidth + VIEWER_PAGE_GAP);\n      dispatch(actions.setCountUpViewerPageCount());\n    } else {\n      setNextSpine();\n    }\n  }, [dispatch, hasNextViewer, nowViewerCount, viewerWidth, setNextSpine]);\n\n  const clickLeft = useCallback(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n\n    if (hasPrevViewer) {\n      setNowViewerCount(nowViewerCount - 1);\n      viewArticleRefCurrent.scrollLeft -= (viewerWidth + VIEWER_PAGE_GAP);\n      dispatch(actions.setCountDownViewerPageCount());\n    } else {\n      setPrevSpine();\n    }\n  }, [dispatch, hasPrevViewer, nowViewerCount, viewerWidth, setPrevSpine]);\n\n  return (\n    <>\n      <ViewArticle\n        ref={viewArticleRef}\n        onClick={clickRight}\n        styleProps={{\n          width: viewerWidth,\n          height: viewerHeight,\n        }}\n      >\n        <ViewSection\n          styleProps={{\n            width: viewerWidth,\n            height: viewerHeight,\n          }}\n        >\n          <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n        </ViewSection>\n      </ViewArticle>\n      <LeftButton onClick={clickLeft}>Left</LeftButton>\n      <RightButton onClick={clickRight}>Right</RightButton>\n    </>\n  );\n};\n\nexport default ViewerPage;\n"]},"metadata":{},"sourceType":"module"}