{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\nimport * as booksActions from '../reducers/books';\nimport { getBook, getViewers } from '../lib/util';\n\nvar Home = function Home(_ref) {\n  var styleLinks = _ref.styleLinks;\n\n  var _useSelector = useSelector(function (state) {\n    return state.books;\n  }),\n      list = _useSelector.list;\n\n  return __jsx(Layout, {\n    styleLinks: styleLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(BookList, {\n    books: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = function _callee2(context) {\n  var req, store, fs, _require, EpubParser, booksInfo, styleLinks, files, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file;\n\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          req = context.req, store = context.store;\n\n          if (!req) {\n            _context2.next = 43;\n            break;\n          }\n\n          fs = require('fs');\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          booksInfo = [];\n          styleLinks = [];\n          files = fs.readdirSync('public/');\n          _context2.prev = 7;\n          // eslint-disable-next-line no-restricted-syntax\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context2.prev = 11;\n          _iterator = files[Symbol.iterator]();\n\n        case 13:\n          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n            _context2.next = 21;\n            break;\n          }\n\n          file = _step.value;\n\n          if (!file.includes('.epub')) {\n            _context2.next = 18;\n            break;\n          }\n\n          _context2.next = 18;\n          return _regeneratorRuntime.awrap(function _callee() {\n            var publicPath, parser, book, viewers;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    publicPath = \"epub/\".concat(file.split('.epub')[0]);\n                    parser = new EpubParser(\"public/\".concat(file));\n                    _context.next = 4;\n                    return _regeneratorRuntime.awrap(getBook(parser, {\n                      unzipPath: \"public/\".concat(publicPath)\n                    }));\n\n                  case 4:\n                    book = _context.sent;\n\n                    if (!book) {\n                      _context.next = 11;\n                      break;\n                    }\n\n                    _context.next = 8;\n                    return _regeneratorRuntime.awrap(getViewers(parser, {\n                      bookSpines: book.spines,\n                      publicPath: publicPath\n                    }));\n\n                  case 8:\n                    viewers = _context.sent;\n                    booksInfo.push({\n                      book: book,\n                      viewers: viewers,\n                      publicPath: publicPath\n                    });\n                    styleLinks = styleLinks.concat(book.styles.map(function (style) {\n                      return \"\".concat(publicPath, \"/\").concat(style.href);\n                    }));\n\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }());\n\n        case 18:\n          _iteratorNormalCompletion = true;\n          _context2.next = 13;\n          break;\n\n        case 21:\n          _context2.next = 27;\n          break;\n\n        case 23:\n          _context2.prev = 23;\n          _context2.t0 = _context2[\"catch\"](11);\n          _didIteratorError = true;\n          _iteratorError = _context2.t0;\n\n        case 27:\n          _context2.prev = 27;\n          _context2.prev = 28;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 30:\n          _context2.prev = 30;\n\n          if (!_didIteratorError) {\n            _context2.next = 33;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 33:\n          return _context2.finish(30);\n\n        case 34:\n          return _context2.finish(27);\n\n        case 35:\n          store.dispatch(booksActions.setStyleLinks(styleLinks));\n          store.dispatch(booksActions.setBookList(booksInfo));\n          return _context2.abrupt(\"return\", {\n            styleLinks: styleLinks\n          });\n\n        case 40:\n          _context2.prev = 40;\n          _context2.t1 = _context2[\"catch\"](7);\n          console.log('Error', _context2.t1);\n\n        case 43:\n          return _context2.abrupt(\"return\", {});\n\n        case 44:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[7, 40], [11, 23, 27, 35], [28,, 30, 34]], Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","useSelector","Layout","BookList","booksActions","getBook","getViewers","Home","styleLinks","state","books","list","getInitialProps","context","req","store","fs","require","EpubParser","booksInfo","files","readdirSync","file","includes","publicPath","split","parser","unzipPath","book","bookSpines","spines","viewers","push","concat","styles","map","style","href","dispatch","setStyleLinks","setBookList","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\n\nimport * as booksActions from '../reducers/books';\n\nimport { getBook, getViewers } from '../lib/util';\n\nimport { ReducerState } from '../interfaces';\nimport { BookInfo, EpubBook } from '../interfaces/books';\n\ninterface Props {\n  styleLinks: string[];\n}\n\nconst Home: NextPage<Props> = ({ styleLinks }) => {\n  const { list } = useSelector((state: ReducerState) => state.books);\n\n  return (\n    <Layout\n      styleLinks={styleLinks}\n    >\n      <BookList books={list} />\n    </Layout>\n  );\n};\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n    const booksInfo: BookInfo[] = [];\n    let styleLinks: string[] = [];\n\n    const files = fs.readdirSync('public/');\n    try {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          const publicPath = `epub/${file.split('.epub')[0]}`;\n\n          const parser = new EpubParser(`public/${file}`);\n          const book: EpubBook = await getBook(parser, {\n            unzipPath: `public/${publicPath}`,\n          });\n\n          if (book) {\n            const viewers = await getViewers(parser, {\n              bookSpines: book.spines,\n              publicPath,\n            });\n            booksInfo.push({\n              book,\n              viewers,\n              publicPath,\n            });\n            styleLinks = styleLinks.concat(book.styles.map((style) => `${publicPath}/${style.href}`));\n          }\n        }\n      }\n      store.dispatch(booksActions.setStyleLinks(styleLinks));\n      store.dispatch(booksActions.setBookList(booksInfo));\n\n      return {\n        styleLinks,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}