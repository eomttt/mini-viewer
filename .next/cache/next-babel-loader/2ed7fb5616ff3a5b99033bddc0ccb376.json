{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Viewer from './Viewer';\nimport ViewerCount from './ViewerCount';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nvar ViewerPage = function ViewerPage(_ref) {\n  var spines = _ref.spines,\n      viewerSpines = _ref.viewerSpines;\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n  var setNextSpine = useCallback(function () {\n    console.log('Set next spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex + 1);\n  }, [nowSpineIndex]);\n  var setPrevSpine = useCallback(function () {\n    console.log('Set prev spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex - 1);\n  }, [nowSpineIndex]);\n\n  var setViewerSpineColumnCount = function setViewerSpineColumnCount(spineIndex, count) {\n    console.log('SpineIndex', spineIndex, count);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Viewer, {\n    viewerWidth: viewerWidth,\n    viewerHeight: viewerHeight,\n    nowSpineIndex: nowSpineIndex,\n    spine: spines[nowSpineIndex],\n    viewerSpine: viewerSpines[nowSpineIndex],\n    setNextSpine: setNextSpine,\n    setPrevSpine: setPrevSpine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), viewerSpines.forEach(function (viewerSpine, index) {\n    return __jsx(ViewerCount, {\n      viewerSpine: viewerSpine,\n      viewerSpineIndex: index,\n      viewerColumnCountCallback: setViewerSpineColumnCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default ViewerPage;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx"],"names":["React","useCallback","useState","useEffect","Viewer","ViewerCount","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","ViewerPage","spines","viewerSpines","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","Math","floor","window","innerWidth","innerHeight","setNextSpine","console","log","setPrevSpine","setViewerSpineColumnCount","spineIndex","count","forEach","viewerSpine","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAIA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,wBAAxD;;AAOA,IAAMC,UAA0C,GAAG,SAA7CA,UAA6C,OAA8B;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBACzCR,QAAQ,CAAC,CAAD,CADiC;AAAA,MACxES,WADwE;AAAA,MAC3DC,cAD2D;;AAAA,mBAEvCV,QAAQ,CAAC,CAAD,CAF+B;AAAA,MAExEW,YAFwE;AAAA,MAE1DC,eAF0D;;AAAA,mBAIrCZ,QAAQ,CAAC,CAAD,CAJ6B;AAAA,MAIxEa,aAJwE;AAAA,MAIzDC,gBAJyD;;AAM/Eb,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,cAAc,CAACK,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,IAAqBd,kBAAkB,GAAG,GAA1C,CAAX,CAAD,CAAd;AACAQ,IAAAA,eAAe,CAACG,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACE,WAAP,IAAsBd,mBAAmB,GAAG,GAA5C,CAAX,CAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAMe,YAAY,GAAGrB,WAAW,CAAC,YAAM;AACrCsB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,aAA9B;AACAC,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GAH+B,EAG7B,CAACA,aAAD,CAH6B,CAAhC;AAKA,MAAMU,YAAY,GAAGxB,WAAW,CAAC,YAAM;AACrCsB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,aAA9B;AACAC,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GAH+B,EAG7B,CAACA,aAAD,CAH6B,CAAhC;;AAKA,MAAMW,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,UAAD,EAAaC,KAAb,EAAuB;AACvDL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,UAA1B,EAAsCC,KAAtC;AACD,GAFD;;AAIA,SACE,4BACE,MAAC,MAAD;AACE,IAAA,WAAW,EAAEjB,WADf;AAEE,IAAA,YAAY,EAAEE,YAFhB;AAGE,IAAA,aAAa,EAAEE,aAHjB;AAIE,IAAA,KAAK,EAAEN,MAAM,CAACM,aAAD,CAJf;AAKE,IAAA,WAAW,EAAEL,YAAY,CAACK,aAAD,CAL3B;AAME,IAAA,YAAY,EAAEO,YANhB;AAOE,IAAA,YAAY,EAAEG,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWIf,YAAY,CAACmB,OAAb,CAAqB,UAACC,WAAD,EAAcC,KAAd;AAAA,WACnB,MAAC,WAAD;AACE,MAAA,WAAW,EAAED,WADf;AAEE,MAAA,gBAAgB,EAAEC,KAFpB;AAGE,MAAA,yBAAyB,EAAEL,yBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmB;AAAA,GAArB,CAXJ,CADF;AAsBD,CA/CD;;AAiDA,eAAelB,UAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\n\nimport Viewer from './Viewer';\nimport ViewerCount from './ViewerCount';\n\nimport { EpubSpineItem } from '../../interfaces/books';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\ninterface Props {\n  spines: EpubSpineItem[];\n  viewerSpines: string[];\n}\n\nconst ViewerPage: React.FunctionComponent<Props> = ({ spines, viewerSpines }) => {\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n\n  const setNextSpine = useCallback(() => {\n    console.log('Set next spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex + 1);\n  }, [nowSpineIndex]);\n\n  const setPrevSpine = useCallback(() => {\n    console.log('Set prev spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex - 1);\n  }, [nowSpineIndex]);\n\n  const setViewerSpineColumnCount = (spineIndex, count) => {\n    console.log('SpineIndex', spineIndex, count);\n  };\n\n  return (\n    <>\n      <Viewer\n        viewerWidth={viewerWidth}\n        viewerHeight={viewerHeight}\n        nowSpineIndex={nowSpineIndex}\n        spine={spines[nowSpineIndex]}\n        viewerSpine={viewerSpines[nowSpineIndex]}\n        setNextSpine={setNextSpine}\n        setPrevSpine={setPrevSpine}\n      />\n      {\n        viewerSpines.forEach((viewerSpine, index) => (\n          <ViewerCount\n            viewerSpine={viewerSpine}\n            viewerSpineIndex={index}\n            viewerColumnCountCallback={setViewerSpineColumnCount}\n          />\n        ))\n      }\n    </>\n  );\n};\n\nexport default ViewerPage;\n"]},"metadata":{},"sourceType":"module"}