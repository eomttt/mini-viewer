{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-18mi7mi-0\"\n})([\"color:blue\"]);\n\nconst Home = () => __jsx(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"HOME\"); // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = async context => {\n  const {\n    req\n  } = context;\n\n  if (req) {\n    const fs = require('fs');\n\n    const {\n      EpubParser\n    } = require('@ridi/epub-parser');\n\n    const books = [];\n    fs.readdir('public', async (err, files) => {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          const fileName = file.split('.epub')[0];\n          const parser = new EpubParser(file); // eslint-disable-next-line no-await-in-loop\n\n          const book = await parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: `public/epub/${fileName}`\n          });\n          books.push(book);\n        }\n      }\n\n      return books;\n    });\n  }\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","styled","Container","div","Home","getInitialProps","context","req","fs","require","EpubParser","books","readdir","err","files","file","includes","fileName","split","parser","book","parse","validatePackage","parseStyle","unzipPath","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,kBAAf;;AAIA,MAAMC,IAAc,GAAG,MACrB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,C,CAMA;;;AACAA,IAAI,CAACC,eAAL,GAAuB,MAAOC,OAAP,IAAuD;AAC5E,QAAM;AAAEC,IAAAA;AAAF,MAAUD,OAAhB;;AACA,MAAIC,GAAJ,EAAS;AACP,UAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,OAAO,CAAC,mBAAD,CAA9B;;AACA,UAAME,KAAiB,GAAG,EAA1B;AAEAH,IAAAA,EAAE,CAACI,OAAH,CAAW,QAAX,EAAqB,OAAOC,GAAP,EAAYC,KAAZ,KAAsB;AACzC;AACA,WAAK,MAAMC,IAAX,IAAmBD,KAAnB,EAA0B;AACxB,YAAIC,IAAI,CAACC,QAAL,CAAc,OAAd,CAAJ,EAA4B;AAC1B,gBAAMC,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAW,OAAX,EAAoB,CAApB,CAAjB;AACA,gBAAMC,MAAM,GAAG,IAAIT,UAAJ,CAAeK,IAAf,CAAf,CAF0B,CAG1B;;AACA,gBAAMK,IAAc,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAa;AACxCC,YAAAA,eAAe,EAAE,IADuB;AAExCC,YAAAA,UAAU,EAAE,KAF4B;AAGxCC,YAAAA,SAAS,EAAG,eAAcP,QAAS;AAHK,WAAb,CAA7B;AAMAN,UAAAA,KAAK,CAACc,IAAN,CAAWL,IAAX;AACD;AACF;;AACD,aAAOT,KAAP;AACD,KAjBD;AAkBD;AACF,CA1BD;;AA4BA,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport { NextPageContext, NextPage } from 'next';\n\nimport styled from 'styled-components';\nimport { EpubBook } from '../interfaces/books';\n\nconst Container = styled.div`\n  color: blue\n`;\n\nconst Home: NextPage = () => (\n  <Container>\n    HOME\n  </Container>\n);\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n    const books: EpubBook[] = [];\n\n    fs.readdir('public', async (err, files) => {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          const fileName = file.split('.epub')[0];\n          const parser = new EpubParser(file);\n          // eslint-disable-next-line no-await-in-loop\n          const book: EpubBook = await parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: `public/epub/${fileName}`,\n          });\n\n          books.push(book);\n        }\n      }\n      return books;\n    });\n  }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}