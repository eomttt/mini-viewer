{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HiddenViewerContainer, HiddenViewSection, Contents } from '../../styles/viewer';\nimport * as actions from '../../reducers/viewer';\n\nvar ViewerCount = function ViewerCount(_ref) {\n  var viewerWidth = _ref.viewerWidth,\n      viewerHeight = _ref.viewerHeight,\n      viewerSpineIndex = _ref.viewerSpineIndex,\n      viewerSpine = _ref.viewerSpine;\n  var dispatch = useDispatch();\n  var hiddenViewContainerRef = useRef(null);\n  var hiddenViewSectionRef = useRef(null);\n  useEffect(function () {\n    if (viewerWidth) {\n      var hiddenViewContainerCurrent = hiddenViewContainerRef.current;\n      var count = hiddenViewContainerCurrent.scrollWidth / viewerWidth;\n      console.log(hiddenViewContainerCurrent.scrollWidth);\n      console.log(viewerWidth);\n      console.log(Math.floor(count) - 1);\n      dispatch(actions.setViewerCount({\n        index: viewerSpineIndex,\n        count: Math.floor(count) - 1\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewerWidth]);\n  return __jsx(HiddenViewerContainer, {\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    ref: hiddenViewContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(HiddenViewSection, {\n    styleProps: {\n      width: viewerWidth\n    },\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","useDispatch","HiddenViewerContainer","HiddenViewSection","Contents","actions","ViewerCount","viewerWidth","viewerHeight","viewerSpineIndex","viewerSpine","dispatch","hiddenViewContainerRef","hiddenViewSectionRef","hiddenViewContainerCurrent","current","count","scrollWidth","console","log","Math","floor","setViewerCount","index","width","height","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SACEC,qBADF,EACyBC,iBADzB,EAEEC,QAFF,QAGO,qBAHP;AAKA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AASA,IAAMC,WAA2C,GAAG,SAA9CA,WAA8C,OAG9C;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MAFSC,YAET,QAFSA,YAET;AAAA,MADJC,gBACI,QADJA,gBACI;AAAA,MADcC,WACd,QADcA,WACd;AACJ,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,sBAAsB,GAAGb,MAAM,CAAC,IAAD,CAArC;AACA,MAAMc,oBAAoB,GAAGd,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIO,WAAJ,EAAiB;AAAA,UACEO,0BADF,GACiCF,sBADjC,CACPG,OADO;AAEf,UAAMC,KAAK,GAAGF,0BAA0B,CAACG,WAA3B,GAAyCV,WAAvD;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAYL,0BAA0B,CAACG,WAAvC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWL,KAAX,IAAoB,CAAhC;AAEAL,MAAAA,QAAQ,CAACN,OAAO,CAACiB,cAAR,CAAuB;AAC9BC,QAAAA,KAAK,EAAEd,gBADuB;AAE9BO,QAAAA,KAAK,EAAEI,IAAI,CAACC,KAAL,CAAWL,KAAX,IAAoB;AAFG,OAAvB,CAAD,CAAR;AAID,KAba,CAehB;;AACC,GAhBQ,EAgBN,CAACT,WAAD,CAhBM,CAAT;AAkBA,SACE,MAAC,qBAAD;AACE,IAAA,UAAU,EAAE;AACViB,MAAAA,KAAK,EAAEjB,WADG;AAEVkB,MAAAA,MAAM,EAAEjB;AAFE,KADd;AAKE,IAAA,GAAG,EAAEI,sBALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,iBAAD;AACE,IAAA,UAAU,EAAE;AACVY,MAAAA,KAAK,EAAEjB;AADG,KADd;AAIE,IAAA,GAAG,EAAEM,oBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAEa,MAAAA,MAAM,EAAEhB;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAPF,CADF;AAmBD,CA7CD;;AA+CA,eAAeJ,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  HiddenViewerContainer, HiddenViewSection,\n  Contents,\n} from '../../styles/viewer';\n\nimport * as actions from '../../reducers/viewer';\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewerSpineIndex: number;\n  viewerSpine: string;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewerSpineIndex, viewerSpine,\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (viewerWidth) {\n      const { current: hiddenViewContainerCurrent } = hiddenViewContainerRef;\n      const count = hiddenViewContainerCurrent.scrollWidth / viewerWidth;\n      \n      console.log(hiddenViewContainerCurrent.scrollWidth);\n      console.log(viewerWidth);\n      console.log(Math.floor(count) - 1);\n\n      dispatch(actions.setViewerCount({\n        index: viewerSpineIndex,\n        count: Math.floor(count) - 1,\n      }));\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewerWidth]);\n\n  return (\n    <HiddenViewerContainer\n      styleProps={{\n        width: viewerWidth,\n        height: viewerHeight,\n      }}\n      ref={hiddenViewContainerRef}\n    >\n      <HiddenViewSection\n        styleProps={{\n          width: viewerWidth,\n        }}\n        ref={hiddenViewSectionRef}\n      >\n        <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n      </HiddenViewSection>\n    </HiddenViewerContainer>\n\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}