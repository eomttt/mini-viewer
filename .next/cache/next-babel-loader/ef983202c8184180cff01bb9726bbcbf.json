{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewrSlider.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport * as actions from '../../reducers/viewer';\nimport { VIEWER_SLIDER_LEN_RATIO } from '../../constants/viewer';\nconst Container = styled.div`\n  width: 100%;\n  margin: auto 5%;\n  flex-direction: column;\n  display: flex;\n`;\nconst Input = styled.input`\n  margin-left: ${(100 - VIEWER_SLIDER_LEN_RATIO) / 2}%;\n  width: ${VIEWER_SLIDER_LEN_RATIO}%;\n  cursor: grab;\n`;\nconst Marker = styled.div`\n  margin-left: ${(100 - VIEWER_SLIDER_LEN_RATIO) / 2}%;\n`;\n\nconst ViewrSlider = ({\n  maxValue\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n  const {\n    viewerPageCount\n  } = useSelector(state => state.viewer);\n  const hasMaxValue = useMemo(() => !!maxValue, [maxValue]);\n  useEffect(() => {\n    setValue(viewerPageCount);\n  }, [viewerPageCount]);\n  const onChangeSlider = useCallback(e => {\n    dispatch(actions.setViewerPageCount(Number(e.target.value)));\n  }, [dispatch]);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, hasMaxValue && __jsx(React.Fragment, null, __jsx(Marker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, `${value}/${maxValue}`), __jsx(Input, {\n    type: \"range\",\n    min: \"0\",\n    max: maxValue,\n    value: value,\n    onChange: onChangeSlider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nexport default ViewrSlider;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewrSlider.tsx"],"names":["React","useCallback","useState","useMemo","useEffect","useDispatch","useSelector","styled","actions","VIEWER_SLIDER_LEN_RATIO","Container","div","Input","input","Marker","ViewrSlider","maxValue","dispatch","value","setValue","viewerPageCount","state","viewer","hasMaxValue","onChangeSlider","e","setViewerPageCount","Number","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,SAASC,uBAAT,QAAwC,wBAAxC;AAIA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;;;;CAA7B;AAOA,MAAMC,KAAK,GAAGL,MAAM,CAACM,KAAM;iBACV,CAAC,MAAMJ,uBAAP,IAAkC,CAAE;WAC1CA,uBAAwB;;CAFnC;AAMA,MAAMK,MAAM,GAAGP,MAAM,CAACI,GAAI;iBACT,CAAC,MAAMF,uBAAP,IAAkC,CAAE;CADrD;;AAQA,MAAMM,WAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpE,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAM;AAAEkB,IAAAA;AAAF,MAAsBd,WAAW,CAAEe,KAAD,IAAyBA,KAAK,CAACC,MAAhC,CAAvC;AAEA,QAAMC,WAAW,GAAGpB,OAAO,CAAC,MAAM,CAAC,CAACa,QAAT,EAAmB,CAACA,QAAD,CAAnB,CAA3B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACC,eAAD,CAAR;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIA,QAAMI,cAAc,GAAGvB,WAAW,CAAEwB,CAAD,IAAO;AACxCR,IAAAA,QAAQ,CAACT,OAAO,CAACkB,kBAAR,CAA2BC,MAAM,CAACF,CAAC,CAACG,MAAF,CAASV,KAAV,CAAjC,CAAD,CAAR;AACD,GAFiC,EAE/B,CAACD,QAAD,CAF+B,CAAlC;AAIA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIM,WAAW,IAEX,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEL,KAAM,IAAGF,QAAS,EADxB,CADF,EAIE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAC,GAAxB;AAA4B,IAAA,GAAG,EAAEA,QAAjC;AAA2C,IAAA,KAAK,EAAEE,KAAlD;AAAyD,IAAA,QAAQ,EAAEM,cAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJJ,CADF;AAeD,CA/BD;;AAiCA,eAAeT,WAAf","sourcesContent":["import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport * as actions from '../../reducers/viewer';\n\nimport { VIEWER_SLIDER_LEN_RATIO } from '../../constants/viewer';\n\nimport { ReducerState } from '../../interfaces';\n\nconst Container = styled.div`\n  width: 100%;\n  margin: auto 5%;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst Input = styled.input`\n  margin-left: ${(100 - VIEWER_SLIDER_LEN_RATIO) / 2}%;\n  width: ${VIEWER_SLIDER_LEN_RATIO}%;\n  cursor: grab;\n`;\n\nconst Marker = styled.div`\n  margin-left: ${(100 - VIEWER_SLIDER_LEN_RATIO) / 2}%;\n`;\n\ninterface Props {\n  maxValue: number;\n}\n\nconst ViewrSlider: React.FunctionComponent<Props> = ({ maxValue }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(0);\n\n  const { viewerPageCount } = useSelector((state: ReducerState) => state.viewer);\n\n  const hasMaxValue = useMemo(() => !!maxValue, [maxValue]);\n\n  useEffect(() => {\n    setValue(viewerPageCount);\n  }, [viewerPageCount]);\n\n  const onChangeSlider = useCallback((e) => {\n    dispatch(actions.setViewerPageCount(Number(e.target.value)));\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {\n        hasMaxValue\n        && (\n        <>\n          <Marker>\n            {`${value}/${maxValue}`}\n          </Marker>\n          <Input type=\"range\" min=\"0\" max={maxValue} value={value} onChange={onChangeSlider} />\n        </>\n        )\n      }\n    </Container>\n  );\n};\n\nexport default ViewrSlider;\n"]},"metadata":{},"sourceType":"module"}