{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  viewerCountList: [],\n  viewerPageCount: 0\n}; // Action types\n\nexport const INIT_VIEWER_STATE = 'viewer/INIT_VIEWER_STATE';\nexport const SET_VIEWER_COLUMN_COUNT = 'viewer/SET_VIEWER_COLUMN_COUNT';\nexport const SET_VIEWER_PAGE_COUNT = 'viewer/SET_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_UP_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_UP_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_DOWN_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_DOWN_VIEWER_PAGE_COUNT'; // Action creators\n\nexport const initViewerState = () => ({\n  type: INIT_VIEWER_STATE\n});\nexport const setViewerColumnCount = ({\n  index,\n  count,\n  spineId\n}) => ({\n  type: SET_VIEWER_COLUMN_COUNT,\n  payload: {\n    index,\n    count,\n    spineId\n  }\n});\nexport const setViewerPageCount = pageCount => ({\n  type: SET_VIEWER_PAGE_COUNT,\n  payload: {\n    pageCount\n  }\n});\nexport const setCountUpViewerPageCount = () => ({\n  type: SET_COUNT_UP_VIEWER_PAGE_COUNT\n});\nexport const setCountDownViewerPageCount = () => ({\n  type: SET_COUNT_DOWN_VIEWER_PAGE_COUNT\n});\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case INIT_VIEWER_STATE:\n      {\n        return _objectSpread({}, state, {\n          viewerCountList: [],\n          viewerPageCount: 0\n        });\n      }\n\n    case SET_VIEWER_COLUMN_COUNT:\n      {\n        const {\n          index,\n          count,\n          spineId\n        } = payload;\n        return _objectSpread({}, state, {\n          viewerCountList: [...state.viewerCountList, {\n            index,\n            count,\n            spineId\n          }]\n        });\n      }\n\n    case SET_VIEWER_PAGE_COUNT:\n      {\n        const {\n          pageCount\n        } = payload;\n        return _objectSpread({}, state, {\n          viewerPageCount: pageCount\n        });\n      }\n\n    case SET_COUNT_UP_VIEWER_PAGE_COUNT:\n      {\n        return _objectSpread({}, state, {\n          viewerPageCount: state.viewerPageCount + 1\n        });\n      }\n\n    case SET_COUNT_DOWN_VIEWER_PAGE_COUNT:\n      {\n        return _objectSpread({}, state, {\n          viewerPageCount: state.viewerPageCount - 1\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/reducers/viewer.ts"],"names":["initialState","viewerCountList","viewerPageCount","INIT_VIEWER_STATE","SET_VIEWER_COLUMN_COUNT","SET_VIEWER_PAGE_COUNT","SET_COUNT_UP_VIEWER_PAGE_COUNT","SET_COUNT_DOWN_VIEWER_PAGE_COUNT","initViewerState","type","setViewerColumnCount","index","count","spineId","payload","setViewerPageCount","pageCount","setCountUpViewerPageCount","setCountDownViewerPageCount","state","action"],"mappings":";;;;;;AAGA,OAAO,MAAMA,YAAyB,GAAG;AACvCC,EAAAA,eAAe,EAAE,EADsB;AAEvCC,EAAAA,eAAe,EAAE;AAFsB,CAAlC,C,CAKP;;AACA,OAAO,MAAMC,iBAAiB,GAAG,0BAA1B;AACP,OAAO,MAAMC,uBAAuB,GAAG,gCAAhC;AAEP,OAAO,MAAMC,qBAAqB,GAAG,8BAA9B;AACP,OAAO,MAAMC,8BAA8B,GAAG,uCAAvC;AACP,OAAO,MAAMC,gCAAgC,GAAG,yCAAzC,C,CAEP;;AACA,OAAO,MAAMC,eAAe,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEN;AAD8B,CAAP,CAAxB;AAIP,OAAO,MAAMO,oBAAoB,GAAG,CAClC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CADkC,MAE9B;AACJJ,EAAAA,IAAI,EAAEL,uBADF;AAEJU,EAAAA,OAAO,EAAE;AACPH,IAAAA,KADO;AAEPC,IAAAA,KAFO;AAGPC,IAAAA;AAHO;AAFL,CAF8B,CAA7B;AAWP,OAAO,MAAME,kBAAkB,GAAIC,SAAD,KAAwB;AACxDP,EAAAA,IAAI,EAAEJ,qBADkD;AAExDS,EAAAA,OAAO,EAAE;AACPE,IAAAA;AADO;AAF+C,CAAxB,CAA3B;AAOP,OAAO,MAAMC,yBAAyB,GAAG,OAAO;AAC9CR,EAAAA,IAAI,EAAEH;AADwC,CAAP,CAAlC;AAIP,OAAO,MAAMY,2BAA2B,GAAG,OAAO;AAChDT,EAAAA,IAAI,EAAEF;AAD0C,CAAP,CAApC;AAIP,gBAAe,CAACY,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAA8D;AAC3E,QAAM;AAAEX,IAAAA,IAAF;AAAQK,IAAAA;AAAR,MAAoBM,MAA1B;;AACA,UAAQX,IAAR;AACE,SAAKN,iBAAL;AAAwB;AACtB,iCACKgB,KADL;AAEElB,UAAAA,eAAe,EAAE,EAFnB;AAGEC,UAAAA,eAAe,EAAE;AAHnB;AAKD;;AACD,SAAKE,uBAAL;AAA8B;AAC5B,cAAM;AAAEO,UAAAA,KAAF;AAASC,UAAAA,KAAT;AAAgBC,UAAAA;AAAhB,YAA4BC,OAAlC;AACA,iCACKK,KADL;AAEElB,UAAAA,eAAe,EAAE,CAAC,GAAGkB,KAAK,CAAClB,eAAV,EAA2B;AAAEU,YAAAA,KAAF;AAASC,YAAAA,KAAT;AAAgBC,YAAAA;AAAhB,WAA3B;AAFnB;AAID;;AACD,SAAKR,qBAAL;AAA4B;AAC1B,cAAM;AAAEW,UAAAA;AAAF,YAAgBF,OAAtB;AACA,iCACKK,KADL;AAEEjB,UAAAA,eAAe,EAAEc;AAFnB;AAID;;AACD,SAAKV,8BAAL;AAAqC;AACnC,iCACKa,KADL;AAEEjB,UAAAA,eAAe,EAAEiB,KAAK,CAACjB,eAAN,GAAwB;AAF3C;AAID;;AACD,SAAKK,gCAAL;AAAuC;AACrC,iCACKY,KADL;AAEEjB,UAAAA,eAAe,EAAEiB,KAAK,CAACjB,eAAN,GAAwB;AAF3C;AAID;;AACD;AAAS;AACP,iCACKiB,KADL;AAGD;AAtCH;AAwCD,CA1CD","sourcesContent":["import { ReducerAction } from '../interfaces';\nimport { ViewerState } from '../interfaces/viewer';\n\nexport const initialState: ViewerState = {\n  viewerCountList: [],\n  viewerPageCount: 0,\n};\n\n// Action types\nexport const INIT_VIEWER_STATE = 'viewer/INIT_VIEWER_STATE';\nexport const SET_VIEWER_COLUMN_COUNT = 'viewer/SET_VIEWER_COLUMN_COUNT';\n\nexport const SET_VIEWER_PAGE_COUNT = 'viewer/SET_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_UP_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_UP_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_DOWN_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_DOWN_VIEWER_PAGE_COUNT';\n\n// Action creators\nexport const initViewerState = () => ({\n  type: INIT_VIEWER_STATE,\n});\n\nexport const setViewerColumnCount = (\n  { index, count, spineId }: {index: number; count: number; spineId: string},\n) => ({\n  type: SET_VIEWER_COLUMN_COUNT,\n  payload: {\n    index,\n    count,\n    spineId,\n  },\n});\n\nexport const setViewerPageCount = (pageCount: number) => ({\n  type: SET_VIEWER_PAGE_COUNT,\n  payload: {\n    pageCount,\n  },\n});\n\nexport const setCountUpViewerPageCount = () => ({\n  type: SET_COUNT_UP_VIEWER_PAGE_COUNT,\n});\n\nexport const setCountDownViewerPageCount = () => ({\n  type: SET_COUNT_DOWN_VIEWER_PAGE_COUNT,\n});\n\nexport default (state = initialState, action: ReducerAction): ViewerState => {\n  const { type, payload } = action;\n  switch (type) {\n    case INIT_VIEWER_STATE: {\n      return {\n        ...state,\n        viewerCountList: [],\n        viewerPageCount: 0,\n      };\n    }\n    case SET_VIEWER_COLUMN_COUNT: {\n      const { index, count, spineId } = payload;\n      return {\n        ...state,\n        viewerCountList: [...state.viewerCountList, { index, count, spineId }],\n      };\n    }\n    case SET_VIEWER_PAGE_COUNT: {\n      const { pageCount } = payload;\n      return {\n        ...state,\n        viewerPageCount: pageCount,\n      };\n    }\n    case SET_COUNT_UP_VIEWER_PAGE_COUNT: {\n      return {\n        ...state,\n        viewerPageCount: state.viewerPageCount + 1,\n      };\n    }\n    case SET_COUNT_DOWN_VIEWER_PAGE_COUNT: {\n      return {\n        ...state,\n        viewerPageCount: state.viewerPageCount - 1,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}