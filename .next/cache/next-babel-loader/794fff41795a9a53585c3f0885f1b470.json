{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { defaultColor } from '../styles';\nimport { FONT_SIZE_RANGE, WIDTH_RATIO_RANGE, LINE_HEIGHT_RANGE } from '../constants/viewer';\nexport var initialState = {\n  fontSize: FONT_SIZE_RANGE.MIN,\n  widthRatio: WIDTH_RATIO_RANGE.MAX,\n  lineHeight: LINE_HEIGHT_RANGE.MIN,\n  backgroundColor: defaultColor\n}; // Action types\n\nexport var SET_FONT_SIZE = 'viewerSetting/SET_FONT_SIZE';\nexport var SET_WIDTH_RATIO = 'viewerSetting/SET_WIDTH_RATIO';\nexport var SET_LINE_HEIGHT = 'viewerSetting/SET_LINE_HEIGHT';\nexport var SET_BACKGROUND_COLOR = 'viewerSetting/SET_VIEWER_SETTING_BACKGROUND_COLOR'; // Action creators\n\nexport var setViewerSettingFontSize = function setViewerSettingFontSize(fontSize) {\n  return {\n    type: SET_FONT_SIZE,\n    payload: {\n      fontSize: fontSize\n    }\n  };\n};\nexport var setViewerSettingWidthRatio = function setViewerSettingWidthRatio(widthRatio) {\n  return {\n    type: SET_WIDTH_RATIO,\n    payload: {\n      widthRatio: widthRatio\n    }\n  };\n};\nexport var setViewerSettingLineHeight = function setViewerSettingLineHeight(lineHeight) {\n  return {\n    type: SET_LINE_HEIGHT,\n    payload: {\n      lineHeight: lineHeight\n    }\n  };\n};\nexport var setViewerSettingBackgroundColor = function setViewerSettingBackgroundColor(color) {\n  return {\n    type: SET_BACKGROUND_COLOR,\n    payload: {\n      backgroundColor: color\n    }\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case SET_FONT_SIZE:\n      {\n        var fontSize = payload.fontSize;\n        return _objectSpread({}, state, {\n          fontSize: fontSize\n        });\n      }\n\n    case SET_WIDTH_RATIO:\n      {\n        var widthRatio = payload.widthRatio;\n        return _objectSpread({}, state, {\n          widthRatio: widthRatio\n        });\n      }\n\n    case SET_LINE_HEIGHT:\n      {\n        var lineHeight = payload.lineHeight;\n        return _objectSpread({}, state, {\n          lineHeight: lineHeight\n        });\n      }\n\n    case SET_BACKGROUND_COLOR:\n      {\n        var backgroundColor = payload.backgroundColor;\n        return _objectSpread({}, state, {\n          backgroundColor: backgroundColor\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/reducers/viewerSetting.ts"],"names":["defaultColor","FONT_SIZE_RANGE","WIDTH_RATIO_RANGE","LINE_HEIGHT_RANGE","initialState","fontSize","MIN","widthRatio","MAX","lineHeight","backgroundColor","SET_FONT_SIZE","SET_WIDTH_RATIO","SET_LINE_HEIGHT","SET_BACKGROUND_COLOR","setViewerSettingFontSize","type","payload","setViewerSettingWidthRatio","setViewerSettingLineHeight","setViewerSettingBackgroundColor","color","state","action"],"mappings":";;;;;;AAGA,SAASA,YAAT,QAA6B,WAA7B;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,iBAA7C,QAAsE,qBAAtE;AAEA,OAAO,IAAMC,YAAgC,GAAG;AAC9CC,EAAAA,QAAQ,EAAEJ,eAAe,CAACK,GADoB;AAE9CC,EAAAA,UAAU,EAAEL,iBAAiB,CAACM,GAFgB;AAG9CC,EAAAA,UAAU,EAAEN,iBAAiB,CAACG,GAHgB;AAI9CI,EAAAA,eAAe,EAAEV;AAJ6B,CAAzC,C,CAOP;;AACA,OAAO,IAAMW,aAAa,GAAG,6BAAtB;AACP,OAAO,IAAMC,eAAe,GAAG,+BAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,+BAAxB;AACP,OAAO,IAAMC,oBAAoB,GAAG,mDAA7B,C,CAEP;;AACA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACV,QAAD;AAAA,SAAuB;AAC7DW,IAAAA,IAAI,EAAEL,aADuD;AAE7DM,IAAAA,OAAO,EAAE;AACPZ,MAAAA,QAAQ,EAARA;AADO;AAFoD,GAAvB;AAAA,CAAjC;AAOP,OAAO,IAAMa,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACX,UAAD;AAAA,SAAyB;AACjES,IAAAA,IAAI,EAAEJ,eAD2D;AAEjEK,IAAAA,OAAO,EAAE;AACPV,MAAAA,UAAU,EAAVA;AADO;AAFwD,GAAzB;AAAA,CAAnC;AAOP,OAAO,IAAMY,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACV,UAAD;AAAA,SAAyB;AACjEO,IAAAA,IAAI,EAAEH,eAD2D;AAEjEI,IAAAA,OAAO,EAAE;AACPR,MAAAA,UAAU,EAAVA;AADO;AAFwD,GAAzB;AAAA,CAAnC;AAOP,OAAO,IAAMW,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACC,KAAD;AAAA,SAAoB;AACjEL,IAAAA,IAAI,EAAEF,oBAD2D;AAEjEG,IAAAA,OAAO,EAAE;AACPP,MAAAA,eAAe,EAAEW;AADV;AAFwD,GAApB;AAAA,CAAxC;AAOP,gBAAe,YAAqE;AAAA,MAApEC,KAAoE,uEAA5DlB,YAA4D;AAAA,MAA9CmB,MAA8C;AAAA,MAC1EP,IAD0E,GACxDO,MADwD,CAC1EP,IAD0E;AAAA,MACpEC,OADoE,GACxDM,MADwD,CACpEN,OADoE;;AAElF,UAAQD,IAAR;AACE,SAAKL,aAAL;AAAoB;AAAA,YACVN,QADU,GACGY,OADH,CACVZ,QADU;AAElB,iCACKiB,KADL;AAEEjB,UAAAA,QAAQ,EAARA;AAFF;AAID;;AACD,SAAKO,eAAL;AAAsB;AAAA,YACZL,UADY,GACGU,OADH,CACZV,UADY;AAEpB,iCACKe,KADL;AAEEf,UAAAA,UAAU,EAAVA;AAFF;AAID;;AACD,SAAKM,eAAL;AAAsB;AAAA,YACZJ,UADY,GACGQ,OADH,CACZR,UADY;AAEpB,iCACKa,KADL;AAEEb,UAAAA,UAAU,EAAVA;AAFF;AAID;;AACD,SAAKK,oBAAL;AAA2B;AAAA,YACjBJ,eADiB,GACGO,OADH,CACjBP,eADiB;AAEzB,iCACKY,KADL;AAEEZ,UAAAA,eAAe,EAAfA;AAFF;AAID;;AACD;AAAS;AACP,iCACKY,KADL;AAGD;AAjCH;AAmCD,CArCD","sourcesContent":["import { ReducerAction } from '../interfaces';\nimport { ViewerSettingState } from '../interfaces/viewer';\n\nimport { defaultColor } from '../styles';\nimport { FONT_SIZE_RANGE, WIDTH_RATIO_RANGE, LINE_HEIGHT_RANGE } from '../constants/viewer';\n\nexport const initialState: ViewerSettingState = {\n  fontSize: FONT_SIZE_RANGE.MIN,\n  widthRatio: WIDTH_RATIO_RANGE.MAX,\n  lineHeight: LINE_HEIGHT_RANGE.MIN,\n  backgroundColor: defaultColor,\n};\n\n// Action types\nexport const SET_FONT_SIZE = 'viewerSetting/SET_FONT_SIZE';\nexport const SET_WIDTH_RATIO = 'viewerSetting/SET_WIDTH_RATIO';\nexport const SET_LINE_HEIGHT = 'viewerSetting/SET_LINE_HEIGHT';\nexport const SET_BACKGROUND_COLOR = 'viewerSetting/SET_VIEWER_SETTING_BACKGROUND_COLOR';\n\n// Action creators\nexport const setViewerSettingFontSize = (fontSize: number) => ({\n  type: SET_FONT_SIZE,\n  payload: {\n    fontSize,\n  },\n});\n\nexport const setViewerSettingWidthRatio = (widthRatio: number) => ({\n  type: SET_WIDTH_RATIO,\n  payload: {\n    widthRatio,\n  },\n});\n\nexport const setViewerSettingLineHeight = (lineHeight: number) => ({\n  type: SET_LINE_HEIGHT,\n  payload: {\n    lineHeight,\n  },\n});\n\nexport const setViewerSettingBackgroundColor = (color: string) => ({\n  type: SET_BACKGROUND_COLOR,\n  payload: {\n    backgroundColor: color,\n  },\n});\n\nexport default (state = initialState, action: ReducerAction): ViewerSettingState => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_FONT_SIZE: {\n      const { fontSize } = payload;\n      return {\n        ...state,\n        fontSize,\n      };\n    }\n    case SET_WIDTH_RATIO: {\n      const { widthRatio } = payload;\n      return {\n        ...state,\n        widthRatio,\n      };\n    }\n    case SET_LINE_HEIGHT: {\n      const { lineHeight } = payload;\n      return {\n        ...state,\n        lineHeight,\n      };\n    }\n    case SET_BACKGROUND_COLOR: {\n      const { backgroundColor } = payload;\n      return {\n        ...state,\n        backgroundColor,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}