{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nvar Test = styled.div.withConfig({\n  displayName: \"pages__Test\",\n  componentId: \"sc-18mi7mi-0\"\n})([\"\"]);\n\nvar Home = function Home(test) {\n  console.log('RRR', test);\n  var spines = test.spines,\n      items = test.items,\n      book = test.book;\n\n  var renderItems = function renderItems() {\n    return items.map(function (item, idx) {\n      var mediaType = book.items[idx].mediaType;\n      console.log(mediaType);\n\n      if (mediaType === 'image/jpeg') {\n        return __jsx(\"img\", {\n          src: \"data:image/jpeg;base64,\".concat(item.toString('base64')),\n          alt: \"test\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n\n      if (mediaType === 'text/css') {\n        return __jsx(\"style\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, item);\n      }\n\n      if (mediaType === 'application/xhtml+xml') {\n        return __jsx(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: item\n          },\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"TEST\");\n    });\n  };\n\n  return __jsx(Test, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, renderItems());\n};\n\nHome.getInitialProps = function _callee(context) {\n  var req, _require, EpubParser, parser, book, spines, items;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req;\n\n          if (!req) {\n            _context.next = 20;\n            break;\n          }\n\n          // eslint-disable-next-line @typescript-eslint/no-var-requires\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _context.prev = 3;\n          parser = new EpubParser('public/pg61625-images.epub');\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(parser.parse({\n            parseStyle: false\n          }));\n\n        case 7:\n          book = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(parser.readItems(book.spines));\n\n        case 10:\n          spines = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(parser.readItems(book.items, {\n            force: true,\n            extractBody: true,\n            serializedAnchor: true\n          }));\n\n        case 13:\n          items = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            spines: spines,\n            items: items\n          });\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](3);\n          console.log('Error', _context.t0);\n\n        case 20:\n          return _context.abrupt(\"return\", {});\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 17]], Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","styled","Test","div","Home","test","console","log","spines","items","book","renderItems","map","item","idx","mediaType","toString","__html","getInitialProps","context","req","require","EpubParser","parser","parse","parseStyle","readItems","force","extractBody","serializedAnchor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NextPageContext } from 'next';\nimport styled from 'styled-components';\n\nconst Test = styled.div`\n`;\n\nconst Home = (test) => {\n  console.log('RRR', test);\n  const { spines, items, book } = test;\n\n  const renderItems = () => {\n    return items.map((item, idx) => {\n      const { mediaType } = book.items[idx];\n      console.log(mediaType);\n      if (mediaType === 'image/jpeg') {\n        return <img src={`data:image/jpeg;base64,${item.toString('base64')}`} alt=\"test\" />;\n      }\n      if (mediaType === 'text/css') {\n        return <style>{item}</style>;\n      }\n      if (mediaType === 'application/xhtml+xml') {\n        return <div dangerouslySetInnerHTML={{ __html: item }} key={idx} />;\n      }\n      return <div>TEST</div>;\n    });\n  };\n\n  return (\n    <Test>\n      {\n        renderItems()\n      }\n    </Test>\n  );\n};\n\nHome.getInitialProps = async (context: NextPageContext): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/pg61625-images.epub');\n      const book = await parser.parse({\n        parseStyle: false,\n      });\n      const spines = await parser.readItems(book.spines);\n      const items = await parser.readItems(book.items, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n      });\n\n      return {\n        book,\n        spines,\n        items,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}