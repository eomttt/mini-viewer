{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCalculator.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport ViewerCount from './ViewerCount';\nimport { ViewerArticle, ViewerSection } from '../../styles/viewer';\nvar HiddenArticle = styled(ViewerArticle).withConfig({\n  displayName: \"ViewerCalculator__HiddenArticle\",\n  componentId: \"sc-1k3xwrw-0\"\n})([\"overflow:scroll;\"]);\nvar HiddenSection = styled(ViewerSection).withConfig({\n  displayName: \"ViewerCalculator__HiddenSection\",\n  componentId: \"sc-1k3xwrw-1\"\n})([\"visibility:hidden;\"]);\n\nvar ViewerCalculator = function ViewerCalculator(_ref) {\n  var viewerWidth = _ref.viewerWidth,\n      viewerHeight = _ref.viewerHeight,\n      viewers = _ref.viewers,\n      spines = _ref.spines,\n      viewerStyle = _ref.viewerStyle;\n  var item = [];\n\n  var _setCountCallback = useCallback(function (count, index) {\n    console.log('Index', index);\n    console.log('Count', count);\n    var spine = spines[index];\n    console.log('spine', spine);\n  }, []);\n\n  return __jsx(React.Fragment, null, viewers.map(function (viewer, index) {\n    return __jsx(ViewerCount, {\n      key: viewer,\n      viewerWidth: viewerWidth,\n      viewerHeight: viewerHeight,\n      viewer: viewer,\n      viewerStyle: viewerStyle,\n      setCountCallback: function setCountCallback(count) {\n        return _setCountCallback(count, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default ViewerCalculator;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCalculator.tsx"],"names":["React","useCallback","styled","ViewerCount","ViewerArticle","ViewerSection","HiddenArticle","HiddenSection","ViewerCalculator","viewerWidth","viewerHeight","viewers","spines","viewerStyle","item","setCountCallback","count","index","console","log","spine","map","viewer"],"mappings":";;AAAA,OAAOA,KAAP,IAAmCC,WAAnC,QAAsD,OAAtD;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,aADF,EAEEC,aAFF,QAIO,qBAJP;AAaA,IAAMC,aAAa,GAAGJ,MAAM,CAACE,aAAD,CAAT;AAAA;AAAA;AAAA,wBAAnB;AAIA,IAAMG,aAAa,GAAGL,MAAM,CAACG,aAAD,CAAT;AAAA;AAAA;AAAA,0BAAnB;;AAYA,IAAMG,gBAAgD,GAAG,SAAnDA,gBAAmD,OAInD;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAHSC,YAGT,QAHSA,YAGT;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MAFKC,MAEL,QAFKA,MAEL;AAAA,MADJC,WACI,QADJA,WACI;AACJ,MAAMC,IAAI,GAAG,EAAb;;AAEA,MAAMC,iBAAgB,GAAGd,WAAW,CAAC,UAACe,KAAD,EAAgBC,KAAhB,EAAkC;AACrEC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACA,QAAMI,KAAK,GAAGR,MAAM,CAACK,KAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBC,KAApB;AACD,GALmC,EAKjC,EALiC,CAApC;;AAOA,SACE,4BAEIT,OAAO,CAACU,GAAR,CAAY,UAACC,MAAD,EAASL,KAAT;AAAA,WACV,MAAC,WAAD;AACE,MAAA,GAAG,EAAEK,MADP;AAEE,MAAA,WAAW,EAAEb,WAFf;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAIE,MAAA,MAAM,EAAEY,MAJV;AAKE,MAAA,WAAW,EAAET,WALf;AAME,MAAA,gBAAgB,EAAE,0BAACG,KAAD;AAAA,eAAWD,iBAAgB,CAACC,KAAD,EAAQC,KAAR,CAA3B;AAAA,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAZ,CAFJ,CADF;AAiBD,CA/BD;;AAiCA,eAAeT,gBAAf","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport ViewerCount from './ViewerCount';\n\nimport {\n  ViewerArticle,\n  ViewerSection,\n  ViewerContents,\n} from '../../styles/viewer';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { EpubSpineItem } from '../../interfaces/books';\nimport { ViewerStyle } from '../../interfaces/viewer';\n\nconst HiddenArticle = styled(ViewerArticle)`\n  overflow: scroll;\n`;\n\nconst HiddenSection = styled(ViewerSection)`\n  visibility: hidden;\n`;\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewers: string[];\n  spines: EpubSpineItem[];\n  viewerStyle: ViewerStyle;\n}\n\nconst ViewerCalculator: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewers, spines,\n  viewerStyle,\n}) => {\n  const item = [];\n\n  const setCountCallback = useCallback((count: number, index: number) => {\n    console.log('Index', index);\n    console.log('Count', count);\n    const spine = spines[index];\n    console.log('spine',spine);\n  }, []);\n\n  return (\n    <>\n      {\n        viewers.map((viewer, index) => (\n          <ViewerCount\n            key={viewer}\n            viewerWidth={viewerWidth}\n            viewerHeight={viewerHeight}\n            viewer={viewer}\n            viewerStyle={viewerStyle}\n            setCountCallback={(count) => setCountCallback(count, index)}\n          />\n        ))\n      }\n    </>\n\n  );\n};\n\nexport default ViewerCalculator;\n"]},"metadata":{},"sourceType":"module"}