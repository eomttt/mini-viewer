{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst Test = styled.div.withConfig({\n  displayName: \"pages__Test\",\n  componentId: \"sc-18mi7mi-0\"\n})([\"\"]);\n\nconst Home = test => {\n  console.log('RRR', test);\n  const {\n    spines,\n    items\n  } = test;\n  return __jsx(Test, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, items.map((spine, idx) => __jsx(React.Fragment, null, idx === 0 || idx === 1 // eslint-disable-next-line react/no-danger\n  // <div dangerouslySetInnerHTML={{ __html: spine }} key={idx} />\n  && __jsx(\"img\", {\n    src: `data:image/jpeg;base64,${spine.toString('base64')}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nHome.getInitialProps = async context => {\n  const {\n    req\n  } = context;\n\n  if (req) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const {\n      EpubParser\n    } = require('@ridi/epub-parser');\n\n    try {\n      const parser = new EpubParser('public/pg61625-images.epub');\n      const book = await parser.parse();\n      const spines = await parser.readItems(book.spines);\n      const items = await parser.readItems(book.items, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true\n      });\n      return {\n        book,\n        spines,\n        items\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n  return {};\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","styled","Test","div","Home","test","console","log","spines","items","map","spine","idx","toString","getInitialProps","context","req","EpubParser","require","parser","book","parse","readItems","force","extractBody","serializedAnchor","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,QAAV;;AAGA,MAAMC,IAAI,GAAIC,IAAD,IAAU;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,IAAnB;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBJ,IAA1B;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEII,KAAK,CAACC,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,KACR,4BAEAA,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAR,CACb;AACA;AAFa,KAGV;AAAK,IAAA,GAAG,EAAG,0BAAyBD,KAAK,CAACE,QAAN,CAAe,QAAf,CAAyB,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALH,CADF,CAFJ,CADF;AAiBD,CArBD;;AAuBAT,IAAI,CAACU,eAAL,GAAuB,MAAOC,OAAP,IAAkD;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAUD,OAAhB;;AACA,MAAIC,GAAJ,EAAS;AACP;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBC,OAAO,CAAC,mBAAD,CAA9B;;AACA,QAAI;AACF,YAAMC,MAAM,GAAG,IAAIF,UAAJ,CAAe,4BAAf,CAAf;AACA,YAAMG,IAAI,GAAG,MAAMD,MAAM,CAACE,KAAP,EAAnB;AACA,YAAMb,MAAM,GAAG,MAAMW,MAAM,CAACG,SAAP,CAAiBF,IAAI,CAACZ,MAAtB,CAArB;AACA,YAAMC,KAAK,GAAG,MAAMU,MAAM,CAACG,SAAP,CAAiBF,IAAI,CAACX,KAAtB,EAA6B;AAC/Cc,QAAAA,KAAK,EAAE,IADwC;AAE/CC,QAAAA,WAAW,EAAE,IAFkC;AAG/CC,QAAAA,gBAAgB,EAAE;AAH6B,OAA7B,CAApB;AAMA,aAAO;AACLL,QAAAA,IADK;AAELZ,QAAAA,MAFK;AAGLC,QAAAA;AAHK,OAAP;AAKD,KAfD,CAeE,OAAOiB,KAAP,EAAc;AACdpB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBmB,KAArB;AACD;AACF;;AAGD,SAAO,EAAP;AACD,CA3BD;;AA6BA,eAAetB,IAAf","sourcesContent":["import React from 'react';\nimport { NextPageContext } from 'next';\nimport styled from 'styled-components';\n\nconst Test = styled.div`\n`;\n\nconst Home = (test) => {\n  console.log('RRR', test);\n  const { spines, items } = test;\n\n  return (\n    <Test>\n      {\n        items.map((spine, idx) => (\n          <>\n            {\n          idx === 0 || idx === 1\n          // eslint-disable-next-line react/no-danger\n          // <div dangerouslySetInnerHTML={{ __html: spine }} key={idx} />\n          && <img src={`data:image/jpeg;base64,${spine.toString('base64')}`} />\n          }\n          </>\n\n        ))\n      }\n    </Test>\n  );\n};\n\nHome.getInitialProps = async (context: NextPageContext): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/pg61625-images.epub');\n      const book = await parser.parse();\n      const spines = await parser.readItems(book.spines);\n      const items = await parser.readItems(book.items, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n      });\n\n      return {\n        book,\n        spines,\n        items,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}