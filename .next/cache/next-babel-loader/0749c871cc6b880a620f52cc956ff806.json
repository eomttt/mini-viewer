{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport Parser from '../../modules/Parser';\nimport EPUB from '../../datum/epubs/pg61612';\n\nvar Viewer = function Viewer() {\n  var getParseEpub = useCallback(function _callee() {\n    var test, res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            test = new Parser(EPUB);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(test.parse());\n\n          case 3:\n            res = _context.sent;\n            console.log(res);\n            return _context.abrupt(\"return\", null);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  useEffect(function () {\n    getParseEpub();\n  }, [getParseEpub]);\n  return __jsx(React.Fragment, null, \"Viewer Component\");\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx"],"names":["React","useEffect","useCallback","Parser","EPUB","Viewer","getParseEpub","test","parse","res","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBK,YAAAA,IADyB,GAClB,IAAIJ,MAAJ,CAAWC,IAAX,CADkB;AAAA;AAAA,6CAEbG,IAAI,CAACC,KAAL,EAFa;;AAAA;AAEzBC,YAAAA,GAFyB;AAI/BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAJ+B,6CAKxB,IALwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAM7B,EAN6B,CAAhC;AAQAR,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAKA,SACE,+CADF;AAKD,CAnBD;;AAqBA,eAAeD,MAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\n\nimport Parser from '../../modules/Parser';\n\nimport EPUB from '../../datum/epubs/pg61612';\n\nconst Viewer = () => {\n  const getParseEpub = useCallback(async (): Promise<null> => {\n    const test = new Parser(EPUB);\n    const res = await test.parse();\n\n    console.log(res);\n    return null;\n  }, []);\n\n  useEffect(() => {\n    getParseEpub();\n  }, [getParseEpub]);\n\n\n  return (\n    <>\n      Viewer Component\n    </>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}