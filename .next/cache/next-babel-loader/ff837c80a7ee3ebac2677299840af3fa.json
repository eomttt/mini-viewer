{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport * as viewerActions from '../../reducers/viewer';\nimport { VIEWER_SLIDER_LEN_RATIO } from '../../constants/viewer';\nvar Container = styled.div.withConfig({\n  displayName: \"ViewerSlider__Container\",\n  componentId: \"sc-1bvmglt-0\"\n})([\"width:100%;margin:auto 5%;flex-direction:column;display:flex;\"]);\nvar Input = styled.input.withConfig({\n  displayName: \"ViewerSlider__Input\",\n  componentId: \"sc-1bvmglt-1\"\n})([\"margin-left:\", \"%;width:\", \"%;cursor:grab;\"], (100 - VIEWER_SLIDER_LEN_RATIO) / 2, VIEWER_SLIDER_LEN_RATIO);\nvar Marker = styled.div.withConfig({\n  displayName: \"ViewerSlider__Marker\",\n  componentId: \"sc-1bvmglt-2\"\n})([\"margin-left:\", \"%;\"], (100 - VIEWER_SLIDER_LEN_RATIO) / 2);\n\nvar ViewerSlider = function ViewerSlider(_ref) {\n  var maxValue = _ref.maxValue;\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerPageCount = _useSelector.viewerPageCount;\n\n  var hasMaxValue = useMemo(function () {\n    return !!maxValue;\n  }, [maxValue]);\n  useEffect(function () {\n    setValue(viewerPageCount);\n  }, [viewerPageCount]);\n  var onChangeSlider = useCallback(function (e) {\n    dispatch(viewerActions.setViewerPageCount(Number(e.target.value)));\n  }, [dispatch]);\n  return __jsx(Container, null, hasMaxValue && __jsx(React.Fragment, null, __jsx(Marker, null, \"\".concat(value, \"/\").concat(maxValue)), __jsx(Input, {\n    type: \"range\",\n    min: \"0\",\n    max: maxValue,\n    value: value,\n    onChange: onChangeSlider\n  })));\n};\n\nexport default ViewerSlider;","map":null,"metadata":{},"sourceType":"module"}