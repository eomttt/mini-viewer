{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport Layout from '../components/Layout';\nimport ViewerCount from '../components/viewer/ViewerCount';\nimport ViewerNcx from '../components/viewer/ViewerNcx';\nimport ViewerPage from '../components/viewer/ViewerPage';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\nimport { ViewerContainer } from '../styles/viewer';\n\nvar Viewer = function Viewer(_ref) {\n  var book = _ref.book,\n      viewerSpines = _ref.viewerSpines,\n      styleLinks = _ref.styleLinks;\n  var spines = book.spines,\n      ncx = book.ncx;\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  var _useState4 = useState(false),\n      isClickedPrev = _useState4[0],\n      setIsClickedPrev = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector.viewerCountList;\n\n  var isAnalizedSpine = useMemo(function () {\n    return viewerCountList.length === viewerSpines.length;\n  }, [viewerCountList, viewerSpines]);\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n  var setNextSpine = useCallback(function () {\n    if (nowSpineIndex + 1 >= viewerSpines.length) {\n      alert('마지막 페이지 입니다.');\n    } else {\n      setNowSpineIndex(nowSpineIndex + 1);\n      setIsClickedPrev(false);\n    }\n  }, [nowSpineIndex, viewerSpines]);\n  var setPrevSpine = useCallback(function () {\n    if (nowSpineIndex - 1 < 0) {\n      alert('첫번째 페이지 입니다');\n    } else {\n      setNowSpineIndex(nowSpineIndex - 1);\n      setIsClickedPrev(true);\n    }\n  }, [nowSpineIndex]);\n  return __jsx(Layout, {\n    styleLinks: styleLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(ViewerNcx, {\n    ncxItem: ncx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(ViewerContainer, {\n    styleProps: {\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, isAnalizedSpine && __jsx(ViewerPage, {\n    viewerWidth: viewerWidth,\n    viewerHeight: viewerHeight,\n    isShowPrevViewer: isClickedPrev,\n    wholeColumnCount: viewerCountList[nowSpineIndex].count,\n    spine: spines[nowSpineIndex],\n    viewerSpine: viewerSpines[nowSpineIndex],\n    setNextSpine: setNextSpine,\n    setPrevSpine: setPrevSpine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, viewerSpines.map(function (viewerSpine, index) {\n    return __jsx(ViewerCount, {\n      key: viewerSpine,\n      viewerWidth: viewerWidth,\n      viewerHeight: viewerHeight,\n      viewerSpine: viewerSpine,\n      viewerSpineIndex: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }))));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nViewer.getInitialProps = function _callee(context) {\n  var req, _require, EpubParser, parser, book, viewerSpines;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req;\n\n          if (!req) {\n            _context.next = 17;\n            break;\n          }\n\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _context.prev = 3;\n          parser = new EpubParser('public/jikji.epub');\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: 'public/epub/jikji'\n          }));\n\n        case 7:\n          book = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(parser.readItems(book.spines, {\n            force: true,\n            extractBody: true,\n            serializedAnchor: true,\n            ignoreScript: true,\n            basePath: 'epub/jikji'\n          }));\n\n        case 10:\n          viewerSpines = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            viewerSpines: viewerSpines,\n            styleLinks: book.styles.map(function (style) {\n              return \"epub/jikji/\".concat(style.href);\n            })\n          });\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](3);\n          console.log('Error', _context.t0);\n\n        case 17:\n          return _context.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 14]], Promise);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx"],"names":["React","useState","useMemo","useEffect","useCallback","useSelector","Layout","ViewerCount","ViewerNcx","ViewerPage","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","ViewerContainer","Viewer","book","viewerSpines","styleLinks","spines","ncx","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","isClickedPrev","setIsClickedPrev","state","viewer","viewerCountList","isAnalizedSpine","length","Math","floor","window","innerWidth","innerHeight","setNextSpine","alert","setPrevSpine","height","count","map","viewerSpine","index","getInitialProps","context","req","require","EpubParser","parser","parse","validatePackage","parseStyle","unzipPath","readItems","force","extractBody","serializedAnchor","ignoreScript","basePath","styles","style","href","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,QADF,EACYC,OADZ,EACqBC,SADrB,EACgCC,WADhC,QAEO,OAFP;AAGA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,qBAAxD;AAKA,SAASC,eAAT,QAAgC,kBAAhC;;AAQA,IAAMC,MAAuB,GAAG,SAA1BA,MAA0B,OAAwC;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,YAA+B,QAA/BA,YAA+B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAAA,MAC9DC,MAD8D,GAC9CH,IAD8C,CAC9DG,MAD8D;AAAA,MACtDC,GADsD,GAC9CJ,IAD8C,CACtDI,GADsD;;AAAA,kBAGhCjB,QAAQ,CAAC,CAAD,CAHwB;AAAA,MAG/DkB,WAH+D;AAAA,MAGlDC,cAHkD;;AAAA,mBAI9BnB,QAAQ,CAAC,CAAD,CAJsB;AAAA,MAI/DoB,YAJ+D;AAAA,MAIjDC,eAJiD;;AAAA,mBAK5BrB,QAAQ,CAAC,CAAD,CALoB;AAAA,MAK/DsB,aAL+D;AAAA,MAKhDC,gBALgD;;AAAA,mBAM5BvB,QAAQ,CAAC,KAAD,CANoB;AAAA,MAM/DwB,aAN+D;AAAA,MAMhDC,gBANgD;;AAAA,qBAQ1CrB,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAyBA,KAAK,CAACC,MAA/B;AAAA,GAAD,CAR+B;AAAA,MAQ9DC,eAR8D,gBAQ9DA,eAR8D;;AAUtE,MAAMC,eAAe,GAAG5B,OAAO,CAAC;AAAA,WAAM2B,eAAe,CAACE,MAAhB,KAA2BhB,YAAY,CAACgB,MAA9C;AAAA,GAAD,EAAuD,CAACF,eAAD,EAAkBd,YAAlB,CAAvD,CAA/B;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,cAAc,CAACY,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,IAAqBzB,kBAAkB,GAAG,GAA1C,CAAX,CAAD,CAAd;AACAY,IAAAA,eAAe,CAACU,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACE,WAAP,IAAsBzB,mBAAmB,GAAG,GAA5C,CAAX,CAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAM0B,YAAY,GAAGjC,WAAW,CAAC,YAAM;AACrC,QAAImB,aAAa,GAAG,CAAhB,IAAqBR,YAAY,CAACgB,MAAtC,EAA8C;AAC5CO,MAAAA,KAAK,CAAC,cAAD,CAAL;AACD,KAFD,MAEO;AACLd,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAG,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAP+B,EAO7B,CAACH,aAAD,EAAgBR,YAAhB,CAP6B,CAAhC;AASA,MAAMwB,YAAY,GAAGnC,WAAW,CAAC,YAAM;AACrC,QAAImB,aAAa,GAAG,CAAhB,GAAoB,CAAxB,EAA2B;AACzBe,MAAAA,KAAK,CAAC,aAAD,CAAL;AACD,KAFD,MAEO;AACLd,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GAP+B,EAO7B,CAACH,aAAD,CAP6B,CAAhC;AASA,SACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAEP,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,eAAD;AACE,IAAA,UAAU,EAAE;AACVsB,MAAAA,MAAM,EAAEnB;AADE,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMES,eAAe,IAEb,MAAC,UAAD;AACE,IAAA,WAAW,EAAEX,WADf;AAEE,IAAA,YAAY,EAAEE,YAFhB;AAGE,IAAA,gBAAgB,EAAEI,aAHpB;AAIE,IAAA,gBAAgB,EAAEI,eAAe,CAACN,aAAD,CAAf,CAA+BkB,KAJnD;AAKE,IAAA,KAAK,EAAExB,MAAM,CAACM,aAAD,CALf;AAME,IAAA,WAAW,EAAER,YAAY,CAACQ,aAAD,CAN3B;AAOE,IAAA,YAAY,EAAEc,YAPhB;AAQE,IAAA,YAAY,EAAEE,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEExB,YAAY,CAAC2B,GAAb,CAAiB,UAACC,WAAD,EAAcC,KAAd;AAAA,WACf,MAAC,WAAD;AACE,MAAA,GAAG,EAAED,WADP;AAEE,MAAA,WAAW,EAAExB,WAFf;AAGE,MAAA,YAAY,EAAEE,YAHhB;AAIE,MAAA,WAAW,EAAEsB,WAJf;AAKE,MAAA,gBAAgB,EAAEC,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAjB,CAFF,CApBF,CAJF,CADF;AAyCD,CA5ED,C,CA8EA;;;AACA/B,MAAM,CAACgC,eAAP,GAAyB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,GADe,GACPD,OADO,CACfC,GADe;;AAAA,eAEnBA,GAFmB;AAAA;AAAA;AAAA;;AAAA,qBAGEC,OAAO,CAAC,mBAAD,CAHT,EAGbC,UAHa,YAGbA,UAHa;AAAA;AAKbC,UAAAA,MALa,GAKJ,IAAID,UAAJ,CAAe,mBAAf,CALI;AAAA;AAAA,2CAMUC,MAAM,CAACC,KAAP,CAAa;AACxCC,YAAAA,eAAe,EAAE,IADuB;AAExCC,YAAAA,UAAU,EAAE,KAF4B;AAGxCC,YAAAA,SAAS,EAAE;AAH6B,WAAb,CANV;;AAAA;AAMbxC,UAAAA,IANa;AAAA;AAAA,2CAWQoC,MAAM,CAACK,SAAP,CAAiBzC,IAAI,CAACG,MAAtB,EAA8B;AACvDuC,YAAAA,KAAK,EAAE,IADgD;AAEvDC,YAAAA,WAAW,EAAE,IAF0C;AAGvDC,YAAAA,gBAAgB,EAAE,IAHqC;AAIvDC,YAAAA,YAAY,EAAE,IAJyC;AAKvDC,YAAAA,QAAQ,EAAE;AAL6C,WAA9B,CAXR;;AAAA;AAWb7C,UAAAA,YAXa;AAAA,2CAmBZ;AACLD,YAAAA,IAAI,EAAJA,IADK;AAELC,YAAAA,YAAY,EAAZA,YAFK;AAGLC,YAAAA,UAAU,EAAEF,IAAI,CAAC+C,MAAL,CAAYnB,GAAZ,CAAgB,UAACoB,KAAD;AAAA,0CAAyBA,KAAK,CAACC,IAA/B;AAAA,aAAhB;AAHP,WAnBY;;AAAA;AAAA;AAAA;AAyBnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAzBmB;AAAA,2CA8BhB,EA9BgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAiCA,eAAepD,MAAf","sourcesContent":["import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport ViewerCount from '../components/viewer/ViewerCount';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerNcx from '../components/viewer/ViewerNcx';\nimport ViewerPage from '../components/viewer/ViewerPage';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\n\nimport { ReducerState } from '../interfaces';\nimport { EpubBook } from '../interfaces/books';\n\nimport { ViewerContainer } from '../styles/viewer';\n\ninterface Props {\n  book: EpubBook;\n  viewerSpines: string[];\n  styleLinks: string[];\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewerSpines, styleLinks }) => {\n  const { spines, ncx } = book;\n\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n  const [isClickedPrev, setIsClickedPrev] = useState(false);\n\n  const { viewerCountList } = useSelector((state: ReducerState) => state.viewer);\n\n  const isAnalizedSpine = useMemo(() => viewerCountList.length === viewerSpines.length, [viewerCountList, viewerSpines]);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n\n  const setNextSpine = useCallback(() => {\n    if (nowSpineIndex + 1 >= viewerSpines.length) {\n      alert('마지막 페이지 입니다.');\n    } else {\n      setNowSpineIndex(nowSpineIndex + 1);\n      setIsClickedPrev(false);\n    }\n  }, [nowSpineIndex, viewerSpines]);\n\n  const setPrevSpine = useCallback(() => {\n    if (nowSpineIndex - 1 < 0) {\n      alert('첫번째 페이지 입니다');\n    } else {\n      setNowSpineIndex(nowSpineIndex - 1);\n      setIsClickedPrev(true);\n    }\n  }, [nowSpineIndex]);\n\n  return (\n    <Layout\n      styleLinks={styleLinks}\n    >\n      <ViewerNcx ncxItem={ncx} />\n      <ViewerContainer\n        styleProps={{\n          height: viewerHeight,\n        }}\n      >\n        {\n        isAnalizedSpine\n        && (\n          <ViewerPage\n            viewerWidth={viewerWidth}\n            viewerHeight={viewerHeight}\n            isShowPrevViewer={isClickedPrev}\n            wholeColumnCount={viewerCountList[nowSpineIndex].count}\n            spine={spines[nowSpineIndex]}\n            viewerSpine={viewerSpines[nowSpineIndex]}\n            setNextSpine={setNextSpine}\n            setPrevSpine={setPrevSpine}\n          />\n        )\n      }\n        <section>\n          {\n          viewerSpines.map((viewerSpine, index) => (\n            <ViewerCount\n              key={viewerSpine}\n              viewerWidth={viewerWidth}\n              viewerHeight={viewerHeight}\n              viewerSpine={viewerSpine}\n              viewerSpineIndex={index}\n            />\n          ))\n        }\n        </section>\n      </ViewerContainer>\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/jikji.epub');\n      const book: EpubBook = await parser.parse({\n        validatePackage: true,\n        parseStyle: false,\n        unzipPath: 'public/epub/jikji',\n      });\n      const viewerSpines = await parser.readItems(book.spines, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n        ignoreScript: true,\n        basePath: 'epub/jikji',\n      });\n\n      return {\n        book,\n        viewerSpines,\n        styleLinks: book.styles.map((style) => `epub/jikji/${style.href}`),\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}