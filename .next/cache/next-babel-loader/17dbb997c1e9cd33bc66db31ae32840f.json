{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingCountItem.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport debounce from 'lodash.debounce';\nimport { subColor } from '../../styles';\nimport { ViewerSettingItemStyle, ViewerSettingValueStyle, ViewerSettingLabelStyle } from '../../styles/viewer';\nvar Container = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Container\",\n  componentId: \"sc-1rnr8mc-0\"\n})([\"\", \"\"], ViewerSettingItemStyle);\nvar Label = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Label\",\n  componentId: \"sc-1rnr8mc-1\"\n})([\"\", \"\"], ViewerSettingLabelStyle);\nvar Value = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Value\",\n  componentId: \"sc-1rnr8mc-2\"\n})([\"\", \"\"], ViewerSettingValueStyle);\nvar Controller = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Controller\",\n  componentId: \"sc-1rnr8mc-3\"\n})([\"display:flex;width:30%;margin:auto 0 auto auto;border:1px solid \", \";border-radius:1em;padding-left:.3em;padding-right:.3em;\"], subColor);\nvar MinusButton = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__MinusButton\",\n  componentId: \"sc-1rnr8mc-4\"\n})([\"width:50%;cursor:pointer;border-right:1px solid \", \"\"], subColor);\nvar PlusButton = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__PlusButton\",\n  componentId: \"sc-1rnr8mc-5\"\n})([\"width:50%;cursor:pointer;\"]);\n\nvar ViewerSettingCountItem = function ViewerSettingCountItem(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      valueUnit = _ref.valueUnit,\n      minValue = _ref.minValue,\n      maxValue = _ref.maxValue,\n      action = _ref.action;\n\n  var _useState = useState(value),\n      showValue = _useState[0],\n      setShowValue = _useState[1];\n\n  var isIntegerNumber = useCallback(function (number) {\n    return number % 1 === 0;\n  }, []);\n  var debounceAction = useCallback(debounce(action, 1000), [action]);\n  var countUpValue = useCallback(function () {\n    var expectedValue = Number(showValue) + valueUnit;\n\n    if (expectedValue <= maxValue) {\n      var newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n      setShowValue(newValue);\n      debounceAction(newValue);\n    } else {\n      alert('변경 할 수 있는 최대값 입니다.');\n    }\n  }, [debounceAction, showValue, maxValue, valueUnit, isIntegerNumber]);\n  var countDownValue = useCallback(function () {\n    var expectedValue = Number(showValue) - valueUnit;\n\n    if (expectedValue >= minValue) {\n      var newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n      setShowValue(newValue);\n      debounceAction(newValue);\n      ;\n    } else {\n      alert('변경 할 수 있는 최소값 입니다.');\n    }\n  }, [debounceAction, showValue, minValue, valueUnit, isIntegerNumber]);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, label), __jsx(Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, showValue), __jsx(Controller, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(MinusButton, {\n    onClick: countDownValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"-\"), __jsx(PlusButton, {\n    onClick: countUpValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"+\")));\n};\n\nexport default ViewerSettingCountItem;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingCountItem.tsx"],"names":["React","useCallback","useState","styled","debounce","subColor","ViewerSettingItemStyle","ViewerSettingValueStyle","ViewerSettingLabelStyle","Container","div","Label","Value","Controller","MinusButton","PlusButton","ViewerSettingCountItem","label","value","valueUnit","minValue","maxValue","action","showValue","setShowValue","isIntegerNumber","number","debounceAction","countUpValue","expectedValue","Number","newValue","toFixed","alert","countDownValue"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport debounce from 'lodash.debounce';\n\nimport { subColor } from '../../styles';\nimport {\n  ViewerSettingItemStyle,\n  ViewerSettingValueStyle,\n  ViewerSettingLabelStyle,\n} from '../../styles/viewer';\n\nconst Container = styled.div`\n  ${ViewerSettingItemStyle}\n`;\n\nconst Label = styled.div`\n  ${ViewerSettingLabelStyle}\n`;\n\nconst Value = styled.div`\n  ${ViewerSettingValueStyle}\n`;\n\nconst Controller = styled.div`\n  display: flex;\n  width: 30%;\n  margin: auto 0 auto auto;\n  border: 1px solid ${subColor};\n  border-radius: 1em;\n  padding-left: .3em;\n  padding-right: .3em;\n`;\n\nconst MinusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n  border-right: 1px solid ${subColor}\n`;\n\nconst PlusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n`;\n\ninterface Props {\n  label: string;\n  value: string | number;\n  valueUnit: number;\n  minValue: number;\n  maxValue: number;\n  action: (param: string | number) => void;\n}\n\nconst ViewerSettingCountItem: React.FunctionComponent<Props> = ({\n  label, value, valueUnit,\n  minValue, maxValue, action,\n}) => {\n  const [showValue, setShowValue] = useState(value);\n\n  const isIntegerNumber = useCallback((number) => number % 1 === 0, []);\n\n  const debounceAction = useCallback(debounce(action, 1000), [action]);\n\n  const countUpValue = useCallback(() => {\n    const expectedValue = Number(showValue) + valueUnit;\n\n    if (expectedValue <= maxValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n\n      setShowValue(newValue);\n      debounceAction(newValue);\n    } else {\n      alert('변경 할 수 있는 최대값 입니다.');\n    }\n  }, [debounceAction, showValue, maxValue, valueUnit, isIntegerNumber]);\n\n  const countDownValue = useCallback(() => {\n    const expectedValue = Number(showValue) - valueUnit;\n\n    if (expectedValue >= minValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n\n      setShowValue(newValue);\n      debounceAction(newValue);;\n    } else {\n      alert('변경 할 수 있는 최소값 입니다.');\n    }\n  }, [debounceAction, showValue, minValue, valueUnit, isIntegerNumber]);\n\n  return (\n    <Container>\n      <Label>\n        {label}\n      </Label>\n      <Value>\n        {showValue}\n      </Value>\n      <Controller>\n        <MinusButton onClick={countDownValue}>\n          -\n        </MinusButton>\n        <PlusButton onClick={countUpValue}\n        >\n          +\n        </PlusButton>\n      </Controller>\n    </Container>\n  );\n};\n\nexport default ViewerSettingCountItem;\n"]},"metadata":{},"sourceType":"module"}