{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport * as viewerActions from '../../reducers/viewer';\nimport { VIEWER_SLIDER_LEN_RATIO } from '../../constants/viewer';\nconst Container = styled.div.withConfig({\n  displayName: \"ViewerSlider__Container\",\n  componentId: \"sc-1bvmglt-0\"\n})([\"width:100%;margin:auto 5%;flex-direction:column;display:flex;\"]);\nconst Input = styled.input.withConfig({\n  displayName: \"ViewerSlider__Input\",\n  componentId: \"sc-1bvmglt-1\"\n})([\"margin-left:\", \"%;width:\", \"%;cursor:grab;\"], (100 - VIEWER_SLIDER_LEN_RATIO) / 2, VIEWER_SLIDER_LEN_RATIO);\nconst Marker = styled.div.withConfig({\n  displayName: \"ViewerSlider__Marker\",\n  componentId: \"sc-1bvmglt-2\"\n})([\"margin-left:\", \"%;\"], (100 - VIEWER_SLIDER_LEN_RATIO) / 2);\n\nconst ViewerSlider = ({\n  maxValue\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n  const {\n    viewerPageCount\n  } = useSelector(state => state.viewer);\n  const hasMaxValue = useMemo(() => !!maxValue, [maxValue]);\n  useEffect(() => {\n    setValue(viewerPageCount);\n  }, [viewerPageCount]);\n  const onChangeSlider = useCallback(e => {\n    dispatch(viewerActions.setViewerPageCount(Number(e.target.value)));\n  }, [dispatch]);\n  return __jsx(Container, null, hasMaxValue && __jsx(React.Fragment, null, __jsx(Marker, null, `${value}/${maxValue}`), __jsx(Input, {\n    type: \"range\",\n    min: \"0\",\n    max: maxValue,\n    value: value,\n    onChange: onChangeSlider\n  })));\n};\n\nexport default ViewerSlider;","map":null,"metadata":{},"sourceType":"module"}