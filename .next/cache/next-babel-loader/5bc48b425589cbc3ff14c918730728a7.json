{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport ViewerCount from './ViewerCount';\nimport { ViewerContainer } from '../../styles/viewer';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nvar ViewerPage = function ViewerPage(_ref) {\n  var spines = _ref.spines,\n      viewerSpines = _ref.viewerSpines;\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector.viewerCountList;\n\n  var isAnalizedSpine = useMemo(function () {\n    return viewerCountList.length === viewerSpines.length;\n  }, [viewerCountList, viewerSpines]);\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n  var setNextSpine = useCallback(function () {\n    console.log('Set next spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex + 1);\n  }, [nowSpineIndex]);\n  var setPrevSpine = useCallback(function () {\n    console.log('Set prev spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex - 1);\n  }, [nowSpineIndex]);\n  return __jsx(ViewerContainer, {\n    styleProps: {\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(ViewerCount, {\n    key: viewerSpines[2],\n    viewerWidth: viewerWidth,\n    viewerHeight: viewerHeight,\n    viewerSpine: viewerSpines[2],\n    viewerSpineIndex: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerPage;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx"],"names":["React","useCallback","useState","useEffect","useMemo","useSelector","ViewerCount","ViewerContainer","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","ViewerPage","spines","viewerSpines","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","state","viewer","viewerCountList","isAnalizedSpine","length","Math","floor","window","innerWidth","innerHeight","setNextSpine","console","log","setPrevSpine","height"],"mappings":";;AAAA,OAAOA,KAAP,IACEC,WADF,EACeC,QADf,EACyBC,SADzB,EACoCC,OADpC,QAEO,OAFP;AAGA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AAKA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,wBAAxD;;AAQA,IAAMC,UAA0C,GAAG,SAA7CA,UAA6C,OAA8B;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBACzCV,QAAQ,CAAC,CAAD,CADiC;AAAA,MACxEW,WADwE;AAAA,MAC3DC,cAD2D;;AAAA,mBAEvCZ,QAAQ,CAAC,CAAD,CAF+B;AAAA,MAExEa,YAFwE;AAAA,MAE1DC,eAF0D;;AAAA,mBAGrCd,QAAQ,CAAC,CAAD,CAH6B;AAAA,MAGxEe,aAHwE;AAAA,MAGzDC,gBAHyD;;AAAA,qBAKnDb,WAAW,CAAC,UAACc,KAAD;AAAA,WAAyBA,KAAK,CAACC,MAA/B;AAAA,GAAD,CALwC;AAAA,MAKvEC,eALuE,gBAKvEA,eALuE;;AAO/E,MAAMC,eAAe,GAAGlB,OAAO,CAAC;AAAA,WAAMiB,eAAe,CAACE,MAAhB,KAA2BX,YAAY,CAACW,MAA9C;AAAA,GAAD,EAAuD,CAACF,eAAD,EAAkBT,YAAlB,CAAvD,CAA/B;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,cAAc,CAACU,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,IAAqBnB,kBAAkB,GAAG,GAA1C,CAAX,CAAD,CAAd;AACAQ,IAAAA,eAAe,CAACQ,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACE,WAAP,IAAsBnB,mBAAmB,GAAG,GAA5C,CAAX,CAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAMoB,YAAY,GAAG5B,WAAW,CAAC,YAAM;AACrC6B,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bd,aAA9B;AACAC,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GAH+B,EAG7B,CAACA,aAAD,CAH6B,CAAhC;AAKA,MAAMe,YAAY,GAAG/B,WAAW,CAAC,YAAM;AACrC6B,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bd,aAA9B;AACAC,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GAH+B,EAG7B,CAACA,aAAD,CAH6B,CAAhC;AAKA,SACE,MAAC,eAAD;AACE,IAAA,UAAU,EAAE;AACVgB,MAAAA,MAAM,EAAElB;AADE,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,GAAG,EAAEH,YAAY,CAAC,CAAD,CADnB;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,YAAY,EAAEE,YAHhB;AAIE,IAAA,WAAW,EAAEH,YAAY,CAAC,CAAD,CAJ3B;AAKE,IAAA,gBAAgB,EAAE,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzCF,CADF;AAqDD,CA7ED;;AA+EA,eAAeF,UAAf","sourcesContent":["import React, {\n  useCallback, useState, useEffect, useMemo,\n} from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Viewer from './Viewer';\nimport ViewerCount from './ViewerCount';\n\nimport { ViewerContainer } from '../../styles/viewer';\n\nimport { ReducerState } from '../../interfaces';\nimport { EpubSpineItem } from '../../interfaces/books';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\n\ninterface Props {\n  spines: EpubSpineItem[];\n  viewerSpines: string[];\n}\n\nconst ViewerPage: React.FunctionComponent<Props> = ({ spines, viewerSpines }) => {\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n\n  const { viewerCountList } = useSelector((state: ReducerState) => state.viewer);\n\n  const isAnalizedSpine = useMemo(() => viewerCountList.length === viewerSpines.length, [viewerCountList, viewerSpines]);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n\n  const setNextSpine = useCallback(() => {\n    console.log('Set next spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex + 1);\n  }, [nowSpineIndex]);\n\n  const setPrevSpine = useCallback(() => {\n    console.log('Set prev spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex - 1);\n  }, [nowSpineIndex]);\n\n  return (\n    <ViewerContainer\n      styleProps={{\n        height: viewerHeight,\n      }}\n    >\n      {/* {\n        isAnalizedSpine\n        && (\n        <Viewer\n          viewerWidth={viewerWidth}\n          viewerHeight={viewerHeight}\n          wholeColumnCount={viewerCountList[nowSpineIndex].count}\n          spine={spines[nowSpineIndex]}\n          viewerSpine={viewerSpines[nowSpineIndex]}\n          setNextSpine={setNextSpine}\n          setPrevSpine={setPrevSpine}\n        />\n        )\n      }\n      <section>\n        {\n          viewerSpines.map((viewerSpine, index) => (\n            <ViewerCount\n              key={viewerSpine}\n              viewerWidth={viewerWidth}\n              viewerHeight={viewerHeight}\n              viewerSpine={viewerSpine}\n              viewerSpineIndex={index}\n            />\n          ))\n        }\n      </section> */}\n      {/* <Viewer\n        viewerWidth={viewerWidth}\n        viewerHeight={viewerHeight}\n        wholeColumnCount={62}\n        spine={spines[3]}\n        viewerSpine={viewerSpines[3]}\n        setNextSpine={setNextSpine}\n        setPrevSpine={setPrevSpine}\n      /> */}\n      <section>\n        <ViewerCount\n          key={viewerSpines[2]}\n          viewerWidth={viewerWidth}\n          viewerHeight={viewerHeight}\n          viewerSpine={viewerSpines[2]}\n          viewerSpineIndex={2}\n        />\n      </section>\n    </ViewerContainer>\n  );\n};\n\nexport default ViewerPage;\n"]},"metadata":{},"sourceType":"module"}