{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport BookList from '../components/books/BookList';\nimport * as booksActions from '../reducers/books';\nimport { getBookInfo, isEpubFile } from '../lib/util';\nimport Layout from '../components/Layout';\n\nconst Home = props => {\n  const {\n    list\n  } = useSelector(state => state.books);\n  useEffect(() => {\n    console.log(\"AAA\", props);\n\n    if (!props.booksInfo) {\n      window.location.reload();\n    }\n  }, [props]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(BookList, {\n    books: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = async context => {\n  const {\n    req,\n    store\n  } = context;\n\n  if (req) {\n    const fs = require('fs');\n\n    const {\n      EpubParser\n    } = require('@ridi/epub-parser');\n\n    const files = fs.readdirSync('public/');\n    const booksInfo = []; // eslint-disable-next-line no-restricted-syntax\n\n    for (const file of files) {\n      if (isEpubFile(file)) {\n        const [fileName] = file.split('.epub');\n        const epubPath = `epub/${fileName}`;\n\n        try {\n          const {\n            book,\n            viewers\n          } = await getBookInfo(EpubParser, {\n            epubFile: fileName,\n            epubPath\n          });\n          booksInfo.push({\n            book,\n            viewers,\n            publicPath: epubPath\n          });\n        } catch (error) {\n          console.log('Error index.', error);\n        }\n      }\n    }\n\n    store.dispatch(booksActions.setBookList(booksInfo));\n    return {\n      booksInfo\n    };\n  }\n\n  return null;\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","useEffect","useSelector","BookList","booksActions","getBookInfo","isEpubFile","Layout","Home","props","list","state","books","console","log","booksInfo","window","location","reload","getInitialProps","context","req","store","fs","require","EpubParser","files","readdirSync","file","fileName","split","epubPath","book","viewers","epubFile","push","publicPath","error","dispatch","setBookList"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,OAAO,KAAKC,YAAZ,MAA8B,mBAA9B;AAEA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,aAAxC;AAIA,OAAOC,MAAP,MAAmB,sBAAnB;;AAMA,MAAMC,IAAqB,GAAIC,KAAD,IAAW;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAWR,WAAW,CAAES,KAAD,IAAyBA,KAAK,CAACC,KAAhC,CAA5B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,KAAnB;;AACA,QAAI,CAACA,KAAK,CAACM,SAAX,EAAsB;AACpBC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,GALQ,EAKN,CAACT,KAAD,CALM,CAAT;AAOA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAfD,C,CAiBA;;;AACAF,IAAI,CAACW,eAAL,GAAuB,MAAOC,OAAP,IAAuD;AAC5E,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAiBF,OAAvB;;AACA,MAAIC,GAAJ,EAAS;AACP,UAAME,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,OAAO,CAAC,mBAAD,CAA9B;;AAEA,UAAME,KAAK,GAAGH,EAAE,CAACI,WAAH,CAAe,SAAf,CAAd;AACA,UAAMZ,SAAqB,GAAG,EAA9B,CALO,CAOP;;AACA,SAAK,MAAMa,IAAX,IAAmBF,KAAnB,EAA0B;AACxB,UAAIpB,UAAU,CAACsB,IAAD,CAAd,EAAsB;AACpB,cAAM,CAACC,QAAD,IAAaD,IAAI,CAACE,KAAL,CAAW,OAAX,CAAnB;AACA,cAAMC,QAAQ,GAAI,QAAOF,QAAS,EAAlC;;AACA,YAAI;AACF,gBAAM;AAAEG,YAAAA,IAAF;AAAQC,YAAAA;AAAR,cAAoB,MAAM5B,WAAW,CAACoB,UAAD,EAAa;AACtDS,YAAAA,QAAQ,EAAEL,QAD4C;AAEtDE,YAAAA;AAFsD,WAAb,CAA3C;AAKAhB,UAAAA,SAAS,CAACoB,IAAV,CAAe;AACbH,YAAAA,IADa;AAEbC,YAAAA,OAFa;AAGbG,YAAAA,UAAU,EAAEL;AAHC,WAAf;AAKD,SAXD,CAWE,OAAOM,KAAP,EAAc;AACdxB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BuB,KAA5B;AACD;AACF;AACF;;AACDf,IAAAA,KAAK,CAACgB,QAAN,CAAelC,YAAY,CAACmC,WAAb,CAAyBxB,SAAzB,CAAf;AAEA,WAAO;AACLA,MAAAA;AADK,KAAP;AAGD;;AAED,SAAO,IAAP;AACD,CAtCD;;AAwCA,eAAeP,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport BookList from '../components/books/BookList';\n\nimport * as booksActions from '../reducers/books';\n\nimport { getBookInfo, isEpubFile } from '../lib/util';\n\nimport { ReducerState } from '../interfaces';\nimport { BookInfo } from '../interfaces/books';\nimport Layout from '../components/Layout';\n\ninterface Props {\n  booksInfo: BookInfo[];\n}\n\nconst Home: NextPage<Props> = (props) => {\n  const { list } = useSelector((state: ReducerState) => state.books);\n\n  useEffect(() => {\n    console.log(\"AAA\", props);\n    if (!props.booksInfo) {\n      window.location.reload();\n    }\n  }, [props]);\n\n  return (\n    <Layout>\n      <BookList books={list} />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n\n    const files = fs.readdirSync('public/');\n    const booksInfo: BookInfo[] = [];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const file of files) {\n      if (isEpubFile(file)) {\n        const [fileName] = file.split('.epub');\n        const epubPath = `epub/${fileName}`;\n        try {\n          const { book, viewers } = await getBookInfo(EpubParser, {\n            epubFile: fileName,\n            epubPath,\n          });\n\n          booksInfo.push({\n            book,\n            viewers,\n            publicPath: epubPath,\n          });\n        } catch (error) {\n          console.log('Error index.', error);\n        }\n      }\n    }\n    store.dispatch(booksActions.setBookList(booksInfo));\n\n    return {\n      booksInfo,\n    };\n  }\n\n  return null;\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}