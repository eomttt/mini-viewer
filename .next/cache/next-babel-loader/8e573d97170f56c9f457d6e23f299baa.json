{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { EpubParser } from '@ridi/epub-parser'; // import Parser from '../../modules/Parser';\n// import EPUB from '../../datum/epubs/pg61612.epub';\n\nvar Viewer = function Viewer() {\n  var getParseEpub = useCallback(function () {\n    try {\n      var parser = new EpubParser('/static/pg61612.zip');\n    } catch (error) {\n      console.log(\"Error\", error);\n    } // const test = new Parser(EPUB);\n    // const res = await test.parse();\n    // console.log(res);\n\n\n    return null;\n  }, []);\n  useEffect(function () {\n    getParseEpub();\n  }, [getParseEpub]);\n  return __jsx(React.Fragment, null, \"Viewer Component\");\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx"],"names":["React","useEffect","useCallback","EpubParser","Viewer","getParseEpub","parser","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AAEA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;AAEA;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,YAAY,GAAGH,WAAW,CAAC,YAAqB;AACpD,QAAI;AACF,UAAMI,MAAM,GAAG,IAAIH,UAAJ,CAAe,qBAAf,CAAf;AACD,KAFD,CAEE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,KALmD,CAMpD;AACA;AAEA;;;AACA,WAAO,IAAP;AACD,GAX+B,EAW7B,EAX6B,CAAhC;AAaAN,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAKA,SACE,+CADF;AAKD,CAxBD;;AA0BA,eAAeD,MAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\n\nimport { EpubParser } from '@ridi/epub-parser';\n\n// import Parser from '../../modules/Parser';\n\n// import EPUB from '../../datum/epubs/pg61612.epub';\n\n\nconst Viewer = () => {\n  const getParseEpub = useCallback((): Promise<null> => {\n    try {\n      const parser = new EpubParser('/static/pg61612.zip');\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n    // const test = new Parser(EPUB);\n    // const res = await test.parse();\n\n    // console.log(res);\n    return null;\n  }, []);\n\n  useEffect(() => {\n    getParseEpub();\n  }, [getParseEpub]);\n\n\n  return (\n    <>\n      Viewer Component\n    </>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}