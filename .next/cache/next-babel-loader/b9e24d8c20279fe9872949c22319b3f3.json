{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCalculator from '../components/viewer/ViewerCalculator';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\nimport * as viewerActions from '../reducers/viewer';\nimport { getBook, getViewers } from '../lib/util';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\nvar Container = styled.div.withConfig({\n  displayName: \"viewer__Container\",\n  componentId: \"sc-1iklkx5-0\"\n})([\"padding:\", \"% \", \"%;height:\", \"px;background-color:\", \";text-align:center;overflow:hidden;\"], (100 - VIEWER_HEIGHT_RATIO) / 2, (100 - VIEWER_WIDTH_RATIO) / 2, function (props) {\n  return props.styleProps.height;\n}, function (props) {\n  return props.styleProps.backgroundColor;\n});\n\nvar Viewer = function Viewer(_ref) {\n  var book = _ref.book,\n      viewers = _ref.viewers,\n      styleLinks = _ref.styleLinks;\n  var spines = book.spines,\n      titles = book.titles,\n      ncx = book.ncx,\n      contributors = book.contributors; // console.log('Book', book);\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  var _useState4 = useState(0),\n      wholePageCount = _useState4[0],\n      setWholePageCount = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector.viewerCountList,\n      viewerPageCount = _useSelector.viewerPageCount;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.viewerSetting;\n  }),\n      fontSize = _useSelector2.fontSize,\n      widthRatio = _useSelector2.widthRatio,\n      lineHeight = _useSelector2.lineHeight,\n      backgroundColor = _useSelector2.backgroundColor;\n\n  var isAnalyzedSpine = useMemo(function () {\n    return viewerCountList.length >= viewers.length;\n  }, [viewerCountList, viewers]);\n  var isFirstPage = useMemo(function () {\n    return viewerPageCount === 0;\n  }, [viewerPageCount]);\n  var isLastPage = useMemo(function () {\n    return viewerPageCount === wholePageCount;\n  }, [viewerPageCount, wholePageCount]);\n  var selectedSpineIndex = useMemo(function () {\n    var spineIndex = 0;\n    var accurateCount = 0;\n    viewerCountList.some(function (viewerCount) {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  var pageColumnOffset = useMemo(function () {\n    var columnOffset = viewerPageCount;\n    viewerCountList.some(function (viewerCount, index) {\n      if (index < nowSpineIndex) {\n        columnOffset -= viewerCount.count;\n        return false;\n      }\n\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n  useEffect(function () {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n  useEffect(function () {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      var pageCount = viewerCountList.reduce(function (acc, cur) {\n        return acc + cur.count;\n      }, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n  useEffect(function () {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n  var calculateViewerWidth = useCallback(function (nowWidth, newRatio) {\n    return Math.floor(Number(nowWidth) * (Number(newRatio) / 100));\n  }, []);\n  return __jsx(Layout, {\n    styleLinks: styleLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(ViewerHeader, {\n    titles: titles,\n    authors: contributors,\n    ncxItem: ncx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(Container, {\n    styleProps: {\n      height: viewerHeight,\n      backgroundColor: backgroundColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, isAnalyzedSpine && __jsx(ViewerPage, {\n    viewerWidth: calculateViewerWidth(viewerWidth, widthRatio),\n    viewerHeight: viewerHeight,\n    pageColumnOffset: pageColumnOffset,\n    viewerSpine: viewers[nowSpineIndex],\n    isFirstPage: isFirstPage,\n    isLastPage: isLastPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), !isAnalyzedSpine && __jsx(ViewerCalculator, {\n    viewerWidth: calculateViewerWidth(viewerWidth, widthRatio),\n    viewerHeight: viewerHeight,\n    spines: spines,\n    viewers: viewers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), __jsx(ViewerBottom, {\n    sliderMaxValue: wholePageCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nViewer.getInitialProps = function _callee(context) {\n  var req, store, query, bookPath, queryPath, _queryPath$split, _queryPath$split2, fileName, _require, EpubParser, parser, book, viewers, _store$getState, books, list, selectedBookInfo, _selectedBookInfo, _book, _viewers, publicPath;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req, store = context.store, query = context.query;\n          bookPath = query.bookPath;\n          queryPath = decodeURI(String(bookPath));\n\n          if (!req) {\n            _context.next = 24;\n            break;\n          }\n\n          _queryPath$split = queryPath.split('/'), _queryPath$split2 = _slicedToArray(_queryPath$split, 2), fileName = _queryPath$split2[1];\n          console.log(\"AAA\", fileName, queryPath); // Server side render\n\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _context.prev = 7;\n          parser = new EpubParser(\"public/\".concat(fileName, \".epub\"));\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(getBook(parser, {\n            unzipPath: \"public/\".concat(queryPath)\n          }));\n\n        case 11:\n          book = _context.sent;\n\n          if (!book) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(getViewers(parser, {\n            bookSpines: book.spines,\n            publicPath: queryPath\n          }));\n\n        case 15:\n          viewers = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            viewers: viewers,\n            styleLinks: book.styles.map(function (style) {\n              return \"\".concat(queryPath, \"/\").concat(style.href);\n            })\n          });\n\n        case 17:\n          _context.next = 22;\n          break;\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](7);\n          console.log('Error', _context.t0);\n\n        case 22:\n          _context.next = 30;\n          break;\n\n        case 24:\n          // Client side render\n          _store$getState = store.getState(), books = _store$getState.books;\n          list = books.list;\n          selectedBookInfo = list[0];\n          list.some(function (bookInfo) {\n            if (bookInfo.publicPath === queryPath) {\n              selectedBookInfo = bookInfo;\n              return true;\n            }\n\n            return false;\n          });\n          _selectedBookInfo = selectedBookInfo, _book = _selectedBookInfo.book, _viewers = _selectedBookInfo.viewers, publicPath = _selectedBookInfo.publicPath;\n          return _context.abrupt(\"return\", {\n            book: _book,\n            viewers: _viewers,\n            styleLinks: _book.styles.map(function (style) {\n              return \"\".concat(publicPath, \"/\").concat(style.href);\n            })\n          });\n\n        case 30:\n          return _context.abrupt(\"return\", {});\n\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[7, 19]], Promise);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx"],"names":["React","useState","useMemo","useEffect","useCallback","useSelector","useDispatch","styled","Layout","ViewerBottom","ViewerCalculator","ViewerHeader","ViewerPage","viewerActions","getBook","getViewers","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","Container","div","props","styleProps","height","backgroundColor","Viewer","book","viewers","styleLinks","spines","titles","ncx","contributors","dispatch","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","wholePageCount","setWholePageCount","state","viewer","viewerCountList","viewerPageCount","viewerSetting","fontSize","widthRatio","lineHeight","isAnalyzedSpine","length","isFirstPage","isLastPage","selectedSpineIndex","spineIndex","accurateCount","some","viewerCount","count","index","pageColumnOffset","columnOffset","Math","floor","window","innerWidth","innerHeight","console","log","pageCount","reduce","acc","cur","initViewerState","calculateViewerWidth","nowWidth","newRatio","Number","getInitialProps","context","req","store","query","bookPath","queryPath","decodeURI","String","split","fileName","require","EpubParser","parser","unzipPath","bookSpines","publicPath","styles","map","style","href","getState","books","list","selectedBookInfo","bookInfo"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,QADF,EACYC,OADZ,EACqBC,SADrB,EACgCC,WADhC,QAEO,OAFP;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,aAApC;AAEA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,qBAAxD;AAKA,IAAMC,SAAS,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,mGACF,CAAC,MAAMF,mBAAP,IAA8B,CAD5B,EACkC,CAAC,MAAMD,kBAAP,IAA6B,CAD/D,EAEH,UAACI,KAAD;AAAA,SAAWA,KAAK,CAACC,UAAN,CAAiBC,MAA5B;AAAA,CAFG,EAGO,UAACF,KAAD;AAAA,SAAWA,KAAK,CAACC,UAAN,CAAiBE,eAA5B;AAAA,CAHP,CAAf;;AAcA,IAAMC,MAAuB,GAAG,SAA1BA,MAA0B,OAAmC;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAAA,MAE/DC,MAF+D,GAG7DH,IAH6D,CAE/DG,MAF+D;AAAA,MAEvDC,MAFuD,GAG7DJ,IAH6D,CAEvDI,MAFuD;AAAA,MAE/CC,GAF+C,GAG7DL,IAH6D,CAE/CK,GAF+C;AAAA,MAE1CC,YAF0C,GAG7DN,IAH6D,CAE1CM,YAF0C,EAKjE;;AAEA,MAAMC,QAAQ,GAAG1B,WAAW,EAA5B;;AAPiE,kBAS3BL,QAAQ,CAAC,CAAD,CATmB;AAAA,MAS1DgC,WAT0D;AAAA,MAS7CC,cAT6C;;AAAA,mBAUzBjC,QAAQ,CAAC,CAAD,CAViB;AAAA,MAU1DkC,YAV0D;AAAA,MAU5CC,eAV4C;;AAAA,mBAWvBnC,QAAQ,CAAC,CAAD,CAXe;AAAA,MAW1DoC,aAX0D;AAAA,MAW3CC,gBAX2C;;AAAA,mBAYrBrC,QAAQ,CAAC,CAAD,CAZa;AAAA,MAY1DsC,cAZ0D;AAAA,MAY1CC,iBAZ0C;;AAAA,qBAgB7DnC,WAAW,CAAC,UAACoC,KAAD;AAAA,WAAyBA,KAAK,CAACC,MAA/B;AAAA,GAAD,CAhBkD;AAAA,MAe/DC,eAf+D,gBAe/DA,eAf+D;AAAA,MAe9CC,eAf8C,gBAe9CA,eAf8C;;AAAA,sBAmB7DvC,WAAW,CAAC,UAACoC,KAAD;AAAA,WAAyBA,KAAK,CAACI,aAA/B;AAAA,GAAD,CAnBkD;AAAA,MAkB/DC,QAlB+D,iBAkB/DA,QAlB+D;AAAA,MAkBrDC,UAlBqD,iBAkBrDA,UAlBqD;AAAA,MAkBzCC,UAlByC,iBAkBzCA,UAlByC;AAAA,MAkB7BzB,eAlB6B,iBAkB7BA,eAlB6B;;AAqBjE,MAAM0B,eAAe,GAAG/C,OAAO,CAAC;AAAA,WAAMyC,eAAe,CAACO,MAAhB,IAA0BxB,OAAO,CAACwB,MAAxC;AAAA,GAAD,EAAiD,CAACP,eAAD,EAAkBjB,OAAlB,CAAjD,CAA/B;AACA,MAAMyB,WAAW,GAAGjD,OAAO,CAAC;AAAA,WAAM0C,eAAe,KAAK,CAA1B;AAAA,GAAD,EAA8B,CAACA,eAAD,CAA9B,CAA3B;AACA,MAAMQ,UAAU,GAAGlD,OAAO,CAAC;AAAA,WAAM0C,eAAe,KAAKL,cAA1B;AAAA,GAAD,EAA2C,CAACK,eAAD,EAAkBL,cAAlB,CAA3C,CAA1B;AACA,MAAMc,kBAAkB,GAAGnD,OAAO,CAAC,YAAM;AACvC,QAAIoD,UAAU,GAAG,CAAjB;AACA,QAAIC,aAAa,GAAG,CAApB;AACAZ,IAAAA,eAAe,CAACa,IAAhB,CAAqB,UAACC,WAAD,EAAiB;AACpC,UAAIF,aAAa,GAAGE,WAAW,CAACC,KAA5B,GAAoCd,eAAxC,EAAyD;AACvDU,QAAAA,UAAU,GAAGG,WAAW,CAACE,KAAzB;AACA,eAAO,IAAP;AACD;;AACDJ,MAAAA,aAAa,IAAIE,WAAW,CAACC,KAA7B;AACA,aAAO,KAAP;AACD,KAPD;AAQA,WAAOJ,UAAP;AACD,GAZiC,EAY/B,CAACV,eAAD,EAAkBD,eAAlB,CAZ+B,CAAlC;AAaA,MAAMiB,gBAAgB,GAAG1D,OAAO,CAAC,YAAM;AACrC,QAAI2D,YAAY,GAAGjB,eAAnB;AACAD,IAAAA,eAAe,CAACa,IAAhB,CAAqB,UAACC,WAAD,EAAcE,KAAd,EAAwB;AAC3C,UAAIA,KAAK,GAAGtB,aAAZ,EAA2B;AACzBwB,QAAAA,YAAY,IAAKJ,WAAW,CAACC,KAA7B;AACA,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAND;AAOA,WAAOG,YAAP;AACD,GAV+B,EAU7B,CAAClB,eAAD,EAAkBC,eAAlB,EAAmCP,aAAnC,CAV6B,CAAhC;AAYAlC,EAAAA,SAAS,CAAC,YAAM;AACd+B,IAAAA,cAAc,CAAC4B,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,IAAqBjD,kBAAkB,GAAG,GAA1C,CAAX,CAAD,CAAd;AACAoB,IAAAA,eAAe,CAAC0B,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACE,WAAP,IAAsBjD,mBAAmB,GAAG,GAA5C,CAAX,CAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAd,EAAAA,SAAS,CAAC,YAAM;AACdgE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bf,kBAA/B;AACAf,IAAAA,gBAAgB,CAACe,kBAAD,CAAhB;AACD,GAHQ,EAGN,CAACA,kBAAD,CAHM,CAAT;AAKAlD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI8C,eAAJ,EAAqB;AACnBkB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMC,SAAS,GAAG1B,eAAe,CAAC2B,MAAhB,CAAuB,UAACC,GAAD,EAAMC,GAAN;AAAA,eAAcD,GAAG,GAAGC,GAAG,CAACd,KAAxB;AAAA,OAAvB,EAAsD,CAAtD,CAAlB;AACAlB,MAAAA,iBAAiB,CAAC6B,SAAS,GAAG,CAAb,CAAjB;AACD;AACF,GANQ,EAMN,CAACpB,eAAD,EAAkBN,eAAlB,CANM,CAAT;AAQAxC,EAAAA,SAAS,CAAC,YAAM;AACdgE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACApC,IAAAA,QAAQ,CAACnB,aAAa,CAAC4D,eAAd,EAAD,CAAR;AACD,GAHQ,EAGN,CAACzC,QAAD,EAAWc,QAAX,EAAqBE,UAArB,EAAiCD,UAAjC,CAHM,CAAT;AAKA,MAAM2B,oBAAoB,GAAGtE,WAAW,CACtC,UAACuE,QAAD,EAAWC,QAAX;AAAA,WAAwBd,IAAI,CAACC,KAAL,CAAWc,MAAM,CAACF,QAAD,CAAN,IAAoBE,MAAM,CAACD,QAAD,CAAN,GAAmB,GAAvC,CAAX,CAAxB;AAAA,GADsC,EAEtC,EAFsC,CAAxC;AAKA,SACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAEjD,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEE,MADV;AAEE,IAAA,OAAO,EAAEE,YAFX;AAGE,IAAA,OAAO,EAAED,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE,MAAC,SAAD;AACE,IAAA,UAAU,EAAE;AACVR,MAAAA,MAAM,EAAEa,YADE;AAEVZ,MAAAA,eAAe,EAAfA;AAFU,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG0B,eAAe,IAEhB,MAAC,UAAD;AACE,IAAA,WAAW,EAAEyB,oBAAoB,CAACzC,WAAD,EAAcc,UAAd,CADnC;AAEE,IAAA,YAAY,EAAEZ,YAFhB;AAGE,IAAA,gBAAgB,EAAEyB,gBAHpB;AAIE,IAAA,WAAW,EAAElC,OAAO,CAACW,aAAD,CAJtB;AAKE,IAAA,WAAW,EAAEc,WALf;AAME,IAAA,UAAU,EAAEC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAiBG,CAACH,eAAD,IAED,MAAC,gBAAD;AACE,IAAA,WAAW,EAAEyB,oBAAoB,CAACzC,WAAD,EAAcc,UAAd,CADnC;AAEE,IAAA,YAAY,EAAEZ,YAFhB;AAGE,IAAA,MAAM,EAAEP,MAHV;AAIE,IAAA,OAAO,EAAEF,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CARF,EAmCE,MAAC,YAAD;AACE,IAAA,cAAc,EAAEa,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CADF;AAyCD,CAtHD,C,CAwHA;;;AACAf,MAAM,CAACsD,eAAP,GAAyB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,GADe,GACOD,OADP,CACfC,GADe,EACVC,KADU,GACOF,OADP,CACVE,KADU,EACHC,KADG,GACOH,OADP,CACHG,KADG;AAEfC,UAAAA,QAFe,GAEFD,KAFE,CAEfC,QAFe;AAGjBC,UAAAA,SAHiB,GAGLC,SAAS,CAACC,MAAM,CAACH,QAAD,CAAP,CAHJ;;AAAA,eAKnBH,GALmB;AAAA;AAAA;AAAA;;AAAA,6BAMAI,SAAS,CAACG,KAAV,CAAgB,GAAhB,CANA,2DAMZC,QANY;AAOrBrB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBoB,QAAnB,EAA6BJ,SAA7B,EAPqB,CAQrB;;AARqB,qBASEK,OAAO,CAAC,mBAAD,CATT,EASbC,UATa,YASbA,UATa;AAAA;AAWbC,UAAAA,MAXa,GAWJ,IAAID,UAAJ,kBAAyBF,QAAzB,WAXI;AAAA;AAAA,2CAYU1E,OAAO,CAAC6E,MAAD,EAAS;AAC3CC,YAAAA,SAAS,mBAAYR,SAAZ;AADkC,WAAT,CAZjB;;AAAA;AAYb3D,UAAAA,IAZa;;AAAA,eAgBfA,IAhBe;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAiBKV,UAAU,CAAC4E,MAAD,EAAS;AACvCE,YAAAA,UAAU,EAAEpE,IAAI,CAACG,MADsB;AAEvCkE,YAAAA,UAAU,EAAEV;AAF2B,WAAT,CAjBf;;AAAA;AAiBX1D,UAAAA,OAjBW;AAAA,2CAsBV;AACLD,YAAAA,IAAI,EAAJA,IADK;AAELC,YAAAA,OAAO,EAAPA,OAFK;AAGLC,YAAAA,UAAU,EAAEF,IAAI,CAACsE,MAAL,CAAYC,GAAZ,CAAgB,UAACC,KAAD;AAAA,+BAAcb,SAAd,cAA2Ba,KAAK,CAACC,IAAjC;AAAA,aAAhB;AAHP,WAtBU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA6BnB/B,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AA7BmB;AAAA;AAAA;;AAAA;AAgCrB;AAhCqB,4BAiCWa,KAAK,CAACkB,QAAN,EAjCX,EAiCbC,KAjCa,mBAiCbA,KAjCa;AAkCbC,UAAAA,IAlCa,GAkCJD,KAlCI,CAkCbC,IAlCa;AAoCjBC,UAAAA,gBApCiB,GAoCED,IAAI,CAAC,CAAD,CApCN;AAsCrBA,UAAAA,IAAI,CAAC7C,IAAL,CAAU,UAAC+C,QAAD,EAAc;AACtB,gBAAIA,QAAQ,CAACT,UAAT,KAAwBV,SAA5B,EAAuC;AACrCkB,cAAAA,gBAAgB,GAAGC,QAAnB;AACA,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD,WAND;AAtCqB,8BA8CiBD,gBA9CjB,EA8Cb7E,KA9Ca,qBA8CbA,IA9Ca,EA8CPC,QA9CO,qBA8CPA,OA9CO,EA8CEoE,UA9CF,qBA8CEA,UA9CF;AAAA,2CAgDd;AACLrE,YAAAA,IAAI,EAAJA,KADK;AAELC,YAAAA,OAAO,EAAPA,QAFK;AAGLC,YAAAA,UAAU,EAAEF,KAAI,CAACsE,MAAL,CAAYC,GAAZ,CAAgB,UAACC,KAAD;AAAA,+BAAcH,UAAd,cAA4BG,KAAK,CAACC,IAAlC;AAAA,aAAhB;AAHP,WAhDc;;AAAA;AAAA,2CAuDhB,EAvDgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AA0DA,eAAe1E,MAAf","sourcesContent":["import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCalculator from '../components/viewer/ViewerCalculator';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\n\nimport * as viewerActions from '../reducers/viewer';\n\nimport { getBook, getViewers } from '../lib/util';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\n\nimport { ReducerState } from '../interfaces';\nimport { EpubBook } from '../interfaces/books';\n\nconst Container = styled.div`\n  padding: ${(100 - VIEWER_HEIGHT_RATIO) / 2}% ${(100 - VIEWER_WIDTH_RATIO) / 2}%;\n  height: ${(props) => props.styleProps.height}px;\n  background-color: ${(props) => props.styleProps.backgroundColor};\n  text-align: center;\n  overflow: hidden;\n`;\n\ninterface Props {\n  book: EpubBook;\n  viewers: string[];\n  styleLinks: string[];\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewers, styleLinks }) => {\n  const {\n    spines, titles, ncx, contributors,\n  } = book;\n\n  // console.log('Book', book);\n\n  const dispatch = useDispatch();\n\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n  const [wholePageCount, setWholePageCount] = useState(0);\n\n  const {\n    viewerCountList, viewerPageCount,\n  } = useSelector((state: ReducerState) => state.viewer);\n  const {\n    fontSize, widthRatio, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const isAnalyzedSpine = useMemo(() => viewerCountList.length >= viewers.length, [viewerCountList, viewers]);\n  const isFirstPage = useMemo(() => viewerPageCount === 0, [viewerPageCount]);\n  const isLastPage = useMemo(() => viewerPageCount === wholePageCount, [viewerPageCount, wholePageCount]);\n  const selectedSpineIndex = useMemo(() => {\n    let spineIndex = 0;\n    let accurateCount = 0;\n    viewerCountList.some((viewerCount) => {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  const pageColumnOffset = useMemo(() => {\n    let columnOffset = viewerPageCount;\n    viewerCountList.some((viewerCount, index) => {\n      if (index < nowSpineIndex) {\n        columnOffset -= (viewerCount.count);\n        return false;\n      }\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n\n  useEffect(() => {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n\n  useEffect(() => {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      const pageCount = viewerCountList.reduce((acc, cur) => acc + cur.count, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n\n  useEffect(() => {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n\n  const calculateViewerWidth = useCallback(\n    (nowWidth, newRatio) => Math.floor(Number(nowWidth) * (Number(newRatio) / 100)),\n    [],\n  );\n\n  return (\n    <Layout\n      styleLinks={styleLinks}\n    >\n      <ViewerHeader\n        titles={titles}\n        authors={contributors}\n        ncxItem={ncx}\n      />\n      <Container\n        styleProps={{\n          height: viewerHeight,\n          backgroundColor,\n        }}\n      >\n        {isAnalyzedSpine\n        && (\n        <ViewerPage\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          pageColumnOffset={pageColumnOffset}\n          viewerSpine={viewers[nowSpineIndex]}\n          isFirstPage={isFirstPage}\n          isLastPage={isLastPage}\n        />\n        )}\n        {!isAnalyzedSpine\n        && (\n        <ViewerCalculator\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          spines={spines}\n          viewers={viewers}\n        />\n        )}\n      </Container>\n      <ViewerBottom\n        sliderMaxValue={wholePageCount}\n      />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store, query } = context;\n  const { bookPath } = query;\n  const queryPath = decodeURI(String(bookPath));\n\n  if (req) {\n    const [, fileName] = queryPath.split('/');\n    console.log(\"AAA\", fileName, queryPath);\n    // Server side render\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser(`public/${fileName}.epub`);\n      const book: EpubBook = await getBook(parser, {\n        unzipPath: `public/${queryPath}`,\n      });\n\n      if (book) {\n        const viewers = await getViewers(parser, {\n          bookSpines: book.spines,\n          publicPath: queryPath,\n        });\n\n        return {\n          book,\n          viewers,\n          styleLinks: book.styles.map((style) => `${queryPath}/${style.href}`),\n        };\n      }\n    } catch (error) {\n      console.log('Error', error);\n    }\n  } else {\n    // Client side render\n    const { books }: ReducerState = store.getState();\n    const { list } = books;\n\n    let selectedBookInfo = list[0];\n\n    list.some((bookInfo) => {\n      if (bookInfo.publicPath === queryPath) {\n        selectedBookInfo = bookInfo;\n        return true;\n      }\n      return false;\n    });\n\n    const { book, viewers, publicPath } = selectedBookInfo;\n\n    return {\n      book,\n      viewers,\n      styleLinks: book.styles.map((style) => `${publicPath}/${style.href}`),\n    };\n  }\n\n  return {};\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}