{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\nimport * as booksActions from '../reducers/books';\nimport { getBookInfo } from '../lib/util';\n\nvar Home = function Home() {\n  var _useSelector = useSelector(function (state) {\n    return state.books;\n  }),\n      list = _useSelector.list;\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(BookList, {\n    books: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = function _callee(context) {\n  var req, store, fs, _require, EpubParser, booksInfo, files, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file, epubPath, _ref, book, viewers;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req, store = context.store;\n\n          if (!req) {\n            _context.next = 52;\n            break;\n          }\n\n          fs = require('fs');\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          booksInfo = [];\n          files = fs.readdirSync('public/');\n          _context.prev = 6;\n          // eslint-disable-next-line no-restricted-syntax\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context.prev = 10;\n          _iterator = files[Symbol.iterator]();\n\n        case 12:\n          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n            _context.next = 31;\n            break;\n          }\n\n          file = _step.value;\n\n          if (!file.includes('.epub')) {\n            _context.next = 28;\n            break;\n          }\n\n          _context.prev = 15;\n          epubPath = \"epub/\".concat(file.split('.epub')[0]);\n          _context.next = 19;\n          return _regeneratorRuntime.awrap(getBookInfo(EpubParser, {\n            epubFile: \"public/\".concat(file),\n            epubPath: epubPath\n          }));\n\n        case 19:\n          _ref = _context.sent;\n          book = _ref.book;\n          viewers = _ref.viewers;\n          booksInfo.push({\n            book: book,\n            viewers: viewers,\n            publicPath: epubPath\n          });\n          _context.next = 28;\n          break;\n\n        case 25:\n          _context.prev = 25;\n          _context.t0 = _context[\"catch\"](15);\n          console.log('Error', _context.t0);\n\n        case 28:\n          _iteratorNormalCompletion = true;\n          _context.next = 12;\n          break;\n\n        case 31:\n          _context.next = 37;\n          break;\n\n        case 33:\n          _context.prev = 33;\n          _context.t1 = _context[\"catch\"](10);\n          _didIteratorError = true;\n          _iteratorError = _context.t1;\n\n        case 37:\n          _context.prev = 37;\n          _context.prev = 38;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 40:\n          _context.prev = 40;\n\n          if (!_didIteratorError) {\n            _context.next = 43;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 43:\n          return _context.finish(40);\n\n        case 44:\n          return _context.finish(37);\n\n        case 45:\n          store.dispatch(booksActions.setBookList(booksInfo));\n          return _context.abrupt(\"return\", {\n            booksInfo: booksInfo\n          });\n\n        case 49:\n          _context.prev = 49;\n          _context.t2 = _context[\"catch\"](6);\n          console.log('Error', _context.t2);\n\n        case 52:\n          return _context.abrupt(\"return\", {});\n\n        case 53:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 49], [10, 33, 37, 45], [15, 25], [38,, 40, 44]], Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","useSelector","Layout","BookList","booksActions","getBookInfo","Home","state","books","list","getInitialProps","context","req","store","fs","require","EpubParser","booksInfo","files","readdirSync","file","includes","epubPath","split","epubFile","book","viewers","push","publicPath","console","log","dispatch","setBookList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,OAAO,KAAKC,YAAZ,MAA8B,mBAA9B;AAEA,SAASC,WAAT,QAA4B,aAA5B;;AAKA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAAA,qBACVL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAyBA,KAAK,CAACC,KAA/B;AAAA,GAAD,CADD;AAAA,MACnBC,IADmB,gBACnBA,IADmB;;AAG3B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD,C,CASA;;;AACAH,IAAI,CAACI,eAAL,GAAuB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,GADa,GACED,OADF,CACbC,GADa,EACRC,KADQ,GACEF,OADF,CACRE,KADQ;;AAAA,eAEjBD,GAFiB;AAAA;AAAA;AAAA;;AAGbE,UAAAA,EAHa,GAGRC,OAAO,CAAC,IAAD,CAHC;AAAA,qBAIIA,OAAO,CAAC,mBAAD,CAJX,EAIXC,UAJW,YAIXA,UAJW;AAKbC,UAAAA,SALa,GAKW,EALX;AAObC,UAAAA,KAPa,GAOLJ,EAAE,CAACK,WAAH,CAAe,SAAf,CAPK;AAAA;AASjB;AATiB;AAAA;AAAA;AAAA;AAAA,sBAUED,KAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUNE,UAAAA,IAVM;;AAAA,eAWXA,IAAI,CAACC,QAAL,CAAc,OAAd,CAXW;AAAA;AAAA;AAAA;;AAAA;AAaLC,UAAAA,QAbK,kBAacF,IAAI,CAACG,KAAL,CAAW,OAAX,EAAoB,CAApB,CAbd;AAAA;AAAA,2CAcqBlB,WAAW,CAACW,UAAD,EAAa;AACtDQ,YAAAA,QAAQ,mBAAYJ,IAAZ,CAD8C;AAEtDE,YAAAA,QAAQ,EAARA;AAFsD,WAAb,CAdhC;;AAAA;AAAA;AAcHG,UAAAA,IAdG,QAcHA,IAdG;AAcGC,UAAAA,OAdH,QAcGA,OAdH;AAmBXT,UAAAA,SAAS,CAACU,IAAV,CAAe;AACbF,YAAAA,IAAI,EAAJA,IADa;AAEbC,YAAAA,OAAO,EAAPA,OAFa;AAGbE,YAAAA,UAAU,EAAEN;AAHC,WAAf;AAnBW;AAAA;;AAAA;AAAA;AAAA;AAyBXO,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAzBW;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA6BjBjB,UAAAA,KAAK,CAACkB,QAAN,CAAe3B,YAAY,CAAC4B,WAAb,CAAyBf,SAAzB,CAAf;AA7BiB,2CA+BV;AACLA,YAAAA,SAAS,EAATA;AADK,WA/BU;;AAAA;AAAA;AAAA;AAmCjBY,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAnCiB;AAAA,2CAsCd,EAtCc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAyCA,eAAexB,IAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\n\nimport * as booksActions from '../reducers/books';\n\nimport { getBookInfo } from '../lib/util';\n\nimport { ReducerState } from '../interfaces';\nimport { BookInfo } from '../interfaces/books';\n\nconst Home: NextPage = () => {\n  const { list } = useSelector((state: ReducerState) => state.books);\n\n  return (\n    <Layout>\n      <BookList books={list} />\n    </Layout>\n  );\n};\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n    const booksInfo: BookInfo[] = [];\n\n    const files = fs.readdirSync('public/');\n    try {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          try {\n            const epubPath = `epub/${file.split('.epub')[0]}`;\n            const { book, viewers } = await getBookInfo(EpubParser, {\n              epubFile: `public/${file}`,\n              epubPath,\n            });\n\n            booksInfo.push({\n              book,\n              viewers,\n              publicPath: epubPath,\n            });\n          } catch (error) {\n            console.log('Error', error);\n          }\n        }\n      }\n      store.dispatch(booksActions.setBookList(booksInfo));\n\n      return {\n        booksInfo,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}