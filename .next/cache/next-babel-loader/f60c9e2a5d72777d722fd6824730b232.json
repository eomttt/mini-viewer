{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/books/BookList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { DEFAULT_IMAGE } from '../../constants/books';\nconst Container = styled.ul``;\nconst CoverImage = styled.li`\n  width: 10em;\n  min-height: 13em;\n  border: 1px solid ${subColor};\n  display: inline-block;\n  margin: 1em;\n  vertical-align: bottom;\n  cursor: grab;\n  & img {\n    width: 100%;\n    user-select: none;\n  }\n`;\n\nconst BookList = ({\n  books\n}) => {\n  const {\n    0: bookList,\n    1: setBookList\n  } = useState(books);\n  const {\n    0: draggedItem,\n    1: setDraggedItem\n  } = useState(null);\n  const dragStart = useCallback((e, index) => {\n    setDraggedItem(bookList[index]);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  }, [bookList]);\n  const dragOver = useCallback((e, index) => {\n    e.preventDefault();\n    const draggedOverItem = bookList[index];\n\n    if (draggedItem.publicPath === draggedOverItem.publicPath) {\n      return;\n    }\n\n    const newSortedBooks = bookList.filter(item => item.publicPath !== draggedItem.publicPath);\n    newSortedBooks.splice(index, 0, draggedItem);\n    setBookList(newSortedBooks);\n  }, [bookList, draggedItem]);\n  const dragEnd = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, bookList.map(({\n    book,\n    publicPath\n  }, index) => __jsx(CoverImage, {\n    onDragOver: e => dragOver(e, index),\n    key: publicPath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: book.cover ? `${publicPath}/${book.cover.href}` : DEFAULT_IMAGE,\n    draggable: true,\n    onDragStart: e => dragStart(e, index),\n    onDragEnd: dragEnd,\n    alt: \"Cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))));\n};\n\nexport default BookList;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/books/BookList.tsx"],"names":["React","useCallback","useState","styled","subColor","DEFAULT_IMAGE","Container","ul","CoverImage","li","BookList","books","bookList","setBookList","draggedItem","setDraggedItem","dragStart","e","index","dataTransfer","effectAllowed","setData","target","parentNode","setDragImage","dragOver","preventDefault","draggedOverItem","publicPath","newSortedBooks","filter","item","splice","dragEnd","map","book","cover","href"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAIA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,EAAG,EAA5B;AAEA,MAAMC,UAAU,GAAGL,MAAM,CAACM,EAAG;;;sBAGPL,QAAS;;;;;;;;;CAH/B;;AAkBA,MAAMM,QAAwC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9D,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAACS,KAAD,CAAxC;AACA,QAAM;AAAA,OAACG,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAW,IAAX,CAA9C;AAEA,QAAMc,SAAS,GAAGf,WAAW,CAAC,CAACgB,CAAD,EAAIC,KAAJ,KAAc;AAC1CH,IAAAA,cAAc,CAACH,QAAQ,CAACM,KAAD,CAAT,CAAd;AACAD,IAAAA,CAAC,CAACE,YAAF,CAAeC,aAAf,GAA+B,MAA/B;AACAH,IAAAA,CAAC,CAACE,YAAF,CAAeE,OAAf,CAAuB,WAAvB,EAAoCJ,CAAC,CAACK,MAAF,CAASC,UAA7C;AACAN,IAAAA,CAAC,CAACE,YAAF,CAAeK,YAAf,CAA4BP,CAAC,CAACK,MAAF,CAASC,UAArC,EAAiD,EAAjD,EAAqD,EAArD;AACD,GAL4B,EAK1B,CAACX,QAAD,CAL0B,CAA7B;AAOA,QAAMa,QAAQ,GAAGxB,WAAW,CAAC,CAACgB,CAAD,EAAIC,KAAJ,KAAc;AACzCD,IAAAA,CAAC,CAACS,cAAF;AACA,UAAMC,eAAe,GAAGf,QAAQ,CAACM,KAAD,CAAhC;;AAEA,QAAIJ,WAAW,CAACc,UAAZ,KAA2BD,eAAe,CAACC,UAA/C,EAA2D;AACzD;AACD;;AAED,UAAMC,cAAc,GAAGjB,QAAQ,CAACkB,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACH,UAAL,KAAoBd,WAAW,CAACc,UAA1D,CAAvB;AACAC,IAAAA,cAAc,CAACG,MAAf,CAAsBd,KAAtB,EAA6B,CAA7B,EAAgCJ,WAAhC;AACAD,IAAAA,WAAW,CAACgB,cAAD,CAAX;AACD,GAX2B,EAWzB,CAACjB,QAAD,EAAWE,WAAX,CAXyB,CAA5B;AAaA,QAAMmB,OAAO,GAAGhC,WAAW,CAAEgB,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACS,cAAF;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAIA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,QAAQ,CAACsB,GAAT,CAAa,CAAC;AAAEC,IAAAA,IAAF;AAAQP,IAAAA;AAAR,GAAD,EAAuBV,KAAvB,KACX,MAAC,UAAD;AACE,IAAA,UAAU,EAAGD,CAAD,IAAOQ,QAAQ,CAACR,CAAD,EAAIC,KAAJ,CAD7B;AAEE,IAAA,GAAG,EAAEU,UAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,GAAG,EAAEO,IAAI,CAACC,KAAL,GAAc,GAAER,UAAW,IAAGO,IAAI,CAACC,KAAL,CAAWC,IAAK,EAA9C,GAAkDhC,aADzD;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,WAAW,EAAGY,CAAD,IAAOD,SAAS,CAACC,CAAD,EAAIC,KAAJ,CAH/B;AAIE,IAAA,SAAS,EAAEe,OAJb;AAKE,IAAA,GAAG,EAAC,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAFJ,CADF;AAoBD,CAhDD;;AAkDA,eAAevB,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\n\nimport { BookInfo } from '../../interfaces/books';\n\nimport { DEFAULT_IMAGE } from '../../constants/books';\n\nconst Container = styled.ul``;\n\nconst CoverImage = styled.li`\n  width: 10em;\n  min-height: 13em;\n  border: 1px solid ${subColor};\n  display: inline-block;\n  margin: 1em;\n  vertical-align: bottom;\n  cursor: grab;\n  & img {\n    width: 100%;\n    user-select: none;\n  }\n`;\n\ninterface Props {\n  books: BookInfo[];\n}\n\nconst BookList: React.FunctionComponent<Props> = ({ books }) => {\n  const [bookList, setBookList] = useState(books);\n  const [draggedItem, setDraggedItem] = useState<BookInfo>(null);\n\n  const dragStart = useCallback((e, index) => {\n    setDraggedItem(bookList[index]);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/html', e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  }, [bookList]);\n\n  const dragOver = useCallback((e, index) => {\n    e.preventDefault();\n    const draggedOverItem = bookList[index];\n\n    if (draggedItem.publicPath === draggedOverItem.publicPath) {\n      return;\n    }\n\n    const newSortedBooks = bookList.filter((item) => item.publicPath !== draggedItem.publicPath);\n    newSortedBooks.splice(index, 0, draggedItem);\n    setBookList(newSortedBooks);\n  }, [bookList, draggedItem]);\n\n  const dragEnd = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n\n  return (\n    <Container>\n      {\n        bookList.map(({ book, publicPath }, index) => (\n          <CoverImage\n            onDragOver={(e) => dragOver(e, index)}\n            key={publicPath}\n          >\n            <img\n              src={book.cover ? `${publicPath}/${book.cover.href}` : DEFAULT_IMAGE}\n              draggable\n              onDragStart={(e) => dragStart(e, index)}\n              onDragEnd={dragEnd}\n              alt=\"Cover\"\n            />\n          </CoverImage>\n        ))\n      }\n    </Container>\n  );\n};\n\nexport default BookList;\n"]},"metadata":{},"sourceType":"module"}