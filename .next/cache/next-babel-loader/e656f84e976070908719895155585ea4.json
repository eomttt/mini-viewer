{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewrSlider.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: 5%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  width: 100%;\\n  bottom: 0;\\n  border-top: 1px solid \", \";\\n  & input {\\n    margin-left: 5%;\\n    width: 90%;\\n    cursor: grab;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nvar Container = styled.div(_templateObject(), subColor);\nvar Marker = styled.div(_templateObject2());\n\nvar ViewrSlider = function ViewrSlider(_ref) {\n  var _ref$nowValue = _ref.nowValue,\n      nowValue = _ref$nowValue === void 0 ? 0 : _ref$nowValue,\n      maxValue = _ref.maxValue;\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useEffect(function () {\n    setValue(nowValue);\n  }, [nowValue]);\n  var onChangeSlider = useCallback(function (e) {\n    setValue(e.target.value);\n  }, []);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Marker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\".concat(value, \"/\").concat(maxValue)), maxValue && __jsx(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: maxValue,\n    value: value,\n    onChange: onChangeSlider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nexport default ViewrSlider;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewrSlider.tsx"],"names":["React","useCallback","useState","useEffect","styled","subColor","Container","div","Marker","ViewrSlider","nowValue","maxValue","value","setValue","onChangeSlider","e","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV,oBAIWF,QAJX,CAAf;AAYA,IAAMG,MAAM,GAAGJ,MAAM,CAACG,GAAV,oBAAZ;;AASA,IAAME,WAA2C,GAAG,SAA9CA,WAA8C,OAAgC;AAAA,2BAA7BC,QAA6B;AAAA,MAA7BA,QAA6B,8BAAlB,CAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACxDT,QAAQ,CAAC,CAAD,CADgD;AAAA,MAC3EU,KAD2E;AAAA,MACpEC,QADoE;;AAGlFV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACH,QAAD,CAAR;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,MAAMI,cAAc,GAAGb,WAAW,CAAC,UAACc,CAAD,EAAO;AACxCF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAFiC,EAE/B,EAF+B,CAAlC;AAIA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMA,KADN,cACeD,QADf,EADF,EAKIA,QAAQ,IACL;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAC,GAAxB;AAA4B,IAAA,GAAG,EAAEA,QAAjC;AAA2C,IAAA,KAAK,EAAEC,KAAlD;AAAyD,IAAA,QAAQ,EAAEE,cAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANP,CADF;AAWD,CAtBD;;AAwBA,eAAeL,WAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\n\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\n\nconst Container = styled.div`\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  border-top: 1px solid ${subColor};\n  & input {\n    margin-left: 5%;\n    width: 90%;\n    cursor: grab;\n  }\n`;\n\nconst Marker = styled.div`\n  margin-left: 5%;\n`;\n\ninterface Props {\n  nowValue: number;\n  maxValue: number;\n}\n\nconst ViewrSlider: React.FunctionComponent<Props> = ({ nowValue = 0, maxValue }) => {\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    setValue(nowValue);\n  }, [nowValue]);\n\n  const onChangeSlider = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  return (\n    <Container>\n      <Marker>\n        {`${value}/${maxValue}`}\n      </Marker>\n      {\n        maxValue\n        && <input type=\"range\" min=\"0\" max={maxValue} value={value} onChange={onChangeSlider} />\n      }\n    </Container>\n  );\n};\n\nexport default ViewrSlider;\n"]},"metadata":{},"sourceType":"module"}