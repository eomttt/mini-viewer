{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { HiddenViewSection, Contents } from '../../styles/viewer';\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nconst ViewerCount = ({\n  viewerSpineIndex,\n  viewerSpine,\n  viewerColumnCountCallback\n}) => {\n  const hiddenViewSectionRef = useRef(null);\n  useEffect(() => {\n    if (hiddenViewSectionRef) {\n      const viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n      const {\n        current: hiddenViewSectionCurrent\n      } = hiddenViewSectionRef;\n      const count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n      viewerColumnCountCallback(viewerSpineIndex, Math.floor(count));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewerSpineIndex]);\n  return __jsx(HiddenViewSection, {\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","HiddenViewSection","Contents","VIEWER_HEIGHT_RATIO","ViewerCount","viewerSpineIndex","viewerSpine","viewerColumnCountCallback","hiddenViewSectionRef","viewerHeight","Math","floor","window","innerHeight","current","hiddenViewSectionCurrent","count","clientHeight","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,qBAA5C;AAEA,SAASC,mBAAT,QAAoC,wBAApC;;AAQA,MAAMC,WAA2C,GAAG,CAAC;AACnDC,EAAAA,gBADmD;AACjCC,EAAAA,WADiC;AAEnDC,EAAAA;AAFmD,CAAD,KAG9C;AACJ,QAAMC,oBAAoB,GAAGT,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,oBAAJ,EAA0B;AACxB,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,WAAP,IAAsBV,mBAAmB,GAAG,GAA5C,CAAX,CAArB;AACA,YAAM;AAAEW,QAAAA,OAAO,EAAEC;AAAX,UAAwCP,oBAA9C;AACA,YAAMQ,KAAK,GAAGD,wBAAwB,CAACE,YAAzB,GAAwCR,YAAtD;AAEAF,MAAAA,yBAAyB,CAACF,gBAAD,EAAmBK,IAAI,CAACC,KAAL,CAAWK,KAAX,CAAnB,CAAzB;AACD,KAPa,CAQhB;;AACC,GATQ,EASN,CAACX,gBAAD,CATM,CAAT;AAWA,SACE,MAAC,iBAAD;AACE,IAAA,GAAG,EAAEG,oBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAEU,MAAAA,MAAM,EAAEZ;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAxBD;;AA0BA,eAAeF,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport { HiddenViewSection, Contents } from '../../styles/viewer';\n\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\ninterface Props {\n  viewerSpineIndex: number;\n  viewerSpine: string;\n  viewerColumnCountCallback: (spineIndex: number, count: number) => void;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerSpineIndex, viewerSpine,\n  viewerColumnCountCallback,\n}) => {\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (hiddenViewSectionRef) {\n      const viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n      const { current: hiddenViewSectionCurrent } = hiddenViewSectionRef;\n      const count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n\n      viewerColumnCountCallback(viewerSpineIndex, Math.floor(count));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewerSpineIndex]);\n\n  return (\n    <HiddenViewSection\n      ref={hiddenViewSectionRef}\n    >\n      <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n    </HiddenViewSection>\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}