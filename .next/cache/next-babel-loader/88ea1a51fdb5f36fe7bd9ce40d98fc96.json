{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Layout from '../components/Layout';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCount from '../components/viewer/ViewerCount';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\nimport * as actions from '../reducers/viewer';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\nimport { Container } from '../styles/viewer';\n\nvar Viewer = function Viewer(_ref) {\n  var book = _ref.book,\n      viewerSpines = _ref.viewerSpines,\n      styleLinks = _ref.styleLinks;\n  var spines = book.spines,\n      titles = book.titles,\n      ncx = book.ncx;\n  var dispatch = useDispatch();\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState(0),\n      nowSpineIndex = _useState3[0],\n      setNowSpineIndex = _useState3[1];\n\n  var _useState4 = useState(0),\n      wholePageCount = _useState4[0],\n      setWholePageCount = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.viewer;\n  }),\n      viewerCountList = _useSelector.viewerCountList,\n      viewerPageCount = _useSelector.viewerPageCount;\n\n  var isAnalizedSpine = useMemo(function () {\n    return viewerCountList.length >= viewerSpines.length;\n  }, [viewerCountList, viewerSpines]);\n  var selectedSpineIndex = useMemo(function () {\n    var spineIndex = 0;\n    var accurateCount = 0;\n    viewerCountList.some(function (viewerCount) {\n      if (accurateCount + viewerCount.count + 1 > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n\n      accurateCount += viewerCount.count + 1;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  var pageColumnOffset = useMemo(function () {\n    var viewerCount = viewerCountList[selectedSpineIndex];\n    console.log('AAA', viewerCount);\n  }, [selectedSpineIndex]);\n  useEffect(function () {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n  useEffect(function () {\n    if (isAnalizedSpine) {\n      var pageCount = viewerCountList.reduce(function (acc, cur) {\n        return acc + cur.count + 1;\n      }, 0);\n      setWholePageCount(pageCount);\n    }\n  }, [isAnalizedSpine, viewerCountList]);\n  var setNextSpine = useCallback(function () {\n    if (viewerPageCount >= wholePageCount) {\n      alert('마지막 페이지 입니다.');\n    } else {\n      dispatch(actions.setCountUpViewerPageCount());\n    }\n  }, [dispatch, viewerPageCount, wholePageCount]);\n  var setPrevSpine = useCallback(function () {\n    if (viewerPageCount <= 0) {\n      alert('첫번째 페이지 입니다');\n    } else {\n      dispatch(actions.setCountDownViewerPageCount());\n    }\n  }, [dispatch, viewerPageCount]);\n  return __jsx(Layout, {\n    styleLinks: styleLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(ViewerHeader, {\n    titles: titles,\n    ncxItem: ncx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(Container, {\n    styleProps: {\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, isAnalizedSpine && __jsx(ViewerPage, {\n    viewerWidth: viewerWidth,\n    viewerHeight: viewerHeight,\n    wholeColumnCount: viewerCountList[nowSpineIndex].count,\n    viewerSpine: viewerSpines[nowSpineIndex],\n    setNextSpine: setNextSpine,\n    setPrevSpine: setPrevSpine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, viewerSpines.map(function (viewerSpine, index) {\n    return __jsx(ViewerCount, {\n      key: viewerSpine,\n      viewerWidth: viewerWidth,\n      viewerHeight: viewerHeight,\n      spine: spines[index],\n      viewerSpine: viewerSpine,\n      viewerSpineIndex: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    });\n  }))), __jsx(ViewerBottom, {\n    sliderMaxValue: wholePageCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nViewer.getInitialProps = function _callee(context) {\n  var req, _require, EpubParser, parser, book, viewerSpines;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = context.req;\n\n          if (!req) {\n            _context.next = 17;\n            break;\n          }\n\n          _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n          _context.prev = 3;\n          parser = new EpubParser('public/jikji.epub');\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: 'public/epub/jikji'\n          }));\n\n        case 7:\n          book = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(parser.readItems(book.spines, {\n            force: true,\n            extractBody: true,\n            serializedAnchor: true,\n            ignoreScript: true,\n            basePath: 'epub/jikji'\n          }));\n\n        case 10:\n          viewerSpines = _context.sent;\n          return _context.abrupt(\"return\", {\n            book: book,\n            viewerSpines: viewerSpines,\n            styleLinks: book.styles.map(function (style) {\n              return \"epub/jikji/\".concat(style.href);\n            })\n          });\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](3);\n          console.log('Error', _context.t0);\n\n        case 17:\n          return _context.abrupt(\"return\", {});\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 14]], Promise);\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/viewer.tsx"],"names":["React","useState","useMemo","useEffect","useCallback","useSelector","useDispatch","Layout","ViewerBottom","ViewerCount","ViewerHeader","ViewerPage","actions","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","Container","Viewer","book","viewerSpines","styleLinks","spines","titles","ncx","dispatch","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","nowSpineIndex","setNowSpineIndex","wholePageCount","setWholePageCount","state","viewer","viewerCountList","viewerPageCount","isAnalizedSpine","length","selectedSpineIndex","spineIndex","accurateCount","some","viewerCount","count","index","pageColumnOffset","console","log","Math","floor","window","innerWidth","innerHeight","pageCount","reduce","acc","cur","setNextSpine","alert","setCountUpViewerPageCount","setPrevSpine","setCountDownViewerPageCount","height","map","viewerSpine","getInitialProps","context","req","require","EpubParser","parser","parse","validatePackage","parseStyle","unzipPath","readItems","force","extractBody","serializedAnchor","ignoreScript","basePath","styles","style","href"],"mappings":"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","sourcesContent":["import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\nimport Layout from '../components/Layout';\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCount from '../components/viewer/ViewerCount';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\n\nimport * as actions from '../reducers/viewer';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\n\nimport { ReducerState } from '../interfaces';\nimport { EpubBook } from '../interfaces/books';\n\nimport { Container } from '../styles/viewer';\n\ninterface Props {\n  book: EpubBook;\n  viewerSpines: string[];\n  styleLinks: string[];\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewerSpines, styleLinks }) => {\n  const { spines, titles, ncx } = book;\n\n  const dispatch = useDispatch();\n\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n  const [wholePageCount, setWholePageCount] = useState(0);\n\n  const { viewerCountList, viewerPageCount } = useSelector((state: ReducerState) => state.viewer);\n\n  const isAnalizedSpine = useMemo(() => viewerCountList.length >= viewerSpines.length, [viewerCountList, viewerSpines]);\n\n  const selectedSpineIndex = useMemo(() => {\n    let spineIndex = 0;\n    let accurateCount = 0;\n\n    viewerCountList.some((viewerCount) => {\n      if (accurateCount + viewerCount.count + 1 > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n      accurateCount += viewerCount.count + 1;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n\n  const pageColumnOffset = useMemo(() => {\n    const viewerCount = viewerCountList[selectedSpineIndex];\n    console.log('AAA', viewerCount);\n  }, [selectedSpineIndex]);\n\n  useEffect(() => {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n\n  useEffect(() => {\n    if (isAnalizedSpine) {\n      const pageCount = viewerCountList.reduce((acc, cur) => acc + cur.count + 1, 0);\n      setWholePageCount(pageCount);\n    }\n  }, [isAnalizedSpine, viewerCountList]);\n\n  const setNextSpine = useCallback(() => {\n    if (viewerPageCount >= wholePageCount) {\n      alert('마지막 페이지 입니다.');\n    } else {\n      dispatch(actions.setCountUpViewerPageCount());\n    }\n  }, [dispatch, viewerPageCount, wholePageCount]);\n\n  const setPrevSpine = useCallback(() => {\n    if (viewerPageCount <= 0) {\n      alert('첫번째 페이지 입니다');\n    } else {\n      dispatch(actions.setCountDownViewerPageCount());\n    }\n  }, [dispatch, viewerPageCount]);\n\n  return (\n    <Layout\n      styleLinks={styleLinks}\n    >\n      <ViewerHeader\n        titles={titles}\n        ncxItem={ncx}\n      />\n      <Container\n        styleProps={{\n          height: viewerHeight,\n        }}\n      >\n        {\n        isAnalizedSpine\n        && (\n        <ViewerPage\n          viewerWidth={viewerWidth}\n          viewerHeight={viewerHeight}\n          wholeColumnCount={viewerCountList[nowSpineIndex].count}\n          viewerSpine={viewerSpines[nowSpineIndex]}\n          setNextSpine={setNextSpine}\n          setPrevSpine={setPrevSpine}\n        />\n        )\n      }\n        <section>\n          {\n          viewerSpines.map((viewerSpine, index) => (\n            <ViewerCount\n              key={viewerSpine}\n              viewerWidth={viewerWidth}\n              viewerHeight={viewerHeight}\n              spine={spines[index]}\n              viewerSpine={viewerSpine}\n              viewerSpineIndex={index}\n            />\n          ))\n        }\n        </section>\n      </Container>\n      <ViewerBottom\n        sliderMaxValue={wholePageCount}\n      />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const { EpubParser } = require('@ridi/epub-parser');\n    try {\n      const parser = new EpubParser('public/jikji.epub');\n      const book: EpubBook = await parser.parse({\n        validatePackage: true,\n        parseStyle: false,\n        unzipPath: 'public/epub/jikji',\n      });\n      const viewerSpines = await parser.readItems(book.spines, {\n        force: true,\n        extractBody: true,\n        serializedAnchor: true,\n        ignoreScript: true,\n        basePath: 'epub/jikji',\n      });\n\n      return {\n        book,\n        viewerSpines,\n        styleLinks: book.styles.map((style) => `epub/jikji/${style.href}`),\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n\n  return {};\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}