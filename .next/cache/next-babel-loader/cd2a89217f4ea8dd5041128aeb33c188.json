{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\n\nconst Home = ({\n  books\n}) => {\n  console.log('AAAA', books);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(BookList, {\n    books: books,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = async context => {\n  const {\n    req\n  } = context;\n\n  if (req) {\n    const fs = require('fs');\n\n    const {\n      EpubParser\n    } = require('@ridi/epub-parser');\n\n    const books = [];\n    const files = fs.readdirSync('public/');\n\n    try {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          const fileName = file.split('.epub')[0];\n          const parser = new EpubParser(`public/${file}`); // eslint-disable-next-line no-await-in-loop\n\n          const book = await parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: `public/epub/${fileName}`\n          });\n          books.push(_objectSpread({}, book, {\n            publicPath: `epub/${fileName}`\n          }));\n        }\n      }\n\n      return {\n        books\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n  return {};\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","Layout","BookList","Home","books","console","log","getInitialProps","context","req","fs","require","EpubParser","files","readdirSync","file","includes","fileName","split","parser","book","parse","validatePackage","parseStyle","unzipPath","push","publicPath","error"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAKA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;;AAQA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,KAApB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD,C,CASA;;;AACAD,IAAI,CAACI,eAAL,GAAuB,MAAOC,OAAP,IAAuD;AAC5E,QAAM;AAAEC,IAAAA;AAAF,MAAUD,OAAhB;;AACA,MAAIC,GAAJ,EAAS;AACP,UAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,OAAO,CAAC,mBAAD,CAA9B;;AACA,UAAMP,KAAiB,GAAG,EAA1B;AAEA,UAAMS,KAAK,GAAGH,EAAE,CAACI,WAAH,CAAe,SAAf,CAAd;;AACA,QAAI;AACF;AACA,WAAK,MAAMC,IAAX,IAAmBF,KAAnB,EAA0B;AACxB,YAAIE,IAAI,CAACC,QAAL,CAAc,OAAd,CAAJ,EAA4B;AAC1B,gBAAMC,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAW,OAAX,EAAoB,CAApB,CAAjB;AACA,gBAAMC,MAAM,GAAG,IAAIP,UAAJ,CAAgB,UAASG,IAAK,EAA9B,CAAf,CAF0B,CAG1B;;AACA,gBAAMK,IAAc,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAa;AACxCC,YAAAA,eAAe,EAAE,IADuB;AAExCC,YAAAA,UAAU,EAAE,KAF4B;AAGxCC,YAAAA,SAAS,EAAG,eAAcP,QAAS;AAHK,WAAb,CAA7B;AAMAb,UAAAA,KAAK,CAACqB,IAAN,mBACKL,IADL;AAEEM,YAAAA,UAAU,EAAG,QAAOT,QAAS;AAF/B;AAID;AACF;;AACD,aAAO;AACLb,QAAAA;AADK,OAAP;AAGD,KAtBD,CAsBE,OAAOuB,KAAP,EAAc;AACdtB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqB,KAArB;AACD;AACF;;AACD,SAAO,EAAP;AACD,CAnCD;;AAqCA,eAAexB,IAAf","sourcesContent":["import React from 'react';\nimport { NextPageContext, NextPage } from 'next';\n\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport BookList from '../components/books/BookList';\n\nimport { EpubBook } from '../interfaces/books';\n\ninterface Props {\n  books: EpubBook[];\n}\n\nconst Home: NextPage<Props> = ({ books }) => {\n  console.log('AAAA', books);\n\n  return (\n    <Layout>\n      <BookList books={books} />\n    </Layout>\n  );\n};\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n    const books: EpubBook[] = [];\n\n    const files = fs.readdirSync('public/');\n    try {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          const fileName = file.split('.epub')[0];\n          const parser = new EpubParser(`public/${file}`);\n          // eslint-disable-next-line no-await-in-loop\n          const book: EpubBook = await parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: `public/epub/${fileName}`,\n          });\n\n          books.push({\n            ...book,\n            publicPath: `epub/${fileName}`,\n          });\n        }\n      }\n      return {\n        books,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n  return {};\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}