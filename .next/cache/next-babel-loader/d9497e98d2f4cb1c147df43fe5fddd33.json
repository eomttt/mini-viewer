{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { ViewerArticle, ViewerSection, ViewerContents } from '../../styles/viewer';\nimport * as viewerActions from '../../reducers/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\nconst HiddenViewArticle = styled(ViewerArticle).withConfig({\n  displayName: \"ViewerCount__HiddenViewArticle\",\n  componentId: \"sc-1llu6pn-0\"\n})([\"overflow:scroll;\"]);\nconst HiddenViewSection = styled(ViewerSection).withConfig({\n  displayName: \"ViewerCount__HiddenViewSection\",\n  componentId: \"sc-1llu6pn-1\"\n})([\"visibility:hidden;\"]);\n\nconst ViewerCount = ({\n  viewerWidth,\n  viewerHeight,\n  viewerSpineIndex,\n  viewerSpine,\n  spine,\n  viewerStyle\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n  useEffect(() => {\n    if (viewerWidth) {\n      const {\n        current: hiddenViewContainerCurrent\n      } = hiddenViewContainerRef;\n      const count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n      dispatch(viewerActions.setViewerColumnCount({\n        count,\n        index: viewerSpineIndex,\n        spineId: spine.id\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewerWidth]);\n  return __jsx(HiddenViewArticle, {\n    styleProps: _objectSpread({}, viewerStyle, {\n      width: viewerWidth,\n      height: viewerHeight\n    }),\n    ref: hiddenViewContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(HiddenViewSection, {\n    styleProps: {\n      width: viewerWidth\n    },\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(ViewerContents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","useDispatch","styled","ViewerArticle","ViewerSection","ViewerContents","viewerActions","VIEWER_PAGE_GAP","HiddenViewArticle","HiddenViewSection","ViewerCount","viewerWidth","viewerHeight","viewerSpineIndex","viewerSpine","spine","viewerStyle","dispatch","hiddenViewContainerRef","hiddenViewSectionRef","current","hiddenViewContainerCurrent","count","scrollWidth","setViewerColumnCount","index","spineId","id","width","height","__html"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,aADF,EACiBC,aADjB,EACgCC,cADhC,QAEO,qBAFP;AAIA,OAAO,KAAKC,aAAZ,MAA+B,uBAA/B;AAEA,SAASC,eAAT,QAAgC,wBAAhC;AAKA,MAAMC,iBAAiB,GAAGN,MAAM,CAACC,aAAD,CAAT;AAAA;AAAA;AAAA,wBAAvB;AAIA,MAAMM,iBAAiB,GAAGP,MAAM,CAACE,aAAD,CAAT;AAAA;AAAA;AAAA,0BAAvB;;AAaA,MAAMM,WAA2C,GAAG,CAAC;AACnDC,EAAAA,WADmD;AACtCC,EAAAA,YADsC;AAEnDC,EAAAA,gBAFmD;AAEjCC,EAAAA,WAFiC;AAEpBC,EAAAA,KAFoB;AAGnDC,EAAAA;AAHmD,CAAD,KAI9C;AACJ,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,sBAAsB,GAAGnB,MAAM,CAAC,IAAD,CAArC;AACA,QAAMoB,oBAAoB,GAAGpB,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,WAAJ,EAAiB;AACf,YAAM;AAAES,QAAAA,OAAO,EAAEC;AAAX,UAA0CH,sBAAhD;AACA,YAAMI,KAAK,GAAGD,0BAA0B,CAACE,WAA3B,IAA0CZ,WAAW,GAAGJ,eAAxD,CAAd;AAEAU,MAAAA,QAAQ,CAACX,aAAa,CAACkB,oBAAd,CAAmC;AAC1CF,QAAAA,KAD0C;AAE1CG,QAAAA,KAAK,EAAEZ,gBAFmC;AAG1Ca,QAAAA,OAAO,EAAEX,KAAK,CAACY;AAH2B,OAAnC,CAAD,CAAR;AAKD,KAVa,CAWhB;;AACC,GAZQ,EAYN,CAAChB,WAAD,CAZM,CAAT;AAcA,SACE,MAAC,iBAAD;AACE,IAAA,UAAU,oBACLK,WADK;AAERY,MAAAA,KAAK,EAAEjB,WAFC;AAGRkB,MAAAA,MAAM,EAAEjB;AAHA,MADZ;AAME,IAAA,GAAG,EAAEM,sBANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,iBAAD;AACE,IAAA,UAAU,EAAE;AACVU,MAAAA,KAAK,EAAEjB;AADG,KADd;AAIE,IAAA,GAAG,EAAEQ,oBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,cAAD;AAAgB,IAAA,uBAAuB,EAAE;AAAEW,MAAAA,MAAM,EAAEhB;AAAV,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CARF,CADF;AAmBD,CA1CD;;AA4CA,eAAeJ,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport {\n  ViewerArticle, ViewerSection, ViewerContents,\n} from '../../styles/viewer';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { EpubSpineItem } from '../../interfaces/books';\nimport { ViewerStyle } from '../../interfaces/viewer';\n\nconst HiddenViewArticle = styled(ViewerArticle)`\n  overflow: scroll;\n`;\n\nconst HiddenViewSection = styled(ViewerSection)`\n  visibility: hidden;\n`;\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewerSpineIndex: number;\n  viewerSpine: string;\n  spine: EpubSpineItem;\n  viewerStyle: ViewerStyle;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewerSpineIndex, viewerSpine, spine,\n  viewerStyle,\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (viewerWidth) {\n      const { current: hiddenViewContainerCurrent } = hiddenViewContainerRef;\n      const count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n\n      dispatch(viewerActions.setViewerColumnCount({\n        count,\n        index: viewerSpineIndex,\n        spineId: spine.id,\n      }));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewerWidth]);\n\n  return (\n    <HiddenViewArticle\n      styleProps={{\n        ...viewerStyle,\n        width: viewerWidth,\n        height: viewerHeight,\n      }}\n      ref={hiddenViewContainerRef}\n    >\n      <HiddenViewSection\n        styleProps={{\n          width: viewerWidth,\n        }}\n        ref={hiddenViewSectionRef}\n      >\n        <ViewerContents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n      </HiddenViewSection>\n    </HiddenViewArticle>\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}