{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HiddenViewSection, Contents, ViewArticle } from '../../styles/viewer';\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nvar ViewerCount = function ViewerCount(_ref) {\n  var viewerSpineIndex = _ref.viewerSpineIndex,\n      viewerSpine = _ref.viewerSpine;\n  var dispatch = useDispatch();\n  var hiddenViewSectionRef = useRef(null);\n  useEffect(function () {\n    if (hiddenViewSectionRef) {\n      var viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n      var hiddenViewSectionCurrent = hiddenViewSectionRef.current;\n      var count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n      console.log('AA', hiddenViewSectionCurrent.clientWidth);\n      console.log('BB', hiddenViewSectionCurrent.offsetHeight);\n      console.log('hiddenViewSectionCurrent.clientHeight', hiddenViewSectionCurrent, hiddenViewSectionCurrent.clientHeight, viewerHeight);\n      console.log('dddd', document.documentElement.scrollWidth / 600); // dispatch(actions.setViewerCount({\n      //   index: viewerSpineIndex,\n      //   count: count,\n      // }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [hiddenViewSectionRef]);\n  return __jsx(ViewArticle, {\n    styleProps: {\n      width: 600,\n      height: 908\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(HiddenViewSection, {\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","useDispatch","HiddenViewSection","Contents","ViewArticle","VIEWER_HEIGHT_RATIO","ViewerCount","viewerSpineIndex","viewerSpine","dispatch","hiddenViewSectionRef","viewerHeight","Math","floor","window","innerHeight","hiddenViewSectionCurrent","current","count","clientHeight","console","log","clientWidth","offsetHeight","document","documentElement","scrollWidth","width","height","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,EAA4BC,QAA5B,EAAsCC,WAAtC,QAAyD,qBAAzD;AAEA,SAASC,mBAAT,QAAoC,wBAApC;;AASA,IAAMC,WAA2C,GAAG,SAA9CA,WAA8C,OAE9C;AAAA,MADJC,gBACI,QADJA,gBACI;AAAA,MADcC,WACd,QADcA,WACd;AACJ,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,oBAAoB,GAAGX,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,oBAAJ,EAA0B;AACxB,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,WAAP,IAAsBV,mBAAmB,GAAG,GAA5C,CAAX,CAArB;AADwB,UAEPW,wBAFO,GAEsBN,oBAFtB,CAEhBO,OAFgB;AAGxB,UAAMC,KAAK,GAAGF,wBAAwB,CAACG,YAAzB,GAAwCR,YAAtD;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBL,wBAAwB,CAACM,WAA3C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBL,wBAAwB,CAACO,YAA3C;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDL,wBAArD,EAA+EA,wBAAwB,CAACG,YAAxG,EAAsHR,YAAtH;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,QAAQ,CAACC,eAAT,CAAyBC,WAAzB,GAAuC,GAA3D,EARwB,CAUxB;AACA;AACA;AACA;AACD,KAfa,CAgBhB;;AACC,GAjBQ,EAiBN,CAAChB,oBAAD,CAjBM,CAAT;AAmBA,SACE,MAAC,WAAD;AACE,IAAA,UAAU,EAAE;AACViB,MAAAA,KAAK,EAAE,GADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,MAAC,iBAAD;AAAmB,IAAA,GAAG,EAAElB,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAEmB,MAAAA,MAAM,EAAErB;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANA,CADF;AAaD,CAtCD;;AAwCA,eAAeF,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { HiddenViewSection, Contents, ViewArticle } from '../../styles/viewer';\n\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nimport * as actions from '../../reducers/viewer';\n\ninterface Props {\n  viewerSpineIndex: number;\n  viewerSpine: string;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerSpineIndex, viewerSpine,\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (hiddenViewSectionRef) {\n      const viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n      const { current: hiddenViewSectionCurrent } = hiddenViewSectionRef;\n      const count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n      console.log('AA', hiddenViewSectionCurrent.clientWidth);\n      console.log('BB', hiddenViewSectionCurrent.offsetHeight);\n      console.log('hiddenViewSectionCurrent.clientHeight', hiddenViewSectionCurrent, hiddenViewSectionCurrent.clientHeight, viewerHeight);\n\n      console.log('dddd', document.documentElement.scrollWidth / 600)\n\n      // dispatch(actions.setViewerCount({\n      //   index: viewerSpineIndex,\n      //   count: count,\n      // }));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hiddenViewSectionRef]);\n\n  return (\n    <ViewArticle\n      styleProps={{\n        width: 600,\n        height: 908,\n      }}\n    >\n    <HiddenViewSection ref={hiddenViewSectionRef}>\n      <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n    </HiddenViewSection>\n    </ViewArticle>\n\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}