{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HiddenViewerContainer, HiddenViewSection, Contents } from '../../styles/viewer';\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\nimport * as actions from '../../reducers/viewer';\n\nconst ViewerCount = ({\n  viewerSpineIndex,\n  viewerSpine\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n  useEffect(() => {\n    const viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n    const {\n      current: hiddenViewContainerCurrent\n    } = hiddenViewContainerRef;\n    const {\n      current: hiddenViewSectionCurrent\n    } = hiddenViewSectionRef;\n    const count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n    console.log(hiddenViewContainerCurrent.scrollWidth / 782); // console.log(hiddenViewSectionCurrent.offsetHeight);\n    // console.log(viewerHeight, count);\n\n    dispatch(actions.setViewerCount({\n      index: viewerSpineIndex,\n      count: Math.floor(count)\n    })); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return __jsx(HiddenViewerContainer, {\n    ref: hiddenViewContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(HiddenViewSection, {\n    ref: hiddenViewSectionRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n};\n\nexport default ViewerCount;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerCount.tsx"],"names":["React","useRef","useEffect","useDispatch","HiddenViewerContainer","HiddenViewSection","Contents","VIEWER_HEIGHT_RATIO","actions","ViewerCount","viewerSpineIndex","viewerSpine","dispatch","hiddenViewContainerRef","hiddenViewSectionRef","viewerHeight","Math","floor","window","innerHeight","current","hiddenViewContainerCurrent","hiddenViewSectionCurrent","count","clientHeight","console","log","scrollWidth","setViewerCount","index","__html"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SACEC,qBADF,EACyBC,iBADzB,EAEEC,QAFF,QAGO,qBAHP;AAKA,SAASC,mBAAT,QAAoC,wBAApC;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAOA,MAAMC,WAA2C,GAAG,CAAC;AACnDC,EAAAA,gBADmD;AACjCC,EAAAA;AADiC,CAAD,KAE9C;AACJ,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,sBAAsB,GAAGZ,MAAM,CAAC,IAAD,CAArC;AACA,QAAMa,oBAAoB,GAAGb,MAAM,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,WAAP,IAAsBZ,mBAAmB,GAAG,GAA5C,CAAX,CAArB;AAEA,UAAM;AAAEa,MAAAA,OAAO,EAAEC;AAAX,QAA0CR,sBAAhD;AACA,UAAM;AAAEO,MAAAA,OAAO,EAAEE;AAAX,QAAwCR,oBAA9C;AAEA,UAAMS,KAAK,GAAGD,wBAAwB,CAACE,YAAzB,GAAwCT,YAAtD;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYL,0BAA0B,CAACM,WAA3B,GAAyC,GAArD,EAPc,CAQd;AACA;;AAEAf,IAAAA,QAAQ,CAACJ,OAAO,CAACoB,cAAR,CAAuB;AAC9BC,MAAAA,KAAK,EAAEnB,gBADuB;AAE9Ba,MAAAA,KAAK,EAAEP,IAAI,CAACC,KAAL,CAAWM,KAAX;AAFuB,KAAvB,CAAD,CAAR,CAXc,CAehB;AACC,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SACE,MAAC,qBAAD;AAAuB,IAAA,GAAG,EAAEV,sBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAmB,IAAA,GAAG,EAAEC,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,uBAAuB,EAAE;AAAEgB,MAAAA,MAAM,EAAEnB;AAAV,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAQD,CAjCD;;AAmCA,eAAeF,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  HiddenViewerContainer, HiddenViewSection,\n  Contents,\n} from '../../styles/viewer';\n\nimport { VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nimport * as actions from '../../reducers/viewer';\n\ninterface Props {\n  viewerSpineIndex: number;\n  viewerSpine: string;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerSpineIndex, viewerSpine,\n}) => {\n  const dispatch = useDispatch();\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    const viewerHeight = Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100));\n\n    const { current: hiddenViewContainerCurrent } = hiddenViewContainerRef;\n    const { current: hiddenViewSectionCurrent } = hiddenViewSectionRef;\n\n    const count = hiddenViewSectionCurrent.clientHeight / viewerHeight;\n    console.log(hiddenViewContainerCurrent.scrollWidth / 782);\n    // console.log(hiddenViewSectionCurrent.offsetHeight);\n    // console.log(viewerHeight, count);\n\n    dispatch(actions.setViewerCount({\n      index: viewerSpineIndex,\n      count: Math.floor(count),\n    }));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <HiddenViewerContainer ref={hiddenViewContainerRef}>\n      <HiddenViewSection ref={hiddenViewSectionRef}>\n        <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n      </HiddenViewSection>\n    </HiddenViewerContainer>\n\n  );\n};\n\nexport default ViewerCount;\n"]},"metadata":{},"sourceType":"module"}