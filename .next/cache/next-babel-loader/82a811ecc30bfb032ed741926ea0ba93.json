{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerNcx.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport * as actions from '../../reducers/viewer';\nconst Container = styled.div.withConfig({\n  displayName: \"ViewerNcx__Container\",\n  componentId: \"q4ouf6-0\"\n})([\"position:relative;\"]);\nconst ToggleButton = styled.div.withConfig({\n  displayName: \"ViewerNcx__ToggleButton\",\n  componentId: \"q4ouf6-1\"\n})([\"cursor:pointer;\"]);\nconst NavPointItems = styled.ul.withConfig({\n  displayName: \"ViewerNcx__NavPointItems\",\n  componentId: \"q4ouf6-2\"\n})([\"position:absolute;width:10em;height:30em;left:50%;transform:translateX(-50%);overflow:scroll;list-style-type:none;margin:0;padding:0;border:1px solid \", \";background-color:white;\"], subColor);\nconst NavPointItem = styled.li.withConfig({\n  displayName: \"ViewerNcx__NavPointItem\",\n  componentId: \"q4ouf6-3\"\n})([\"text-align:center;padding:2px;border-bottom:1px solid \", \";cursor:pointer;margin:0;&:nth-last-child(1){border-bottom:initial;}\"], subColor);\n\nconst ViewerNcx = ({\n  ncxItem\n}) => {\n  const {\n    navPoints\n  } = ncxItem;\n  const dispatch = useDispatch();\n  const {\n    0: isShowNcx,\n    1: setIsShowNcx\n  } = useState(false); // useEffect(() => {\n  //   // 목차에서 선택할 때에 pageCount 업데이트 해준다.\n  //   let spineIndex = -1;\n  //   let spinePageCount = 0;\n  //   spines.some((spine, index) => {\n  //     if (spine.id === viewerSpineId) {\n  //       spineIndex = index;\n  //       return true;\n  //     }\n  //     return false;\n  //   });\n  //   if (spineIndex > 0) {\n  //     viewerCountList.some((viewerCount, index) => {\n  //       if (index < spineIndex) {\n  //         spinePageCount += viewerCount.count + 1;\n  //         return false;\n  //       }\n  //       return true;\n  //     });\n  //   }\n  //   dispatch(actions.setViewerPageCount(spinePageCount));\n  // }, [dispatch, spines, viewerCountList, viewerSpineId]);\n\n  const toggleShowNcs = useCallback(() => {\n    setIsShowNcx(!isShowNcx);\n  }, [isShowNcx]);\n  const selectNavPoint = useCallback(point => {\n    setIsShowNcx(false);\n    dispatch(actions.setViewerSpineId(point.spine.id));\n  }, [dispatch]);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(ToggleButton, {\n    onClick: toggleShowNcs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\uBAA9\\uCC28\"), isShowNcx && __jsx(NavPointItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, navPoints.map(navPoint => __jsx(NavPointItem, {\n    onClick: () => selectNavPoint(navPoint),\n    key: navPoint.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, navPoint.label))));\n};\n\nexport default ViewerNcx;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerNcx.tsx"],"names":["React","useState","useCallback","useDispatch","styled","subColor","actions","Container","div","ToggleButton","NavPointItems","ul","NavPointItem","li","ViewerNcx","ncxItem","navPoints","dispatch","isShowNcx","setIsShowNcx","toggleShowNcs","selectNavPoint","point","setViewerSpineId","spine","id","map","navPoint","label"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAIA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,0BAAf;AAIA,MAAMC,YAAY,GAAGL,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,uBAAlB;AAIA,MAAME,aAAa,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA;AAAA,2LAUGN,QAVH,CAAnB;AAcA,MAAMO,YAAY,GAAGR,MAAM,CAACS,EAAV;AAAA;AAAA;AAAA,uIAGWR,QAHX,CAAlB;;AAeA,MAAMS,SAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,OAAtB;AACA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAA4BlB,QAAQ,CAAC,KAAD,CAA1C,CAHiE,CAMjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMmB,aAAa,GAAGlB,WAAW,CAAC,MAAM;AACtCiB,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFgC,EAE9B,CAACA,SAAD,CAF8B,CAAjC;AAIA,QAAMG,cAAc,GAAGnB,WAAW,CAAEoB,KAAD,IAAyB;AAC1DH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,QAAQ,CAACX,OAAO,CAACiB,gBAAR,CAAyBD,KAAK,CAACE,KAAN,CAAYC,EAArC,CAAD,CAAR;AACD,GAHiC,EAG/B,CAACR,QAAD,CAH+B,CAAlC;AAKA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEG,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAKIF,SAAS,IAET,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,SAAS,CAACU,GAAV,CAAeC,QAAD,IACZ,MAAC,YAAD;AACE,IAAA,OAAO,EAAE,MAAMN,cAAc,CAACM,QAAD,CAD/B;AAEE,IAAA,GAAG,EAAEA,QAAQ,CAACC,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,QAAQ,CAACC,KAJZ,CADF,CAFJ,CAPJ,CADF;AAwBD,CAhED;;AAkEA,eAAed,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\n\nimport * as actions from '../../reducers/viewer';\n\nimport { EpubNcxItem, EpubNavPoint } from '../../interfaces/books';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst ToggleButton = styled.div`\n  cursor: pointer;\n`;\n\nconst NavPointItems = styled.ul`\n  position: absolute;\n  width: 10em;\n  height: 30em;\n  left: 50%;\n  transform: translateX(-50%);\n  overflow: scroll;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  border: 1px solid ${subColor};\n  background-color: white;\n`;\n\nconst NavPointItem = styled.li`\n  text-align: center;\n  padding: 2px;\n  border-bottom: 1px solid ${subColor};\n  cursor: pointer;\n  margin: 0;\n  &:nth-last-child(1) {\n    border-bottom: initial;\n  }\n`;\n\ninterface Props {\n  ncxItem?: EpubNcxItem;\n}\n\nconst ViewerNcx: React.FunctionComponent<Props> = ({ ncxItem }) => {\n  const { navPoints } = ncxItem;\n  const dispatch = useDispatch();\n  const [isShowNcx, setIsShowNcx] = useState(false);\n\n\n  // useEffect(() => {\n  //   // 목차에서 선택할 때에 pageCount 업데이트 해준다.\n  //   let spineIndex = -1;\n  //   let spinePageCount = 0;\n  //   spines.some((spine, index) => {\n  //     if (spine.id === viewerSpineId) {\n  //       spineIndex = index;\n  //       return true;\n  //     }\n  //     return false;\n  //   });\n\n  //   if (spineIndex > 0) {\n  //     viewerCountList.some((viewerCount, index) => {\n  //       if (index < spineIndex) {\n  //         spinePageCount += viewerCount.count + 1;\n  //         return false;\n  //       }\n  //       return true;\n  //     });\n  //   }\n\n  //   dispatch(actions.setViewerPageCount(spinePageCount));\n  // }, [dispatch, spines, viewerCountList, viewerSpineId]);\n\n  const toggleShowNcs = useCallback(() => {\n    setIsShowNcx(!isShowNcx);\n  }, [isShowNcx]);\n\n  const selectNavPoint = useCallback((point: EpubNavPoint) => {\n    setIsShowNcx(false);\n    dispatch(actions.setViewerSpineId(point.spine.id));\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ToggleButton onClick={toggleShowNcs}>\n        목차\n      </ToggleButton>\n      {\n        isShowNcx\n        && (\n        <NavPointItems>\n          {\n            navPoints.map((navPoint) => (\n              <NavPointItem\n                onClick={() => selectNavPoint(navPoint)}\n                key={navPoint.label}\n              >\n                {navPoint.label}\n              </NavPointItem>\n            ))\n          }\n        </NavPointItems>\n        )\n      }\n    </Container>\n  );\n};\n\nexport default ViewerNcx;\n"]},"metadata":{},"sourceType":"module"}