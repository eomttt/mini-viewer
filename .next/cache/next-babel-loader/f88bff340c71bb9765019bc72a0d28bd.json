{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ViewerArticle, ViewerSection, ViewerContents } from '../../styles/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\nvar HiddenArticle = styled(ViewerArticle).withConfig({\n  displayName: \"ViewerCount__HiddenArticle\",\n  componentId: \"sc-1llu6pn-0\"\n})([\"overflow:scroll;\"]);\nvar HiddenSection = styled(ViewerSection).withConfig({\n  displayName: \"ViewerCount__HiddenSection\",\n  componentId: \"sc-1llu6pn-1\"\n})([\"visibility:hidden;\"]);\n\nvar ViewerCount = function ViewerCount(_ref) {\n  var viewerWidth = _ref.viewerWidth,\n      viewerHeight = _ref.viewerHeight,\n      viewer = _ref.viewer,\n      viewerStyle = _ref.viewerStyle,\n      setCountCallback = _ref.setCountCallback;\n  var hiddenViewContainerRef = useRef(null);\n  var hiddenViewSectionRef = useRef(null);\n  useEffect(function () {\n    if (viewerWidth) {\n      var hiddenViewContainerCurrent = hiddenViewContainerRef.current;\n\n      var _count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n\n      setCountCallback(_count);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewerWidth]);\n  return __jsx(HiddenArticle, {\n    styleProps: _objectSpread({}, viewerStyle, {\n      width: viewerWidth,\n      height: viewerHeight\n    }),\n    ref: hiddenViewContainerRef\n  }, __jsx(HiddenSection, {\n    styleProps: {\n      width: viewerWidth\n    },\n    ref: hiddenViewSectionRef\n  }, __jsx(ViewerContents, {\n    dangerouslySetInnerHTML: {\n      __html: viewer\n    }\n  })));\n};\n\nexport default ViewerCount;","map":null,"metadata":{},"sourceType":"module"}