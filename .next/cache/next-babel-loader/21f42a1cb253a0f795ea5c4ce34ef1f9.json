{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingColorItem.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { ViewerSettingItem, ViewerSettingLabel } from '../../styles/viewer';\nvar Controller = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Controller\",\n  componentId: \"sc-4drjko-0\"\n})([\"display:flex;margin:auto 0 auto auto;\"]);\nvar Content = styled.div.withConfig({\n  displayName: \"ViewerSettingColorItem__Content\",\n  componentId: \"sc-4drjko-1\"\n})([\"width:1em;height:1em;border:1px solid \", \";border-radius:50%;background-color:\", \" !important;cursor:pointer;margin:0 .2em;\"], function (props) {\n  return props.styleProps.isSelected ? 'black' : \"\".concat(subColor);\n}, function (props) {\n  return props.styleProps.color;\n});\n\nvar ViewerSettingColorItem = function ViewerSettingColorItem(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      colors = _ref.colors,\n      action = _ref.action;\n  var selectColor = useCallback(function (selectedColor) {\n    action(selectedColor);\n  }, [action]);\n  return __jsx(ViewerSettingItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(ViewerSettingLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, label), __jsx(Controller, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, colors.map(function (color) {\n    return __jsx(Content, {\n      key: color,\n      styleProps: {\n        color: color,\n        isSelected: color === value\n      },\n      onClick: function onClick() {\n        return selectColor(color);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default ViewerSettingColorItem;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingColorItem.tsx"],"names":["React","useCallback","styled","subColor","ViewerSettingItem","ViewerSettingLabel","Controller","div","Content","props","styleProps","isSelected","color","ViewerSettingColorItem","label","value","colors","action","selectColor","selectedColor","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SACEC,iBADF,EAEEC,kBAFF,QAGO,qBAHP;AAKA,IAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,6CAAhB;AAKA,IAAMC,OAAO,GAAGN,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,oIAGS,UAACE,KAAD;AAAA,SAAYA,KAAK,CAACC,UAAN,CAAiBC,UAAjB,GAA8B,OAA9B,aAA2CR,QAA3C,CAAZ;AAAA,CAHT,EAKS,UAACM,KAAD;AAAA,SAAWA,KAAK,CAACC,UAAN,CAAiBE,KAA5B;AAAA,CALT,CAAb;;AAiBA,IAAMC,sBAAsD,GAAG,SAAzDA,sBAAyD,OAEzD;AAAA,MADJC,KACI,QADJA,KACI;AAAA,MADGC,KACH,QADGA,KACH;AAAA,MADUC,MACV,QADUA,MACV;AAAA,MADkBC,MAClB,QADkBA,MAClB;AACJ,MAAMC,WAAW,GAAGjB,WAAW,CAAC,UAACkB,aAAD,EAA2B;AACzDF,IAAAA,MAAM,CAACE,aAAD,CAAN;AACD,GAF8B,EAE5B,CAACF,MAAD,CAF4B,CAA/B;AAIA,SACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEE,MAAM,CAACI,GAAP,CAAW,UAACR,KAAD;AAAA,WACT,MAAC,OAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,UAAU,EAAE;AACVA,QAAAA,KAAK,EAALA,KADU;AAEVD,QAAAA,UAAU,EAAEC,KAAK,KAAKG;AAFZ,OAFd;AAME,MAAA,OAAO,EAAE;AAAA,eAAMG,WAAW,CAACN,KAAD,CAAjB;AAAA,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAX,CAFF,CAJF,CADF;AAqBD,CA5BD;;AA8BA,eAAeC,sBAAf","sourcesContent":["import React, { useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\nimport {\n  ViewerSettingItem,\n  ViewerSettingLabel,\n} from '../../styles/viewer';\n\nconst Controller = styled.div`\n  display: flex;\n  margin: auto 0 auto auto;\n`;\n\nconst Content = styled.div`\n  width: 1em;\n  height: 1em;\n  border: 1px solid ${(props) => (props.styleProps.isSelected ? 'black' : `${subColor}`)};  \n  border-radius: 50%;\n  background-color: ${(props) => props.styleProps.color} !important;\n  cursor: pointer;\n  margin: 0 .2em;\n`;\n\ninterface Props {\n  label: string;\n  value: number | string;\n  colors: string[];\n  action: (param: string | number) => void;\n}\n\nconst ViewerSettingColorItem: React.FunctionComponent<Props> = ({\n  label, value, colors, action,\n}) => {\n  const selectColor = useCallback((selectedColor: string) => {\n    action(selectedColor);\n  }, [action]);\n\n  return (\n    <ViewerSettingItem>\n      <ViewerSettingLabel>\n        {label}\n      </ViewerSettingLabel>\n      <Controller>\n        {\n        colors.map((color) => (\n          <Content\n            key={color}\n            styleProps={{\n              color,\n              isSelected: color === value,\n            }}\n            onClick={() => selectColor(color)}\n          />\n        ))\n      }\n      </Controller>\n    </ViewerSettingItem>\n  );\n};\n\nexport default ViewerSettingColorItem;\n"]},"metadata":{},"sourceType":"module"}