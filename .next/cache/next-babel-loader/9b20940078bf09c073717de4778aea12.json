{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/no-danger */\nimport React, { useState, useRef, useCallback, useMemo } from 'react';\nimport { ViewArticle, ViewSection, Contents, LeftButton, RightButton } from '../../styles/viewer';\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nconst Viewer = ({\n  viewerWidth,\n  viewerHeight,\n  beforeWholeColumnCount,\n  wholeColumnCount,\n  spine,\n  viewerSpine,\n  setNextSpine,\n  setPrevSpine\n}) => {\n  const {\n    0: nowViewerCount,\n    1: setNowViewerCount\n  } = useState(0);\n  const hasNextViewer = useMemo(() => nowViewerCount < wholeColumnCount, [nowViewerCount, wholeColumnCount]);\n  const hasPrevViewer = useMemo(() => nowViewerCount > 0, [nowViewerCount]);\n  const viewArticleRef = useRef(null);\n  const clickRight = useCallback(() => {\n    const {\n      current: viewArticleRefCurrent\n    } = viewArticleRef;\n\n    if (hasNextViewer) {\n      setNowViewerCount(nowViewerCount + 1);\n      viewArticleRefCurrent.scrollLeft += viewerWidth + VIEWER_PAGE_GAP;\n    } else {\n      viewArticleRefCurrent.scrollLeft = 0;\n      setNowViewerCount(0);\n      setNextSpine();\n    }\n  }, [hasNextViewer, nowViewerCount, viewerWidth, setNextSpine]);\n  const clickLeft = useCallback(() => {\n    const {\n      current: viewArticleRefCurrent\n    } = viewArticleRef;\n\n    if (hasPrevViewer) {\n      setNowViewerCount(nowViewerCount - 1);\n      viewArticleRefCurrent.scrollLeft -= viewerWidth + VIEWER_PAGE_GAP;\n    } else {\n      console.log('beforeWholeColumnCount', beforeWholeColumnCount);\n      viewArticleRefCurrent.scrollLeft = beforeWholeColumnCount * (viewerWidth + VIEWER_PAGE_GAP);\n      setNowViewerCount(beforeWholeColumnCount);\n      setPrevSpine();\n    }\n  }, [hasPrevViewer, nowViewerCount, viewerWidth, setPrevSpine, beforeWholeColumnCount]);\n  return __jsx(React.Fragment, null, __jsx(ViewArticle, {\n    ref: viewArticleRef,\n    onClick: clickRight,\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(ViewSection, {\n    styleProps: {\n      width: viewerWidth,\n      height: viewerHeight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Contents, {\n    dangerouslySetInnerHTML: {\n      __html: viewerSpine\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), __jsx(LeftButton, {\n    onClick: clickLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Left\"), __jsx(RightButton, {\n    onClick: clickRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Right\"));\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx"],"names":["React","useState","useRef","useCallback","useMemo","ViewArticle","ViewSection","Contents","LeftButton","RightButton","VIEWER_PAGE_GAP","Viewer","viewerWidth","viewerHeight","beforeWholeColumnCount","wholeColumnCount","spine","viewerSpine","setNextSpine","setPrevSpine","nowViewerCount","setNowViewerCount","hasNextViewer","hasPrevViewer","viewArticleRef","clickRight","current","viewArticleRefCurrent","scrollLeft","clickLeft","console","log","width","height","__html"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-danger */\nimport React, {\n  useState, useRef, useCallback, useMemo,\n} from 'react';\n\nimport { EpubSpineItem } from '../../interfaces/books';\n\nimport {\n  ViewArticle, ViewSection, Contents,\n  LeftButton, RightButton,\n} from '../../styles/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  beforeWholeColumnCount: number;\n  wholeColumnCount: number;\n  spine: EpubSpineItem;\n  viewerSpine: string;\n  setNextSpine: () => void;\n  setPrevSpine: () => void;\n}\n\nconst Viewer: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  beforeWholeColumnCount, wholeColumnCount,\n  spine, viewerSpine,\n  setNextSpine, setPrevSpine,\n}) => {\n  const [nowViewerCount, setNowViewerCount] = useState(0);\n\n  const hasNextViewer = useMemo(() => nowViewerCount < wholeColumnCount, [nowViewerCount, wholeColumnCount]);\n  const hasPrevViewer = useMemo(() => nowViewerCount > 0, [nowViewerCount]);\n\n  const viewArticleRef = useRef(null);\n\n  const clickRight = useCallback(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n    if (hasNextViewer) {\n      setNowViewerCount(nowViewerCount + 1);\n      viewArticleRefCurrent.scrollLeft += (viewerWidth + VIEWER_PAGE_GAP);\n    } else {\n      viewArticleRefCurrent.scrollLeft = 0;\n      setNowViewerCount(0);\n      setNextSpine();\n    }\n  }, [hasNextViewer, nowViewerCount, viewerWidth, setNextSpine]);\n\n  const clickLeft = useCallback(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n\n    if (hasPrevViewer) {\n      setNowViewerCount(nowViewerCount - 1);\n      viewArticleRefCurrent.scrollLeft -= (viewerWidth + VIEWER_PAGE_GAP);\n    } else {\n      console.log('beforeWholeColumnCount', beforeWholeColumnCount);\n      viewArticleRefCurrent.scrollLeft = beforeWholeColumnCount * (viewerWidth + VIEWER_PAGE_GAP);\n      setNowViewerCount(beforeWholeColumnCount);\n      setPrevSpine();\n    }\n  }, [hasPrevViewer, nowViewerCount, viewerWidth, setPrevSpine, beforeWholeColumnCount]);\n\n  return (\n    <>\n      <ViewArticle\n        ref={viewArticleRef}\n        onClick={clickRight}\n        styleProps={{\n          width: viewerWidth,\n          height: viewerHeight,\n        }}\n      >\n        <ViewSection\n          styleProps={{\n            width: viewerWidth,\n            height: viewerHeight,\n          }}\n        >\n          <Contents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n        </ViewSection>\n      </ViewArticle>\n      <LeftButton onClick={clickLeft}>Left</LeftButton>\n      <RightButton onClick={clickRight}>Right</RightButton>\n    </>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}