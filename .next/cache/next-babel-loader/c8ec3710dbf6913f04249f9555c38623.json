{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/books/BookList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nconst CoverImage = styled.div`\n  width: 10em;\n  min-height: 12em;\n  border: 1px solid ${subColor};\n  display: inline-block;\n  margin: 1em;\n  & img {\n    width: 100%;\n  }\n`;\n\nconst BookList = ({\n  books\n}) => {\n  const renderBook = useCallback(book => {\n    const {\n      cover,\n      publicPath\n    } = book;\n\n    if (cover) {\n      return __jsx(CoverImage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: `${publicPath}/${book.cover.href}`,\n        alt: \"Cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n\n    return __jsx(CoverImage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }, []);\n  return __jsx(React.Fragment, null, books.map(book => renderBook(book)));\n};\n\nexport default BookList;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/books/BookList.tsx"],"names":["React","useCallback","styled","subColor","CoverImage","div","BookList","books","renderBook","book","cover","publicPath","href","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAIA,MAAMC,UAAU,GAAGF,MAAM,CAACG,GAAI;;;sBAGRF,QAAS;;;;;;CAH/B;;AAeA,MAAMG,QAAwC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9D,QAAMC,UAAU,GAAGP,WAAW,CAAEQ,IAAD,IAAU;AACvC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwBF,IAA9B;;AAEA,QAAIC,KAAJ,EAAW;AACT,aACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAG,GAAEC,UAAW,IAAGF,IAAI,CAACC,KAAL,CAAWE,IAAK,EAA3C;AAA8C,QAAA,GAAG,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;AACD,WAAO,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAX6B,EAW3B,EAX2B,CAA9B;AAaA,SACE,4BAEEL,KAAK,CAACM,GAAN,CAAWJ,IAAD,IAAUD,UAAU,CAACC,IAAD,CAA9B,CAFF,CADF;AAOD,CArBD;;AAuBA,eAAeH,QAAf","sourcesContent":["import React, { useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\n\nimport { EpubBook } from '../../interfaces/books';\n\nconst CoverImage = styled.div`\n  width: 10em;\n  min-height: 12em;\n  border: 1px solid ${subColor};\n  display: inline-block;\n  margin: 1em;\n  & img {\n    width: 100%;\n  }\n`;\n\ninterface Props {\n  books: EpubBook[];\n}\n\nconst BookList: React.FunctionComponent<Props> = ({ books }) => {\n  const renderBook = useCallback((book) => {\n    const { cover, publicPath } = book;\n\n    if (cover) {\n      return (\n        <CoverImage>\n          <img src={`${publicPath}/${book.cover.href}`} alt=\"Cover\" />\n        </CoverImage>\n      );\n    }\n    return <CoverImage />;\n  }, []);\n\n  return (\n    <>\n      {\n      books.map((book) => renderBook(book))\n    }\n    </>\n  );\n};\n\nexport default BookList;\n"]},"metadata":{},"sourceType":"module"}