{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nvar Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-18mi7mi-0\"\n})([\"color:blue\"]);\n\nvar Home = function Home() {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"HOME\");\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nHome.getInitialProps = function _callee2(context) {\n  var req, fs, _require, EpubParser, books;\n\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          req = context.req;\n\n          if (req) {\n            fs = require('fs');\n            _require = require('@ridi/epub-parser'), EpubParser = _require.EpubParser;\n            books = [];\n            fs.readdir('public', function _callee(err, files) {\n              var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file, fileName, parser, book;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      // eslint-disable-next-line no-restricted-syntax\n                      _iteratorNormalCompletion = true;\n                      _didIteratorError = false;\n                      _iteratorError = undefined;\n                      _context.prev = 3;\n                      _iterator = files[Symbol.iterator]();\n\n                    case 5:\n                      if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                        _context.next = 17;\n                        break;\n                      }\n\n                      file = _step.value;\n\n                      if (!file.includes('.epub')) {\n                        _context.next = 14;\n                        break;\n                      }\n\n                      fileName = file.split('.epub')[0];\n                      parser = new EpubParser(file); // eslint-disable-next-line no-await-in-loop\n\n                      _context.next = 12;\n                      return _regeneratorRuntime.awrap(parser.parse({\n                        validatePackage: true,\n                        parseStyle: false,\n                        unzipPath: \"public/epub/\".concat(fileName)\n                      }));\n\n                    case 12:\n                      book = _context.sent;\n                      books.push(book);\n\n                    case 14:\n                      _iteratorNormalCompletion = true;\n                      _context.next = 5;\n                      break;\n\n                    case 17:\n                      _context.next = 23;\n                      break;\n\n                    case 19:\n                      _context.prev = 19;\n                      _context.t0 = _context[\"catch\"](3);\n                      _didIteratorError = true;\n                      _iteratorError = _context.t0;\n\n                    case 23:\n                      _context.prev = 23;\n                      _context.prev = 24;\n\n                      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                        _iterator[\"return\"]();\n                      }\n\n                    case 26:\n                      _context.prev = 26;\n\n                      if (!_didIteratorError) {\n                        _context.next = 29;\n                        break;\n                      }\n\n                      throw _iteratorError;\n\n                    case 29:\n                      return _context.finish(26);\n\n                    case 30:\n                      return _context.finish(23);\n\n                    case 31:\n                      return _context.abrupt(\"return\", books);\n\n                    case 32:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[3, 19, 23, 31], [24,, 26, 30]], Promise);\n            });\n          }\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/pages/index.tsx"],"names":["React","styled","Container","div","Home","getInitialProps","context","req","fs","require","EpubParser","books","readdir","err","files","file","includes","fileName","split","parser","parse","validatePackage","parseStyle","unzipPath","book","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,kBAAf;;AAIA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB;AAAA,SACrB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADqB;AAAA,CAAvB,C,CAMA;;;AACAA,IAAI,CAACC,eAAL,GAAuB,kBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,GADa,GACLD,OADK,CACbC,GADa;;AAErB,cAAIA,GAAJ,EAAS;AACDC,YAAAA,EADC,GACIC,OAAO,CAAC,IAAD,CADX;AAAA,uBAEgBA,OAAO,CAAC,mBAAD,CAFvB,EAECC,UAFD,YAECA,UAFD;AAGDC,YAAAA,KAHC,GAGmB,EAHnB;AAKPH,YAAAA,EAAE,CAACI,OAAH,CAAW,QAAX,EAAqB,iBAAOC,GAAP,EAAYC,KAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnB;AADmB;AAAA;AAAA;AAAA;AAAA,kCAEAA,KAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAERC,sBAAAA,IAFQ;;AAAA,2BAGbA,IAAI,CAACC,QAAL,CAAc,OAAd,CAHa;AAAA;AAAA;AAAA;;AAITC,sBAAAA,QAJS,GAIEF,IAAI,CAACG,KAAL,CAAW,OAAX,EAAoB,CAApB,CAJF;AAKTC,sBAAAA,MALS,GAKA,IAAIT,UAAJ,CAAeK,IAAf,CALA,EAMf;;AANe;AAAA,uDAOcI,MAAM,CAACC,KAAP,CAAa;AACxCC,wBAAAA,eAAe,EAAE,IADuB;AAExCC,wBAAAA,UAAU,EAAE,KAF4B;AAGxCC,wBAAAA,SAAS,wBAAiBN,QAAjB;AAH+B,uBAAb,CAPd;;AAAA;AAOTO,sBAAAA,IAPS;AAafb,sBAAAA,KAAK,CAACc,IAAN,CAAWD,IAAX;;AAbe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,uDAgBZb,KAhBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAArB;AAkBD;;AAzBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AA4BA,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport { NextPageContext, NextPage } from 'next';\n\nimport styled from 'styled-components';\nimport { EpubBook } from '../interfaces/books';\n\nconst Container = styled.div`\n  color: blue\n`;\n\nconst Home: NextPage = () => (\n  <Container>\n    HOME\n  </Container>\n);\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nHome.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req } = context;\n  if (req) {\n    const fs = require('fs');\n    const { EpubParser } = require('@ridi/epub-parser');\n    const books: EpubBook[] = [];\n\n    fs.readdir('public', async (err, files) => {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const file of files) {\n        if (file.includes('.epub')) {\n          const fileName = file.split('.epub')[0];\n          const parser = new EpubParser(file);\n          // eslint-disable-next-line no-await-in-loop\n          const book: EpubBook = await parser.parse({\n            validatePackage: true,\n            parseStyle: false,\n            unzipPath: `public/epub/${fileName}`,\n          });\n\n          books.push(book);\n        }\n      }\n      return books;\n    });\n  }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}