{"ast":null,"code":"var _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingCountItem.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport throttle from 'lodash.throttle';\nimport styled from 'styled-components';\nimport { subColor } from '../../styles';\nimport { ViewerSettingItemStyle, ViewerSettingValueStyle, ViewerSettingLabelStyle } from '../../styles/viewer';\nconst Container = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Container\",\n  componentId: \"sc-1rnr8mc-0\"\n})([\"\", \"\"], ViewerSettingItemStyle);\nconst Label = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Label\",\n  componentId: \"sc-1rnr8mc-1\"\n})([\"\", \"\"], ViewerSettingLabelStyle);\nconst Value = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Value\",\n  componentId: \"sc-1rnr8mc-2\"\n})([\"\", \"\"], ViewerSettingValueStyle);\nconst Controller = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__Controller\",\n  componentId: \"sc-1rnr8mc-3\"\n})([\"display:flex;width:30%;margin:auto 0 auto auto;border:1px solid \", \";border-radius:1em;padding-left:.3em;padding-right:.3em;\"], subColor);\nconst MinusButton = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__MinusButton\",\n  componentId: \"sc-1rnr8mc-4\"\n})([\"width:50%;cursor:pointer;border-right:1px solid \", \"\"], subColor);\nconst PlusButton = styled.div.withConfig({\n  displayName: \"ViewerSettingCountItem__PlusButton\",\n  componentId: \"sc-1rnr8mc-5\"\n})([\"width:50%;cursor:pointer;\"]);\n\nconst ViewerSettingCountItem = ({\n  label,\n  value,\n  valueUnit,\n  minValue,\n  maxValue,\n  action\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: showValue,\n    1: setShowValue\n  } = useState(value);\n  const isIntegerNumber = useCallback(number => number % 1 === 0, []);\n  useEffect(() => {\n    setShowValue(value);\n  }, [value]);\n  const countUpValue = useCallback(() => {\n    const expectedValue = Number(value) + valueUnit;\n\n    if (expectedValue <= maxValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n      setShowValue(newValue);\n      throttle(dispatch(action(newValue)), 500);\n    } else {\n      alert('변경 할 수 있는 최대값 입니다.');\n    }\n  }, [dispatch, action, value, maxValue, valueUnit, isIntegerNumber]);\n  const countDownValue = useCallback(() => {\n    const expectedValue = Number(value) - valueUnit;\n\n    if (expectedValue >= minValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n      setShowValue(newValue);\n      dispatch(action(newValue));\n    } else {\n      alert('변경 할 수 있는 최소값 입니다.');\n    }\n  }, [dispatch, action, value, minValue, valueUnit, isIntegerNumber]);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, label), __jsx(Value, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, showValue), __jsx(Controller, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(MinusButton, {\n    onClick: countDownValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"-\"), __jsx(PlusButton, {\n    onClick: countUpValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"+\")));\n};\n\nexport default ViewerSettingCountItem;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerSettingCountItem.tsx"],"names":["React","useCallback","useState","useEffect","useDispatch","throttle","styled","subColor","ViewerSettingItemStyle","ViewerSettingValueStyle","ViewerSettingLabelStyle","Container","div","Label","Value","Controller","MinusButton","PlusButton","ViewerSettingCountItem","label","value","valueUnit","minValue","maxValue","action","dispatch","showValue","setShowValue","isIntegerNumber","number","countUpValue","expectedValue","Number","newValue","toFixed","alert","countDownValue"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport throttle from 'lodash.throttle';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\nimport {\n  ViewerSettingItemStyle,\n  ViewerSettingValueStyle,\n  ViewerSettingLabelStyle,\n} from '../../styles/viewer';\n\nconst Container = styled.div`\n  ${ViewerSettingItemStyle}\n`;\n\nconst Label = styled.div`\n  ${ViewerSettingLabelStyle}\n`;\n\nconst Value = styled.div`\n  ${ViewerSettingValueStyle}\n`;\n\nconst Controller = styled.div`\n  display: flex;\n  width: 30%;\n  margin: auto 0 auto auto;\n  border: 1px solid ${subColor};\n  border-radius: 1em;\n  padding-left: .3em;\n  padding-right: .3em;\n`;\n\nconst MinusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n  border-right: 1px solid ${subColor}\n`;\n\nconst PlusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n`;\n\ninterface Props {\n  label: string;\n  value: string | number;\n  valueUnit: number;\n  minValue: number;\n  maxValue: number;\n  action: (param: string | number) => void;\n}\n\nconst ViewerSettingCountItem: React.FunctionComponent<Props> = ({\n  label, value, valueUnit,\n  minValue, maxValue, action,\n}) => {\n  const dispatch = useDispatch();\n\n  const [showValue, setShowValue] = useState(value);\n\n  const isIntegerNumber = useCallback((number) => number % 1 === 0, []);\n\n  useEffect(() => {\n    setShowValue(value);\n  }, [value]);\n\n  const countUpValue = useCallback(() => {\n    const expectedValue = Number(value) + valueUnit;\n\n    if (expectedValue <= maxValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n\n      setShowValue(newValue);\n      throttle(dispatch(action(newValue)), 500);\n\n    } else {\n      alert('변경 할 수 있는 최대값 입니다.');\n    }\n  }, [dispatch, action, value, maxValue, valueUnit, isIntegerNumber]);\n\n  const countDownValue = useCallback(() => {\n    const expectedValue = Number(value) - valueUnit;\n\n    if (expectedValue >= minValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n\n      setShowValue(newValue);\n      dispatch(action(newValue));\n    } else {\n      alert('변경 할 수 있는 최소값 입니다.');\n    }\n  }, [dispatch, action, value, minValue, valueUnit, isIntegerNumber]);\n\n  return (\n    <Container>\n      <Label>\n        {label}\n      </Label>\n      <Value>\n        {showValue}\n      </Value>\n      <Controller>\n        <MinusButton onClick={countDownValue}>\n          -\n        </MinusButton>\n        <PlusButton onClick={countUpValue}>\n          +\n        </PlusButton>\n      </Controller>\n    </Container>\n  );\n};\n\nexport default ViewerSettingCountItem;\n"]},"metadata":{},"sourceType":"module"}