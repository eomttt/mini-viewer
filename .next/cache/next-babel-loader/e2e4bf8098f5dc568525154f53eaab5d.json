{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport ViewerCount from './ViewerCount';\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\nvar ViewerPage = function ViewerPage(_ref) {\n  var spines = _ref.spines,\n      viewerSpines = _ref.viewerSpines;\n\n  var _useState = useState(0),\n      viewerWidth = _useState[0],\n      setViewerWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      viewerHeight = _useState2[0],\n      setViewerHeight = _useState2[1];\n\n  var _useState3 = useState([]),\n      spineColumnCountList = _useState3[0],\n      setSpineColumnCountList = _useState3[1];\n\n  var _useState4 = useState(0),\n      nowSpineIndex = _useState4[0],\n      setNowSpineIndex = _useState4[1];\n\n  useEffect(function () {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n  var setNextSpine = useCallback(function () {\n    console.log('Set next spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex + 1);\n  }, [nowSpineIndex]);\n  var setPrevSpine = useCallback(function () {\n    console.log('Set prev spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex - 1);\n  }, [nowSpineIndex]);\n  var setViewerSpineColumnCount = useCallback(function (spineIndex, count) {\n    if (spineColumnCountList.length > 0) {\n      setSpineColumnCountList([]);\n      setSpineColumnCountList([].concat(_toConsumableArray(spineColumnCountList), [{\n        index: spineIndex,\n        count: count\n      }]));\n    }\n  }, [spineColumnCountList]);\n  return __jsx(React.Fragment, null, viewerSpines.map(function (viewerSpine, index) {\n    return __jsx(ViewerCount, {\n      viewerSpine: viewerSpine,\n      viewerSpineIndex: index,\n      viewerColumnCountCallback: setViewerSpineColumnCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default ViewerPage;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/ViewerPage.tsx"],"names":["React","useCallback","useState","useEffect","ViewerCount","VIEWER_WIDTH_RATIO","VIEWER_HEIGHT_RATIO","ViewerPage","spines","viewerSpines","viewerWidth","setViewerWidth","viewerHeight","setViewerHeight","spineColumnCountList","setSpineColumnCountList","nowSpineIndex","setNowSpineIndex","Math","floor","window","innerWidth","innerHeight","setNextSpine","console","log","setPrevSpine","setViewerSpineColumnCount","spineIndex","count","length","index","map","viewerSpine"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AAIA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,wBAAxD;;AAOA,IAAMC,UAA0C,GAAG,SAA7CA,UAA6C,OAA8B;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBACzCP,QAAQ,CAAC,CAAD,CADiC;AAAA,MACxEQ,WADwE;AAAA,MAC3DC,cAD2D;;AAAA,mBAEvCT,QAAQ,CAAC,CAAD,CAF+B;AAAA,MAExEU,YAFwE;AAAA,MAE1DC,eAF0D;;AAAA,mBAIvBX,QAAQ,CAAC,EAAD,CAJe;AAAA,MAIxEY,oBAJwE;AAAA,MAIlDC,uBAJkD;;AAAA,mBAKrCb,QAAQ,CAAC,CAAD,CAL6B;AAAA,MAKxEc,aALwE;AAAA,MAKzDC,gBALyD;;AAO/Ed,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,cAAc,CAACO,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,UAAP,IAAqBhB,kBAAkB,GAAG,GAA1C,CAAX,CAAD,CAAd;AACAQ,IAAAA,eAAe,CAACK,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACE,WAAP,IAAsBhB,mBAAmB,GAAG,GAA5C,CAAX,CAAD,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAMiB,YAAY,GAAGtB,WAAW,CAAC,YAAM;AACrCuB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,aAA9B;AACAC,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GAH+B,EAG7B,CAACA,aAAD,CAH6B,CAAhC;AAKA,MAAMU,YAAY,GAAGzB,WAAW,CAAC,YAAM;AACrCuB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,aAA9B;AACAC,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GAH+B,EAG7B,CAACA,aAAD,CAH6B,CAAhC;AAKA,MAAMW,yBAAyB,GAAG1B,WAAW,CAAC,UAAC2B,UAAD,EAAaC,KAAb,EAAuB;AACnE,QAAIf,oBAAoB,CAACgB,MAArB,GAA8B,CAAlC,EAAqC;AACnCf,MAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAA,MAAAA,uBAAuB,8BAAKD,oBAAL,IAA2B;AAChDiB,QAAAA,KAAK,EAAEH,UADyC;AAEhDC,QAAAA,KAAK,EAALA;AAFgD,OAA3B,GAAvB;AAID;AACF,GAR4C,EAQ1C,CAACf,oBAAD,CAR0C,CAA7C;AAUA,SACE,4BAWIL,YAAY,CAACuB,GAAb,CAAiB,UAACC,WAAD,EAAcF,KAAd;AAAA,WACf,MAAC,WAAD;AACE,MAAA,WAAW,EAAEE,WADf;AAEE,MAAA,gBAAgB,EAAEF,KAFpB;AAGE,MAAA,yBAAyB,EAAEJ,yBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAjB,CAXJ,CADF;AAsBD,CAtDD;;AAwDA,eAAepB,UAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\n\nimport Viewer from './Viewer';\nimport ViewerCount from './ViewerCount';\n\nimport { EpubSpineItem } from '../../interfaces/books';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../../constants/viewer';\n\ninterface Props {\n  spines: EpubSpineItem[];\n  viewerSpines: string[];\n}\n\nconst ViewerPage: React.FunctionComponent<Props> = ({ spines, viewerSpines }) => {\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n\n  const [spineColumnCountList, setSpineColumnCountList] = useState([]);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n  }, []);\n\n  const setNextSpine = useCallback(() => {\n    console.log('Set next spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex + 1);\n  }, [nowSpineIndex]);\n\n  const setPrevSpine = useCallback(() => {\n    console.log('Set prev spine', nowSpineIndex);\n    setNowSpineIndex(nowSpineIndex - 1);\n  }, [nowSpineIndex]);\n\n  const setViewerSpineColumnCount = useCallback((spineIndex, count) => {\n    if (spineColumnCountList.length > 0) {\n      setSpineColumnCountList([]);\n      setSpineColumnCountList([...spineColumnCountList, {\n        index: spineIndex,\n        count,\n      }]);\n    }\n  }, [spineColumnCountList]);\n\n  return (\n    <>\n      {/* <Viewer\n        viewerWidth={viewerWidth}\n        viewerHeight={viewerHeight}\n        nowSpineIndex={nowSpineIndex}\n        spine={spines[nowSpineIndex]}\n        viewerSpine={viewerSpines[nowSpineIndex]}\n        setNextSpine={setNextSpine}\n        setPrevSpine={setPrevSpine}\n      /> */}\n      {\n        viewerSpines.map((viewerSpine, index) => (\n          <ViewerCount\n            viewerSpine={viewerSpine}\n            viewerSpineIndex={index}\n            viewerColumnCountCallback={setViewerSpineColumnCount}\n          />\n        ))\n      }\n    </>\n  );\n};\n\nexport default ViewerPage;\n"]},"metadata":{},"sourceType":"module"}