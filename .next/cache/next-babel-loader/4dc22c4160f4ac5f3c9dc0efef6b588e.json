{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  column-width: \", \"px;\\n  height: \", \"px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nvar ViewSection = styled.section(_templateObject(), function (props) {\n  return props.width;\n}, function (props) {\n  return props.height;\n});\n\nvar Viewer = function Viewer(_ref) {\n  var spines = _ref.spines,\n      viewerSpines = _ref.viewerSpines;\n  useEffect(function () {\n    console.log(window.innerWidth, window.innerHeight);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(ViewSection, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    dangerouslySetInnerHTML: {\n      __html: viewerSpines[1]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) //  eslint-disable-next-line react/no-danger\n  // spines.map((spine, idx) => <ViewSection width={window.innerWidth} dangerouslySetInnerHTML={{ __html: viewerSpines[idx] }} />)\n  );\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/hyuntaeeom/Projects/personal/mini-viewer/components/viewer/Viewer.tsx"],"names":["React","useEffect","styled","ViewSection","section","props","width","height","Viewer","spines","viewerSpines","console","log","window","innerWidth","innerHeight","__html"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAIA,IAAMC,WAAW,GAAGD,MAAM,CAACE,OAAV,oBACC,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAjB;AAAA,CADD,EAEL,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACE,MAAjB;AAAA,CAFK,CAAjB;;AAUA,IAAMC,MAAsC,GAAG,SAAzCA,MAAyC,OAA8B;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC3ET,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,UAAnB,EAA+BD,MAAM,CAACE,WAAtC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,4BAEI,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,MAAM,CAACC,UAA3B;AAAuC,IAAA,MAAM,EAAED,MAAM,CAACE,WAAtD;AAAmE,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEN,YAAY,CAAC,CAAD;AAAtB,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAGI;AACA;AAJJ,GADF;AASD,CAdD;;AAgBA,eAAeF,MAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nimport { EpubSpineItem } from '../../interfaces/books';\n\nconst ViewSection = styled.section`\n  column-width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n`;\n\ninterface Props {\n  spines: EpubSpineItem[];\n  viewerSpines: string[];\n}\n\nconst Viewer: React.FunctionComponent<Props> = ({ spines, viewerSpines }) => {\n  useEffect(() => {\n    console.log(window.innerWidth, window.innerHeight);\n  }, []);\n\n  return (\n    <>\n      {\n        <ViewSection width={window.innerWidth} height={window.innerHeight} dangerouslySetInnerHTML={{ __html: viewerSpines[1] }} />\n        //  eslint-disable-next-line react/no-danger\n        // spines.map((spine, idx) => <ViewSection width={window.innerWidth} dangerouslySetInnerHTML={{ __html: viewerSpines[idx] }} />)\n      }\n    </>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}