{"version":3,"file":"static/development/pages/viewer.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Layout.tsx","webpack:///./components/viewer/ViewerBottom.tsx","webpack:///./components/viewer/ViewerCalculator.tsx","webpack:///./components/viewer/ViewerCount.tsx","webpack:///./components/viewer/ViewerHeader.tsx","webpack:///./components/viewer/ViewerNcx.tsx","webpack:///./components/viewer/ViewerPage.tsx","webpack:///./components/viewer/ViewerSetting.tsx","webpack:///./components/viewer/ViewerSettingColorItem.tsx","webpack:///./components/viewer/ViewerSettingCountItem.tsx","webpack:///./components/viewer/ViewerSlider.tsx","webpack:///./constants/viewer.ts","webpack:///./lib/util.ts","webpack:///./pages/viewer.tsx","webpack:///./reducers/viewer.ts","webpack:///./reducers/viewerSetting.ts","webpack:///./styles/index.ts","webpack:///./styles/viewer.ts","webpack:///external \"@ridi/epub-parser\"","webpack:///external \"axios\"","webpack:///external \"lodash.debounce\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\nimport Head from 'next/head';\n\ninterface Props {\n  styleText?: string;\n}\n\nconst Layout: React.FunctionComponent<Props> = ({ children, styleText }) => (\n  <>\n    <Head>\n      <style>\n        {styleText}\n      </style>\n    </Head>\n    {children}\n  </>\n);\n\nexport default Layout;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport ViewerSlider from './ViewerSlider';\n\nimport { ViewerMenu } from '../../styles/viewer';\n\nconst Container = styled(ViewerMenu)`\n  bottom: 0;\n`;\n\ninterface Props {\n  sliderMaxValue: number;\n}\n\nconst ViewerBottom: React.FunctionComponent<Props> = ({ sliderMaxValue }) => (\n  <Container>\n    <ViewerSlider\n      maxValue={sliderMaxValue}\n    />\n  </Container>\n);\n\nexport default ViewerBottom;\n","import React, { useEffect, useCallback, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport ViewerCount from './ViewerCount';\n\nimport { ReducerState } from '../../interfaces';\nimport { EpubSpineItem } from '../../interfaces/books';\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewers: string[];\n  spines: EpubSpineItem[];\n}\n\nconst PRIVATE_ADD_COUNT_ACTION = 'AddCount';\nconst initialState = {\n  countItems: [],\n};\n\nconst privateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PRIVATE_ADD_COUNT_ACTION: {\n      const data = action.payload;\n      return {\n        ...state,\n        countItems: [...state.countItems, data],\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n\nconst ViewerCalculator: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewers, spines,\n}) => {\n  const dispatch = useDispatch();\n  const [reducerState, dispatchReducer] = useReducer(privateReducer, initialState);\n\n  const {\n    fontSize, widthRatio, lineHeight,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const setCountCallback = useCallback((count: number, index: number) => {\n    const spine = spines[index];\n\n    dispatchReducer({\n      type: PRIVATE_ADD_COUNT_ACTION,\n      payload: {\n        index,\n        count,\n        spineId: spine.id,\n      },\n    });\n  }, [spines]);\n\n  useEffect(() => {\n    const { countItems } = reducerState;\n    if (countItems.length >= spines.length) {\n      dispatch(viewerActions.setViewerCountList(countItems));\n    }\n  }, [dispatch, reducerState, spines]);\n\n  return (\n    <>\n      {\n        viewers.map((viewer, index) => (\n          <ViewerCount\n            key={viewer}\n            viewerWidth={viewerWidth}\n            viewerHeight={viewerHeight}\n            viewer={viewer}\n            viewerStyle={{\n              fontSize,\n              widthRatio,\n              lineHeight,\n            }}\n            setCountCallback={(count) => setCountCallback(count, index)}\n          />\n        ))\n      }\n    </>\n\n  );\n};\n\nexport default ViewerCalculator;\n","import React, { useRef, useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nimport {\n  ViewerArticle,\n  ViewerSection,\n  ViewerContents,\n} from '../../styles/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { ViewerStyle } from '../../interfaces/viewer';\n\nconst HiddenArticle = styled(ViewerArticle)`\n  overflow: scroll;\n`;\n\nconst HiddenSection = styled(ViewerSection)`\n  visibility: hidden;\n`;\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  viewer: string;\n  viewerStyle: ViewerStyle;\n  setCountCallback: (count: number) => void;\n}\n\nconst ViewerCount: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  viewer,\n  viewerStyle, setCountCallback,\n}) => {\n  const hiddenViewContainerRef = useRef(null);\n  const hiddenViewSectionRef = useRef(null);\n\n  useEffect(() => {\n    if (viewerWidth) {\n      const { current: hiddenViewContainerCurrent } = hiddenViewContainerRef;\n      const count = hiddenViewContainerCurrent.scrollWidth / (viewerWidth + VIEWER_PAGE_GAP);\n\n      setCountCallback(count);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewerWidth]);\n\n  return (\n    <HiddenArticle\n      styleProps={{\n        ...viewerStyle,\n        width: viewerWidth,\n        height: viewerHeight,\n      }}\n      ref={hiddenViewContainerRef}\n    >\n      <HiddenSection\n        styleProps={{\n          width: viewerWidth,\n        }}\n        ref={hiddenViewSectionRef}\n      >\n        <ViewerContents dangerouslySetInnerHTML={{ __html: viewer }} />\n      </HiddenSection>\n    </HiddenArticle>\n  );\n};\n\nexport default ViewerCount;\n","import React, { useEffect, useState, useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport ViewerNcx from './ViewerNcx';\nimport ViewerSetting from './ViewerSetting';\n\nimport { EpubNcxItem, EpubAuthor } from '../../interfaces/books';\n\nimport { titleFontSize } from '../../styles';\nimport { ViewerMenu } from '../../styles/viewer';\n\nconst Container = styled(ViewerMenu)`\n  top: 0;\n`;\n\nconst Info = styled.div`\n  max-width: 50%;\n  white-space: nowrap;\n  vertical-align: top;\n  margin: auto auto auto 7em;\n`;\n\nconst Title = styled.div`\n  width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: inline-block;\n  font-size: ${titleFontSize};\n`;\n\nconst Author = styled.div`\n  width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst HeaderNcx = styled.div`\n  margin: auto 7em auto auto;\n`;\n\nconst HeaderSetting = styled.div`\n  margin: auto 7em auto 0;\n`;\n\ninterface Props {\n  titles: string[];\n  authors: EpubAuthor[];\n  ncxItem: EpubNcxItem;\n}\n\nconst ViewerHeader: React.FunctionComponent<Props> = ({ titles, authors, ncxItem }) => {\n  const getString = useCallback((items) => items.reduce((acc, cur, index) => `${acc}${index > 0 ? ', ' : ''}${cur}`, ''), []);\n\n  return (\n    <Container>\n      <Info>\n        <Title>\n          {getString(titles)}\n        </Title>\n        <Author>\n          {getString(authors.map((authorItem) => authorItem.name))}\n        </Author>\n      </Info>\n      <HeaderNcx>\n        <ViewerNcx ncxItem={ncxItem} />\n      </HeaderNcx>\n      <HeaderSetting>\n        <ViewerSetting />\n      </HeaderSetting>\n    </Container>\n  );\n};\n\nexport default ViewerHeader;\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport { subColor, defaultColor } from '../../styles';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport { ReducerState } from '../../interfaces';\nimport { EpubNcxItem, EpubNavPoint } from '../../interfaces/books';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst ToggleButton = styled.div`\n  cursor: pointer;\n`;\n\nconst NavPointItems = styled.ul`\n  position: absolute;\n  width: 10em;\n  height: 30em;\n  left: 50%;\n  transform: translateX(-50%);\n  overflow: scroll;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  border: 1px solid ${subColor};\n  background-color: ${defaultColor};\n`;\n\nconst NavPointItem = styled.li`\n  text-align: center;\n  padding: 2px;\n  border-bottom: 1px solid ${subColor};\n  cursor: pointer;\n  margin: 0;\n  &:nth-last-child(1) {\n    border-bottom: initial;\n  }\n`;\n\ninterface Props {\n  ncxItem?: EpubNcxItem;\n}\n\nconst ViewerNcx: React.FunctionComponent<Props> = ({ ncxItem }) => {\n  const { navPoints } = ncxItem;\n\n  const dispatch = useDispatch();\n  const { viewerCountList } = useSelector((state: ReducerState) => state.viewer);\n  const [isShowNcx, setIsShowNcx] = useState(false);\n\n  const setViewerPage = useCallback((viewerSpineId: string) => {\n    // 목차에서 선택할 때에 pageCount 업데이트 해준다.\n    let spineIndex = -1;\n    let spinePageCount = 0;\n    viewerCountList.some((viewrCount, index) => {\n      if (viewrCount.spineId === viewerSpineId) {\n        spineIndex = index;\n        return true;\n      }\n      return false;\n    });\n\n    if (spineIndex > -1) {\n      viewerCountList.some((viewerCount, index) => {\n        if (index < spineIndex) {\n          spinePageCount += viewerCount.count;\n          return false;\n        }\n        return true;\n      });\n      dispatch(viewerActions.setViewerPageCount(spinePageCount));\n    }\n  }, [dispatch, viewerCountList]);\n\n  const toggleShowNcs = useCallback(() => {\n    setIsShowNcx(!isShowNcx);\n  }, [isShowNcx]);\n\n  const selectNavPoint = useCallback((point: EpubNavPoint) => {\n    setIsShowNcx(false);\n    setViewerPage(point.spine.id);\n  }, [setViewerPage]);\n\n  return (\n    <Container>\n      <ToggleButton onClick={toggleShowNcs}>\n        목차\n      </ToggleButton>\n      {\n        isShowNcx\n        && (\n        <NavPointItems>\n          {\n            navPoints.map((navPoint) => (\n              <NavPointItem\n                onClick={() => selectNavPoint(navPoint)}\n                key={navPoint.label}\n              >\n                {navPoint.label}\n              </NavPointItem>\n            ))\n          }\n        </NavPointItems>\n        )\n      }\n    </Container>\n  );\n};\n\nexport default ViewerNcx;\n","\n/* eslint-disable react/no-danger */\nimport React, {\n  useState, useRef, useCallback, useEffect,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport {\n  ViewerButton,\n  ViewerArticle,\n  ViewerSection,\n  ViewerContents,\n} from '../../styles/viewer';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport { VIEWER_PAGE_GAP } from '../../constants/viewer';\n\nimport { ReducerState } from '../../interfaces';\n\nconst Article = styled(ViewerArticle)`\n  overflow: hidden;\n  text-align: initial;\n`;\n\nconst RightButton = styled(ViewerButton)`\n  right: 2em;\n`;\n\nconst LeftButton = styled(ViewerButton)`\n  left: 2em;\n`;\n\ninterface Props {\n  viewerWidth: number;\n  viewerHeight: number;\n  pageColumnOffset: number;\n  viewerSpine: string;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n}\n\nconst ViewerPage: React.FunctionComponent<Props> = ({\n  viewerWidth, viewerHeight,\n  pageColumnOffset,\n  viewerSpine,\n  isFirstPage, isLastPage,\n}) => {\n  const dispatch = useDispatch();\n\n  const [nowViewerCount, setNowViewerCount] = useState(0);\n\n  const {\n    fontSize, widthRatio, lineHeight,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const viewArticleRef = useRef(null);\n\n  useEffect(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n    viewArticleRefCurrent.scrollLeft = pageColumnOffset * (viewerWidth + VIEWER_PAGE_GAP);\n    setNowViewerCount(pageColumnOffset);\n  }, [viewerSpine, pageColumnOffset, viewerWidth]);\n\n  const clickRight = useCallback(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n\n    setNowViewerCount(nowViewerCount + 1);\n    viewArticleRefCurrent.scrollLeft += (viewerWidth + VIEWER_PAGE_GAP);\n    dispatch(viewerActions.setCountUpViewerPageCount());\n  }, [dispatch, nowViewerCount, viewerWidth]);\n\n  const clickLeft = useCallback(() => {\n    const { current: viewArticleRefCurrent } = viewArticleRef;\n    setNowViewerCount(nowViewerCount - 1);\n    viewArticleRefCurrent.scrollLeft -= (viewerWidth + VIEWER_PAGE_GAP);\n    dispatch(viewerActions.setCountDownViewerPageCount());\n  }, [dispatch, nowViewerCount, viewerWidth]);\n\n  return (\n    <>\n      <Article\n        ref={viewArticleRef}\n        onClick={clickRight}\n        styleProps={{\n          widthRatio,\n          fontSize,\n          lineHeight,\n          width: viewerWidth,\n          height: viewerHeight,\n        }}\n      >\n        <ViewerSection\n          styleProps={{\n            widthRatio,\n            fontSize,\n            lineHeight,\n            width: viewerWidth,\n            height: viewerHeight,\n          }}\n        >\n          <ViewerContents dangerouslySetInnerHTML={{ __html: viewerSpine }} />\n        </ViewerSection>\n      </Article>\n      {!isFirstPage && <LeftButton onClick={clickLeft}>Left</LeftButton>}\n      {!isLastPage && <RightButton onClick={clickRight}>Right</RightButton>}\n    </>\n  );\n};\n\nexport default ViewerPage;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport ViewerSettingCountItem from './ViewerSettingCountItem';\nimport ViewerSettingColorItem from './ViewerSettingColorItem';\n\nimport * as settingActions from '../../reducers/viewerSetting';\n\nimport { subColor, defaultColor } from '../../styles';\n\nimport {\n  SETTING_ITEM_KEY,\n  SETTING_ITEM_LABEL,\n  SETTING_ITEM_UNIT,\n  FONT_SIZE_RANGE, WIDTH_RATIO_RANGE, LINE_HEIGHT_RANGE, BACKGROUND_COLORS,\n} from '../../constants/viewer';\n\nimport { ReducerState } from '../../interfaces';\nimport { SettingItem } from '../../interfaces/viewer';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst ToggleButton = styled.div`\n  cursor: pointer;\n`;\n\nconst SettingItems = styled.ul`\n  position: absolute;\n  width: 15em;\n  left: 50%;\n  transform: translateX(-50%);\n  overflow: scroll;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  border: 1px solid ${subColor};\n  background-color: ${defaultColor};\n`;\n\nconst ViewerSetting: React.FunctionComponent = () => {\n  const {\n    fontSize, widthRatio, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n  const dispatch = useDispatch();\n\n  const [isShowSetting, setIsShowSetting] = useState(false);\n  const [settingItems, setSettingItems] = useState<SettingItem[]>([]);\n\n  useEffect(() => {\n    setSettingItems([\n      {\n        label: SETTING_ITEM_LABEL.FONT_SIZE,\n        key: SETTING_ITEM_KEY.FONT_SIZE,\n        value: fontSize,\n        valueUnit: SETTING_ITEM_UNIT.FONT_SIZE,\n        minValue: FONT_SIZE_RANGE.MIN,\n        maxValue: FONT_SIZE_RANGE.MAX,\n        action: (value: number) => {\n          dispatch(settingActions.setViewerSettingFontSize(value));\n        },\n      }, {\n        label: SETTING_ITEM_LABEL.WIDTH_RATIO,\n        key: SETTING_ITEM_KEY.WIDTH_RATIO,\n        value: widthRatio,\n        valueUnit: SETTING_ITEM_UNIT.WIDTH,\n        minValue: WIDTH_RATIO_RANGE.MIN,\n        maxValue: WIDTH_RATIO_RANGE.MAX,\n        action: (value: number) => {\n          dispatch(settingActions.setViewerSettingWidthRatio(value));\n        },\n      }, {\n        label: SETTING_ITEM_LABEL.LINE_HEIGHT,\n        key: SETTING_ITEM_KEY.LINE_HEIGHT,\n        value: lineHeight,\n        valueUnit: SETTING_ITEM_UNIT.LINE_HEIGHT,\n        minValue: LINE_HEIGHT_RANGE.MIN,\n        maxValue: LINE_HEIGHT_RANGE.MAX,\n        action: (value: number) => {\n          dispatch(settingActions.setViewerSettingLineHeight(value));\n        },\n      }, {\n        label: SETTING_ITEM_LABEL.BACKGROUND_COLOR,\n        key: SETTING_ITEM_KEY.BACKGROUND_COLOR,\n        value: backgroundColor,\n        colors: BACKGROUND_COLORS,\n        action: (value: string) => {\n          dispatch(settingActions.setViewerSettingBackgroundColor(value));\n        },\n      },\n    ]);\n  }, [dispatch, fontSize, widthRatio, lineHeight, backgroundColor]);\n\n  const toggleShowNcs = useCallback(() => {\n    setIsShowSetting(!isShowSetting);\n  }, [isShowSetting]);\n\n  const renderSettingItem = useCallback((settingItem: SettingItem) => {\n    const {\n      key, label, value, valueUnit, action, minValue, maxValue, colors,\n    } = settingItem;\n\n    if (colors) {\n      return (\n        <ViewerSettingColorItem\n          key={key}\n          label={label}\n          value={value}\n          colors={colors}\n          action={action}\n        />\n      );\n    }\n    return (\n      <ViewerSettingCountItem\n        key={key}\n        label={label}\n        value={value}\n        valueUnit={valueUnit}\n        minValue={minValue}\n        maxValue={maxValue}\n        action={action}\n      />\n    );\n  }, []);\n\n  return (\n    <Container>\n      <ToggleButton onClick={toggleShowNcs}>\n        설정\n      </ToggleButton>\n      {\n        isShowSetting\n        && (\n        <SettingItems>\n          {\n            settingItems.map((settingItem) => renderSettingItem(settingItem))\n          }\n        </SettingItems>\n        )\n      }\n    </Container>\n  );\n};\n\nexport default ViewerSetting;\n","import React, { useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport { subColor } from '../../styles';\nimport {\n  ViewerSettingItem,\n  ViewerSettingLabel,\n} from '../../styles/viewer';\n\nconst Controller = styled.div`\n  display: flex;\n  margin: auto 0 auto auto;\n`;\n\nconst Content = styled.div`\n  width: 1em;\n  height: 1em;\n  border: 1px solid ${(props) => (props.styleProps.isSelected ? 'black' : `${subColor}`)};  \n  border-radius: 50%;\n  background-color: ${(props) => props.styleProps.color} !important;\n  cursor: pointer;\n  margin: 0 .2em;\n`;\n\ninterface Props {\n  label: string;\n  value: number | string;\n  colors: string[];\n  action: (param: string | number) => void;\n}\n\nconst ViewerSettingColorItem: React.FunctionComponent<Props> = ({\n  label, value, colors, action,\n}) => {\n  const selectColor = useCallback((selectedColor: string) => {\n    action(selectedColor);\n  }, [action]);\n\n  return (\n    <ViewerSettingItem>\n      <ViewerSettingLabel>\n        {label}\n      </ViewerSettingLabel>\n      <Controller>\n        {\n        colors.map((color) => (\n          <Content\n            key={color}\n            styleProps={{\n              color,\n              isSelected: color === value,\n            }}\n            onClick={() => selectColor(color)}\n          />\n        ))\n      }\n      </Controller>\n    </ViewerSettingItem>\n  );\n};\n\nexport default ViewerSettingColorItem;\n","import React, { useCallback, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport debounce from 'lodash.debounce';\n\nimport { subColor } from '../../styles';\nimport {\n  ViewerSettingItem,\n  ViewerSettingLabel,\n  ViewerSettingValue,\n} from '../../styles/viewer';\n\nconst Controller = styled.div`\n  display: flex;\n  width: 30%;\n  margin: auto 0 auto auto;\n  border: 1px solid ${subColor};\n  border-radius: 1em;\n  padding-left: .3em;\n  padding-right: .3em;\n`;\n\nconst MinusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n  border-right: 1px solid ${subColor}\n`;\n\nconst PlusButton = styled.div`\n  width: 50%;\n  cursor: pointer;\n`;\n\ninterface Props {\n  label: string;\n  value: string | number;\n  valueUnit: number;\n  minValue: number;\n  maxValue: number;\n  action: (param: string | number) => void;\n}\n\nconst ViewerSettingCountItem: React.FunctionComponent<Props> = ({\n  label, value, valueUnit,\n  minValue, maxValue, action,\n}) => {\n  const [showValue, setShowValue] = useState(value);\n\n  const isIntegerNumber = useCallback((number) => number % 1 === 0, []);\n  const debounceAction = useCallback(debounce(action, 400), [action]);\n\n  const countUpValue = useCallback(() => {\n    const expectedValue = Number(showValue) + valueUnit;\n\n    if (expectedValue <= maxValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n\n      setShowValue(newValue);\n      debounceAction(newValue);\n    } else {\n      alert('변경 할 수 있는 최대값 입니다.');\n    }\n  }, [debounceAction, showValue, maxValue, valueUnit, isIntegerNumber]);\n\n  const countDownValue = useCallback(() => {\n    const expectedValue = Number(showValue) - valueUnit;\n\n    if (expectedValue >= minValue) {\n      const newValue = isIntegerNumber(expectedValue) ? expectedValue : expectedValue.toFixed(1);\n\n      setShowValue(newValue);\n      debounceAction(newValue);;\n    } else {\n      alert('변경 할 수 있는 최소값 입니다.');\n    }\n  }, [debounceAction, showValue, minValue, valueUnit, isIntegerNumber]);\n\n  return (\n    <ViewerSettingItem>\n      <ViewerSettingLabel>\n        {label}\n      </ViewerSettingLabel>\n      <ViewerSettingValue>\n        {showValue}\n      </ViewerSettingValue>\n      <Controller>\n        <MinusButton onClick={countDownValue}>\n          -\n        </MinusButton>\n        <PlusButton onClick={countUpValue}\n        >\n          +\n        </PlusButton>\n      </Controller>\n    </ViewerSettingItem>\n  );\n};\n\nexport default ViewerSettingCountItem;\n","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport * as viewerActions from '../../reducers/viewer';\n\nimport { VIEWER_SLIDER_LEN_RATIO } from '../../constants/viewer';\n\nimport { ReducerState } from '../../interfaces';\n\nconst Container = styled.div`\n  width: 100%;\n  margin: auto 5%;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst Input = styled.input`\n  margin-left: ${(100 - VIEWER_SLIDER_LEN_RATIO) / 2}%;\n  width: ${VIEWER_SLIDER_LEN_RATIO}%;\n  cursor: grab;\n`;\n\nconst Marker = styled.div`\n  margin-left: ${(100 - VIEWER_SLIDER_LEN_RATIO) / 2}%;\n`;\n\ninterface Props {\n  maxValue: number;\n}\n\nconst ViewerSlider: React.FunctionComponent<Props> = ({ maxValue }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(0);\n\n  const { viewerPageCount } = useSelector((state: ReducerState) => state.viewer);\n\n  const hasMaxValue = useMemo(() => !!maxValue, [maxValue]);\n\n  useEffect(() => {\n    setValue(viewerPageCount);\n  }, [viewerPageCount]);\n\n  const onChangeSlider = useCallback((e) => {\n    dispatch(viewerActions.setViewerPageCount(Number(e.target.value)));\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {\n        hasMaxValue\n        && (\n        <>\n          <Marker>\n            {`${value}/${maxValue}`}\n          </Marker>\n          <Input type=\"range\" min=\"0\" max={maxValue} value={value} onChange={onChangeSlider} />\n        </>\n        )\n      }\n    </Container>\n  );\n};\n\nexport default ViewerSlider;\n","export const VIEWER_PATH_NAME = '/viewer';\n\nexport const VIEWER_WIDTH_RATIO = 70;\nexport const VIEWER_HEIGHT_RATIO = 85;\n\nexport const VIEWER_PAGE_GAP = 0;\nexport const VIEWER_SLIDER_LEN_RATIO = 90;\n\nexport const SETTING_ITEM_KEY = {\n  FONT_SIZE: 'fontSize',\n  WIDTH_RATIO: 'widthRatio',\n  LINE_HEIGHT: 'lineHeight',\n  BACKGROUND_COLOR: 'backgroundColor',\n};\n\nexport const SETTING_ITEM_LABEL = {\n  FONT_SIZE: '글자 크기 (em)',\n  WIDTH_RATIO: '문단 너비 (%)',\n  LINE_HEIGHT: '줄 간격 (em)',\n  BACKGROUND_COLOR: '배경색',\n};\n\nexport const SETTING_ITEM_UNIT = {\n  FONT_SIZE: 0.1,\n  WIDTH: 10,\n  LINE_HEIGHT: 1,\n};\n\nexport const FONT_SIZE_RANGE = {\n  MIN: 1,\n  MAX: 2,\n};\n\nexport const WIDTH_RATIO_RANGE = {\n  MIN: 50,\n  MAX: 100,\n};\n\nexport const LINE_HEIGHT_RANGE = {\n  MIN: 1.5,\n  MAX: 5,\n};\n\nexport const BACKGROUND_COLORS = ['white', '#fff599', '#f7a0ac'];\n","import axios from 'axios';\nimport { EpubBook } from '../interfaces/books';\n\nexport const getBook = async (parser, {\n  unzipPath,\n}): Promise<EpubBook | null> => {\n  try {\n    const book: EpubBook = await parser.parse({\n      validatePackage: true,\n      parseStyle: false,\n      unzipPath,\n    });\n\n    return book;\n  } catch (error) {\n    console.log('Get book error', error);\n  }\n\n  return null;\n};\n\nexport const getViewers = async (parser, {\n  bookSpines,\n  publicPath,\n}): Promise<string[]> => {\n  try {\n    const viewers = await parser.readItems(bookSpines, {\n      force: true,\n      extractBody: true,\n      serializedAnchor: true,\n      ignoreScript: true,\n      basePath: publicPath,\n    });\n\n    return viewers;\n  } catch (error) {\n    console.log('Get viewers error', error);\n  }\n\n  return [];\n};\n\nexport const getBookInfo = async (EpubParser, {\n  epubFile,\n  epubPath,\n}): Promise<{\n  book: EpubBook | null;\n  viewers: string[];\n}> => {\n  const parser = new EpubParser(`public/${epubFile}.epub`);\n  try {\n    const book: EpubBook = await getBook(parser, {\n      unzipPath: `public/${epubPath}`,\n    });\n\n    if (book) {\n      const viewers = await getViewers(parser, {\n        bookSpines: book.spines,\n        publicPath: epubPath,\n      });\n\n      return {\n        book,\n        viewers,\n      };\n    }\n  } catch (error) {\n    console.log('Get book info error', error);\n  }\n\n  return {\n    book: null,\n    viewers: [],\n  };\n};\n\nexport const isEpubFile = (fileName) => {\n  return fileName.includes('.epub');\n};\n\nexport const getStyleText = async (publicPath, styles) => {\n  const res = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (const style of styles) {\n    try {\n      const data = await axios.get(`${publicPath}/${style.href}`);\n      res.push(data.data);\n    } catch (error) {\n      console.log('Get style text error', error);\n    }\n  }\n\n  return res.join('');\n};\n","import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NextPageContext, NextPage } from 'next';\n\n\nimport styled from 'styled-components';\n\nimport ViewerBottom from '../components/viewer/ViewerBottom';\nimport ViewerCalculator from '../components/viewer/ViewerCalculator';\nimport ViewerHeader from '../components/viewer/ViewerHeader';\nimport ViewerPage from '../components/viewer/ViewerPage';\n\nimport * as viewerActions from '../reducers/viewer';\n\nimport { getBookInfo, getStyleText } from '../lib/util';\n\nimport { VIEWER_WIDTH_RATIO, VIEWER_HEIGHT_RATIO } from '../constants/viewer';\n\nimport { ReducerState } from '../interfaces';\nimport { EpubBook } from '../interfaces/books';\nimport Layout from '../components/Layout';\n\nconst Container = styled.div`\n  padding: ${(100 - VIEWER_HEIGHT_RATIO) / 2}% ${(100 - VIEWER_WIDTH_RATIO) / 2}%;\n  height: ${(props) => props.styleProps.height}px;\n  background-color: ${(props) => props.styleProps.backgroundColor};\n  text-align: center;\n  overflow: hidden;\n`;\n\ninterface Props {\n  book: EpubBook;\n  viewers: string[];\n  styleText: string;\n}\n\nconst Viewer: NextPage<Props> = ({ book, viewers, styleText }) => {\n  const {\n    spines, titles, ncx, contributors,\n  } = book;\n  const dispatch = useDispatch();\n\n  const [viewerWidth, setViewerWidth] = useState(0);\n  const [viewerHeight, setViewerHeight] = useState(0);\n  const [nowSpineIndex, setNowSpineIndex] = useState(0);\n  const [wholePageCount, setWholePageCount] = useState(0);\n\n  const {\n    viewerCountList, viewerPageCount,\n  } = useSelector((state: ReducerState) => state.viewer);\n  const {\n    fontSize, widthRatio, lineHeight, backgroundColor,\n  } = useSelector((state: ReducerState) => state.viewerSetting);\n\n  const isAnalyzedSpine = useMemo(() => viewerCountList.length >= viewers.length, [viewerCountList, viewers]);\n  const isFirstPage = useMemo(() => viewerPageCount === 0, [viewerPageCount]);\n  const isLastPage = useMemo(() => viewerPageCount === wholePageCount, [viewerPageCount, wholePageCount]);\n  const selectedSpineIndex = useMemo(() => {\n    let spineIndex = 0;\n    let accurateCount = 0;\n    viewerCountList.some((viewerCount) => {\n      if (accurateCount + viewerCount.count > viewerPageCount) {\n        spineIndex = viewerCount.index;\n        return true;\n      }\n      accurateCount += viewerCount.count;\n      return false;\n    });\n    return spineIndex;\n  }, [viewerPageCount, viewerCountList]);\n  const pageColumnOffset = useMemo(() => {\n    let columnOffset = viewerPageCount;\n    viewerCountList.some((viewerCount, index) => {\n      if (index < nowSpineIndex) {\n        columnOffset -= (viewerCount.count);\n        return false;\n      }\n      return true;\n    });\n    return columnOffset;\n  }, [viewerCountList, viewerPageCount, nowSpineIndex]);\n\n  useEffect(() => {\n    setViewerWidth(Math.floor(window.innerWidth * (VIEWER_WIDTH_RATIO / 100)));\n    setViewerHeight(Math.floor(window.innerHeight * (VIEWER_HEIGHT_RATIO / 100)));\n    return () => {\n      dispatch(viewerActions.initViewerState());\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    console.log('Now spine index', selectedSpineIndex);\n    setNowSpineIndex(selectedSpineIndex);\n  }, [selectedSpineIndex]);\n\n  useEffect(() => {\n    if (isAnalyzedSpine) {\n      console.log('Set whole page count');\n      const pageCount = viewerCountList.reduce((acc, cur) => acc + cur.count, 0);\n      setWholePageCount(pageCount - 1);\n    }\n  }, [isAnalyzedSpine, viewerCountList]);\n\n  useEffect(() => {\n    console.log('New style');\n    dispatch(viewerActions.initViewerState());\n  }, [dispatch, fontSize, lineHeight, widthRatio]);\n\n  const calculateViewerWidth = useCallback(\n    (nowWidth, newRatio) => Math.floor(Number(nowWidth) * (Number(newRatio) / 100)),\n    [],\n  );\n\n  return (\n    <Layout\n      styleText={styleText}\n    >\n      <ViewerHeader\n        titles={titles}\n        authors={contributors}\n        ncxItem={ncx}\n      />\n      <Container\n        styleProps={{\n          height: viewerHeight,\n          backgroundColor,\n        }}\n      >\n        {isAnalyzedSpine\n        && (\n        <ViewerPage\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          pageColumnOffset={pageColumnOffset}\n          viewerSpine={viewers[nowSpineIndex]}\n          isFirstPage={isFirstPage}\n          isLastPage={isLastPage}\n        />\n        )}\n        {!isAnalyzedSpine\n        && (\n        <ViewerCalculator\n          viewerWidth={calculateViewerWidth(viewerWidth, widthRatio)}\n          viewerHeight={viewerHeight}\n          spines={spines}\n          viewers={viewers}\n        />\n        )}\n      </Container>\n      <ViewerBottom\n        sliderMaxValue={wholePageCount}\n      />\n    </Layout>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nViewer.getInitialProps = async (context: NextPageContext<any>): Promise<any> => {\n  const { req, store, query } = context;\n  const { bookPath } = query;\n  const queryPath = decodeURI(String(bookPath || 'epub/jikji'));\n\n  if (req) {\n    // Server side render\n    const { EpubParser } = require('@ridi/epub-parser');\n    const [, fileName] = queryPath.split('/');\n    const publicPath = `http://${req.headers.host}/${queryPath}`;\n    try {\n      const { book, viewers } = await getBookInfo(EpubParser, {\n        epubFile: fileName,\n        epubPath: queryPath,\n      });\n      const styleText = await getStyleText(publicPath, book.styles);\n      return {\n        book,\n        viewers,\n        styleText,\n      };\n    } catch (error) {\n      console.log('Error', error);\n    }\n  } else {\n    // Client side render\n    const { books }: ReducerState = store.getState();\n    const { list } = books;\n\n    let selectedBookInfo = list[0];\n\n    list.some((bookInfo) => {\n      if (bookInfo.publicPath === queryPath) {\n        selectedBookInfo = bookInfo;\n        return true;\n      }\n      return false;\n    });\n\n    const { book, viewers, publicPath } = selectedBookInfo;\n    const styleText = await getStyleText(publicPath, book.styles);\n\n    return {\n      book,\n      viewers,\n      styleText,\n    };\n  }\n};\n\nexport default Viewer;\n","import { ReducerAction } from '../interfaces';\nimport { ViewerState, ViewerCount } from '../interfaces/viewer';\n\nexport const initialState: ViewerState = {\n  viewerCountList: [],\n  viewerPageCount: 0,\n};\n\n// Action types\nexport const INIT_VIEWER_STATE = 'viewer/INIT_VIEWER_STATE';\nexport const SET_VIEWER_COLUMN_COUNT_LIST = 'viewer/SET_VIEWER_COLUMN_COUNT_LIST';\n\nexport const SET_VIEWER_PAGE_COUNT = 'viewer/SET_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_UP_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_UP_VIEWER_PAGE_COUNT';\nexport const SET_COUNT_DOWN_VIEWER_PAGE_COUNT = 'viewer/SET_COUNT_DOWN_VIEWER_PAGE_COUNT';\n\n// Action creators\nexport const initViewerState = () => ({\n  type: INIT_VIEWER_STATE,\n});\n\nexport const setViewerCountList = (countList: ViewerCount[]) => ({\n  type: SET_VIEWER_COLUMN_COUNT_LIST,\n  payload: {\n    countList,\n  },\n});\n\nexport const setViewerPageCount = (pageCount: number) => ({\n  type: SET_VIEWER_PAGE_COUNT,\n  payload: {\n    pageCount,\n  },\n});\n\nexport const setCountUpViewerPageCount = () => ({\n  type: SET_COUNT_UP_VIEWER_PAGE_COUNT,\n});\n\nexport const setCountDownViewerPageCount = () => ({\n  type: SET_COUNT_DOWN_VIEWER_PAGE_COUNT,\n});\n\nexport default (state = initialState, action: ReducerAction): ViewerState => {\n  const { type, payload } = action;\n  switch (type) {\n    case INIT_VIEWER_STATE: {\n      return {\n        ...state,\n        viewerCountList: [],\n        viewerPageCount: 0,\n      };\n    }\n    case SET_VIEWER_COLUMN_COUNT_LIST: {\n      const { countList } = payload;\n      return {\n        ...state,\n        viewerCountList: [...countList],\n      };\n    }\n    case SET_VIEWER_PAGE_COUNT: {\n      const { pageCount } = payload;\n      return {\n        ...state,\n        viewerPageCount: pageCount,\n      };\n    }\n    case SET_COUNT_UP_VIEWER_PAGE_COUNT: {\n      return {\n        ...state,\n        viewerPageCount: state.viewerPageCount + 1,\n      };\n    }\n    case SET_COUNT_DOWN_VIEWER_PAGE_COUNT: {\n      return {\n        ...state,\n        viewerPageCount: state.viewerPageCount - 1,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n","import { ReducerAction } from '../interfaces';\nimport { ViewerSettingState } from '../interfaces/viewer';\n\nimport { defaultColor } from '../styles';\nimport { FONT_SIZE_RANGE, WIDTH_RATIO_RANGE, LINE_HEIGHT_RANGE } from '../constants/viewer';\n\nexport const initialState: ViewerSettingState = {\n  fontSize: FONT_SIZE_RANGE.MIN,\n  widthRatio: WIDTH_RATIO_RANGE.MAX,\n  lineHeight: LINE_HEIGHT_RANGE.MIN,\n  backgroundColor: defaultColor,\n};\n\n// Action types\nexport const SET_FONT_SIZE = 'viewerSetting/SET_FONT_SIZE';\nexport const SET_WIDTH_RATIO = 'viewerSetting/SET_WIDTH_RATIO';\nexport const SET_LINE_HEIGHT = 'viewerSetting/SET_LINE_HEIGHT';\nexport const SET_BACKGROUND_COLOR = 'viewerSetting/SET_VIEWER_SETTING_BACKGROUND_COLOR';\n\n// Action creators\nexport const setViewerSettingFontSize = (fontSize: number) => ({\n  type: SET_FONT_SIZE,\n  payload: {\n    fontSize,\n  },\n});\n\nexport const setViewerSettingWidthRatio = (widthRatio: number) => ({\n  type: SET_WIDTH_RATIO,\n  payload: {\n    widthRatio,\n  },\n});\n\nexport const setViewerSettingLineHeight = (lineHeight: number) => ({\n  type: SET_LINE_HEIGHT,\n  payload: {\n    lineHeight,\n  },\n});\n\nexport const setViewerSettingBackgroundColor = (color: string) => ({\n  type: SET_BACKGROUND_COLOR,\n  payload: {\n    backgroundColor: color,\n  },\n});\n\nexport default (state = initialState, action: ReducerAction): ViewerSettingState => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_FONT_SIZE: {\n      const { fontSize } = payload;\n      return {\n        ...state,\n        fontSize,\n      };\n    }\n    case SET_WIDTH_RATIO: {\n      const { widthRatio } = payload;\n      return {\n        ...state,\n        widthRatio,\n      };\n    }\n    case SET_LINE_HEIGHT: {\n      const { lineHeight } = payload;\n      return {\n        ...state,\n        lineHeight,\n      };\n    }\n    case SET_BACKGROUND_COLOR: {\n      const { backgroundColor } = payload;\n      return {\n        ...state,\n        backgroundColor,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n","export const defaultColor = 'white';\nexport const subColor = '#80808080';\nexport const titleFontSize = '1.3em';\n","import styled from 'styled-components';\n\nimport { defaultColor, subColor } from './index';\nimport { VIEWER_HEIGHT_RATIO, VIEWER_PAGE_GAP } from '../constants/viewer';\n\nexport const ViewerMenu = styled.div`\n  width: 100%;\n  height: ${(100 - VIEWER_HEIGHT_RATIO) / 2 - 1}%;\n  position: fixed;\n  display: flex;\n  border-top: 1px solid ${subColor};\n  border-bottom: 1px solid ${subColor};\n  background-color: ${defaultColor};\n  z-index: 5;\n`;\n\nexport const ViewerArticle = styled.article`\n  box-sizing: border-box;\n  visibility: visible;\n  vertical-align: top;\n  white-space: initial;\n  display: inline-block;\n  width: ${(props) => props.styleProps.width}px;\n  height: ${(props) => props.styleProps.height}px;\n  font-size: ${(props) => props.styleProps.fontSize}em;\n  line-height: ${(props) => props.styleProps.lineHeight}em;\n`;\n\nexport const ViewerSection = styled.section`\n  height: 100%;\n  column-gap: ${VIEWER_PAGE_GAP}px;\n  column-fill: auto;\n  column-width: ${(props) => props.styleProps.width}px;\n`;\n\nexport const ViewerContents = styled.div`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\n\nexport const ViewerButton = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n`;\n\nexport const ViewerSettingItem = styled.div`\n  height: 3em;\n  text-align: center;\n  padding: .4em;\n  border-bottom: 1px solid ${subColor};\n  margin: 0;\n  display: flex;\n  &:nth-last-child(1) {\n    border-bottom: initial;\n  }\n`;\n\nexport const ViewerSettingLabel = styled.div`\n  margin: auto .5em auto 0;\n`;\n\nexport const ViewerSettingValue = styled.div`\n  margin: auto auto auto 0;\n`;\n","module.exports = require(\"@ridi/epub-parser\");","module.exports = require(\"axios\");","module.exports = require(\"lodash.debounce\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAEA;AAYA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AAZA;AAcA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;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EA;AACA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9MA;AACA;AACA;AAFA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AAtCA;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AAjCA;AAmCA;;;;;;;;;;;;ACrFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChEA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}